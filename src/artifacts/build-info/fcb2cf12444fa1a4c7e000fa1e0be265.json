{"id":"fcb2cf12444fa1a4c7e000fa1e0be265","_format":"hh-sol-build-info-1","solcVersion":"0.8.21","solcLongVersion":"0.8.21+commit.d9974bed","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"../token/ERC20/extensions/IERC20Metadata.sol\";\n\n/**\n * @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\n */\ninterface IERC4626 is IERC20, IERC20Metadata {\n    event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares);\n\n    event Withdraw(\n        address indexed sender,\n        address indexed receiver,\n        address indexed owner,\n        uint256 assets,\n        uint256 shares\n    );\n\n    /**\n     * @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n     *\n     * - MUST be an ERC-20 token contract.\n     * - MUST NOT revert.\n     */\n    function asset() external view returns (address assetTokenAddress);\n\n    /**\n     * @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n     *\n     * - SHOULD include any compounding that occurs from yield.\n     * - MUST be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT revert.\n     */\n    function totalAssets() external view returns (uint256 totalManagedAssets);\n\n    /**\n     * @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToShares(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n     * scenario where all the conditions are met.\n     *\n     * - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n     * - MUST NOT show any variations depending on the caller.\n     * - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n     * - MUST NOT revert.\n     *\n     * NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n     * “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n     * from.\n     */\n    function convertToAssets(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n     * through a deposit call.\n     *\n     * - MUST return a limited value if receiver is subject to some deposit limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n     * - MUST NOT revert.\n     */\n    function maxDeposit(address receiver) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n     *   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n     *   in the same transaction.\n     * - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n     *   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewDeposit(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   deposit execution, and are accounted for during deposit.\n     * - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function deposit(uint256 assets, address receiver) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n     * - MUST return a limited value if receiver is subject to some mint limit.\n     * - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n     * - MUST NOT revert.\n     */\n    function maxMint(address receiver) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n     * current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n     *   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n     *   same transaction.\n     * - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n     *   would be accepted, regardless if the user has enough tokens approved, etc.\n     * - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by minting.\n     */\n    function previewMint(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n     *\n     * - MUST emit the Deposit event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n     *   execution, and are accounted for during mint.\n     * - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n     *   approving enough underlying tokens to the Vault contract, etc).\n     *\n     * NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token.\n     */\n    function mint(uint256 shares, address receiver) external returns (uint256 assets);\n\n    /**\n     * @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n     * Vault, through a withdraw call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxWithdraw(address owner) external view returns (uint256 maxAssets);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n     *   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n     *   called\n     *   in the same transaction.\n     * - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n     *   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by depositing.\n     */\n    function previewWithdraw(uint256 assets) external view returns (uint256 shares);\n\n    /**\n     * @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   withdraw execution, and are accounted for during withdraw.\n     * - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function withdraw(uint256 assets, address receiver, address owner) external returns (uint256 shares);\n\n    /**\n     * @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n     * through a redeem call.\n     *\n     * - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n     * - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n     * - MUST NOT revert.\n     */\n    function maxRedeem(address owner) external view returns (uint256 maxShares);\n\n    /**\n     * @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n     * given current on-chain conditions.\n     *\n     * - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n     *   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n     *   same transaction.\n     * - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n     *   redemption would be accepted, regardless if the user has enough shares, etc.\n     * - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n     * - MUST NOT revert.\n     *\n     * NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n     * share price or some other type of condition, meaning the depositor will lose assets by redeeming.\n     */\n    function previewRedeem(uint256 shares) external view returns (uint256 assets);\n\n    /**\n     * @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n     *\n     * - MUST emit the Withdraw event.\n     * - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n     *   redeem execution, and are accounted for during redeem.\n     * - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n     *   not having enough shares, etc).\n     *\n     * NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n     * Those methods should be performed separately.\n     */\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256 assets);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC4626.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20, IERC20Metadata, ERC20} from \"../ERC20.sol\";\nimport {SafeERC20} from \"../utils/SafeERC20.sol\";\nimport {IERC4626} from \"../../../interfaces/IERC4626.sol\";\nimport {Math} from \"../../../utils/math/Math.sol\";\n\n/**\n * @dev Implementation of the ERC4626 \"Tokenized Vault Standard\" as defined in\n * https://eips.ethereum.org/EIPS/eip-4626[EIP-4626].\n *\n * This extension allows the minting and burning of \"shares\" (represented using the ERC20 inheritance) in exchange for\n * underlying \"assets\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends\n * the ERC20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this\n * contract and not the \"assets\" token which is an independent contract.\n *\n * [CAUTION]\n * ====\n * In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning\n * with a \"donation\" to the vault that inflates the price of a share. This is variously known as a donation or inflation\n * attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial\n * deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may\n * similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by\n * verifying the amount received is as expected, using a wrapper that performs these checks such as\n * https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router].\n *\n * Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()`\n * corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault\n * decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself\n * determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset\n * (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's\n * donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more\n * expensive than it is profitable. More details about the underlying math can be found\n * xref:erc4626.adoc#inflation-attack[here].\n *\n * The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued\n * to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets\n * will cause the first user to exit to experience reduced losses in detriment to the last users that will experience\n * bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the\n * `_convertToShares` and `_convertToAssets` functions.\n *\n * To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide].\n * ====\n */\nabstract contract ERC4626 is ERC20, IERC4626 {\n    using Math for uint256;\n\n    IERC20 private immutable _asset;\n    uint8 private immutable _underlyingDecimals;\n\n    /**\n     * @dev Attempted to deposit more assets than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxDeposit(address receiver, uint256 assets, uint256 max);\n\n    /**\n     * @dev Attempted to mint more shares than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxMint(address receiver, uint256 shares, uint256 max);\n\n    /**\n     * @dev Attempted to withdraw more assets than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxWithdraw(address owner, uint256 assets, uint256 max);\n\n    /**\n     * @dev Attempted to redeem more shares than the max amount for `receiver`.\n     */\n    error ERC4626ExceededMaxRedeem(address owner, uint256 shares, uint256 max);\n\n    /**\n     * @dev Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777).\n     */\n    constructor(IERC20 asset_) {\n        (bool success, uint8 assetDecimals) = _tryGetAssetDecimals(asset_);\n        _underlyingDecimals = success ? assetDecimals : 18;\n        _asset = asset_;\n    }\n\n    /**\n     * @dev Attempts to fetch the asset decimals. A return value of false indicates that the attempt failed in some way.\n     */\n    function _tryGetAssetDecimals(IERC20 asset_) private view returns (bool, uint8) {\n        (bool success, bytes memory encodedDecimals) = address(asset_).staticcall(\n            abi.encodeCall(IERC20Metadata.decimals, ())\n        );\n        if (success && encodedDecimals.length >= 32) {\n            uint256 returnedDecimals = abi.decode(encodedDecimals, (uint256));\n            if (returnedDecimals <= type(uint8).max) {\n                return (true, uint8(returnedDecimals));\n            }\n        }\n        return (false, 0);\n    }\n\n    /**\n     * @dev Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This\n     * \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the\n     * asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals.\n     *\n     * See {IERC20Metadata-decimals}.\n     */\n    function decimals() public view virtual override(IERC20Metadata, ERC20) returns (uint8) {\n        return _underlyingDecimals + _decimalsOffset();\n    }\n\n    /** @dev See {IERC4626-asset}. */\n    function asset() public view virtual returns (address) {\n        return address(_asset);\n    }\n\n    /** @dev See {IERC4626-totalAssets}. */\n    function totalAssets() public view virtual returns (uint256) {\n        return _asset.balanceOf(address(this));\n    }\n\n    /** @dev See {IERC4626-convertToShares}. */\n    function convertToShares(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-convertToAssets}. */\n    function convertToAssets(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-maxDeposit}. */\n    function maxDeposit(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /** @dev See {IERC4626-maxMint}. */\n    function maxMint(address) public view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /** @dev See {IERC4626-maxWithdraw}. */\n    function maxWithdraw(address owner) public view virtual returns (uint256) {\n        return _convertToAssets(balanceOf(owner), Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-maxRedeem}. */\n    function maxRedeem(address owner) public view virtual returns (uint256) {\n        return balanceOf(owner);\n    }\n\n    /** @dev See {IERC4626-previewDeposit}. */\n    function previewDeposit(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-previewMint}. */\n    function previewMint(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Ceil);\n    }\n\n    /** @dev See {IERC4626-previewWithdraw}. */\n    function previewWithdraw(uint256 assets) public view virtual returns (uint256) {\n        return _convertToShares(assets, Math.Rounding.Ceil);\n    }\n\n    /** @dev See {IERC4626-previewRedeem}. */\n    function previewRedeem(uint256 shares) public view virtual returns (uint256) {\n        return _convertToAssets(shares, Math.Rounding.Floor);\n    }\n\n    /** @dev See {IERC4626-deposit}. */\n    function deposit(uint256 assets, address receiver) public virtual returns (uint256) {\n        uint256 maxAssets = maxDeposit(receiver);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxDeposit(receiver, assets, maxAssets);\n        }\n\n        uint256 shares = previewDeposit(assets);\n        _deposit(_msgSender(), receiver, assets, shares);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-mint}.\n     *\n     * As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n     * In this case, the shares will be minted without requiring any assets to be deposited.\n     */\n    function mint(uint256 shares, address receiver) public virtual returns (uint256) {\n        uint256 maxShares = maxMint(receiver);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxMint(receiver, shares, maxShares);\n        }\n\n        uint256 assets = previewMint(shares);\n        _deposit(_msgSender(), receiver, assets, shares);\n\n        return assets;\n    }\n\n    /** @dev See {IERC4626-withdraw}. */\n    function withdraw(uint256 assets, address receiver, address owner) public virtual returns (uint256) {\n        uint256 maxAssets = maxWithdraw(owner);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxWithdraw(owner, assets, maxAssets);\n        }\n\n        uint256 shares = previewWithdraw(assets);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-redeem}. */\n    function redeem(uint256 shares, address receiver, address owner) public virtual returns (uint256) {\n        uint256 maxShares = maxRedeem(owner);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxRedeem(owner, shares, maxShares);\n        }\n\n        uint256 assets = previewRedeem(shares);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return assets;\n    }\n\n    /**\n     * @dev Internal conversion function (from assets to shares) with support for rounding direction.\n     */\n    function _convertToShares(uint256 assets, Math.Rounding rounding) internal view virtual returns (uint256) {\n        return assets.mulDiv(totalSupply() + 10 ** _decimalsOffset(), totalAssets() + 1, rounding);\n    }\n\n    /**\n     * @dev Internal conversion function (from shares to assets) with support for rounding direction.\n     */\n    function _convertToAssets(uint256 shares, Math.Rounding rounding) internal view virtual returns (uint256) {\n        return shares.mulDiv(totalAssets() + 1, totalSupply() + 10 ** _decimalsOffset(), rounding);\n    }\n\n    /**\n     * @dev Deposit/mint common workflow.\n     */\n    function _deposit(address caller, address receiver, uint256 assets, uint256 shares) internal virtual {\n        // If _asset is ERC777, `transferFrom` can trigger a reentrancy BEFORE the transfer happens through the\n        // `tokensToSend` hook. On the other hand, the `tokenReceived` hook, that is triggered after the transfer,\n        // calls the vault, which is assumed not malicious.\n        //\n        // Conclusion: we need to do the transfer before we mint so that any reentrancy would happen before the\n        // assets are transferred and before the shares are minted, which is a valid state.\n        // slither-disable-next-line reentrancy-no-eth\n        SafeERC20.safeTransferFrom(_asset, caller, address(this), assets);\n        _mint(receiver, shares);\n\n        emit Deposit(caller, receiver, assets, shares);\n    }\n\n    /**\n     * @dev Withdraw/redeem common workflow.\n     */\n    function _withdraw(\n        address caller,\n        address receiver,\n        address owner,\n        uint256 assets,\n        uint256 shares\n    ) internal virtual {\n        if (caller != owner) {\n            _spendAllowance(owner, caller, shares);\n        }\n\n        // If _asset is ERC777, `transfer` can trigger a reentrancy AFTER the transfer happens through the\n        // `tokensReceived` hook. On the other hand, the `tokensToSend` hook, that is triggered before the transfer,\n        // calls the vault, which is assumed not malicious.\n        //\n        // Conclusion: we need to do the transfer after the burn so that any reentrancy would happen after the\n        // shares are burned and after the assets are transferred, which is a valid state.\n        _burn(owner, shares);\n        SafeERC20.safeTransfer(_asset, receiver, assets);\n\n        emit Withdraw(caller, receiver, owner, assets, shares);\n    }\n\n    function _decimalsOffset() internal view virtual returns (uint8) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/ERC4626Fees.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n\r\n/// @dev ERC4626 vault with entry/exit fees expressed in https://en.wikipedia.org/wiki/Basis_point[basis point (bp)].\r\nabstract contract ERC4626Fees is ERC4626, Ownable {\r\n    uint256 public entryFeeBasisPoints;\r\n    uint256 public exitFeeBasisPoints;\r\n    \r\n    constructor(uint256 _entryBasisPoints, uint256 _exitBasisPoints)Ownable(msg.sender){\r\n        entryFeeBasisPoints = _entryBasisPoints;\r\n        exitFeeBasisPoints = _exitBasisPoints;\r\n    }\r\n    \r\n    using Math for uint256;\r\n\r\n    uint256 private constant _BASIS_POINT_SCALE = 1e4;\r\n   \r\n    // === Overrides ===\r\n\r\n    /// @dev Preview taking an entry fee on deposit. See {IERC4626-previewDeposit}.\r\n    function previewDeposit(uint256 assets) public view virtual override returns (uint256) {\r\n        uint256 fee = _feeOnTotal(assets, _entryFeeBasisPoints());\r\n        return super.previewDeposit(assets - fee);\r\n    }\r\n\r\n    /// @dev Preview adding an entry fee on mint. See {IERC4626-previewMint}.\r\n    function previewMint(uint256 shares) public view virtual override returns (uint256) {\r\n        uint256 assets = super.previewMint(shares);\r\n        return assets + _feeOnRaw(assets, _entryFeeBasisPoints());\r\n    }\r\n\r\n    /// @dev Preview adding an exit fee on withdraw. See {IERC4626-previewWithdraw}.\r\n    function previewWithdraw(uint256 assets) public view virtual override returns (uint256) {\r\n        uint256 fee = _feeOnRaw(assets, _exitFeeBasisPoints());\r\n        return super.previewWithdraw(assets + fee);\r\n    }\r\n\r\n    /// @dev Preview taking an exit fee on redeem. See {IERC4626-previewRedeem}.\r\n    function previewRedeem(uint256 shares) public view virtual override returns (uint256) {\r\n        uint256 assets = super.previewRedeem(shares);\r\n        return assets - _feeOnTotal(assets, _exitFeeBasisPoints());\r\n    }\r\n\r\n    /// @dev Send entry fee to {_entryFeeRecipient}. See {IERC4626-_deposit}.\r\n    function _deposit(address caller, address receiver, uint256 assets, uint256 shares) internal virtual override {\r\n        uint256 fee = _feeOnTotal(assets, _entryFeeBasisPoints());\r\n        address recipient = _entryFeeRecipient();\r\n\r\n        super._deposit(caller, receiver, assets, shares);\r\n\r\n        if (fee > 0 && recipient != address(this)) {\r\n            SafeERC20.safeTransfer(IERC20(asset()), recipient, fee);\r\n        }\r\n    }\r\n\r\n    /// @dev Send exit fee to {_exitFeeRecipient}. See {IERC4626-_deposit}.\r\n    function _withdraw(\r\n        address caller,\r\n        address receiver,\r\n        address owner,\r\n        uint256 assets,\r\n        uint256 shares\r\n    ) internal virtual override {\r\n        uint256 fee = _feeOnRaw(assets, _exitFeeBasisPoints());\r\n        address recipient = _exitFeeRecipient();\r\n\r\n        super._withdraw(caller, receiver, owner, assets, shares);\r\n\r\n        if (fee > 0 && recipient != address(this)) {\r\n            SafeERC20.safeTransfer(IERC20(asset()), recipient, fee);\r\n        }\r\n    }\r\n\r\n    // === Fee configuration ===\r\n\r\n    function _entryFeeBasisPoints() internal view virtual returns (uint256) {\r\n        return entryFeeBasisPoints;\r\n    }\r\n    function _exitFeeBasisPoints() internal view virtual returns (uint256) {\r\n        return exitFeeBasisPoints;\r\n    }\r\n\r\n    function _entryFeeRecipient() internal view virtual returns (address) {\r\n        return address(this);\r\n    }\r\n    function _exitFeeRecipient() internal view virtual returns (address) {\r\n        return address(this);\r\n    }\r\n\r\n    // === Fee operations ===\r\n\r\n    /// @dev Calculates the fees that should be added to an amount `assets` that does not already include fees.\r\n    /// Used in {IERC4626-mint} and {IERC4626-withdraw} operations.\r\n    function _feeOnRaw(uint256 assets, uint256 feeBasisPoints) private pure returns (uint256) {\r\n        return assets.mulDiv(feeBasisPoints, _BASIS_POINT_SCALE, Math.Rounding.Ceil);\r\n    }\r\n\r\n    /// @dev Calculates the fee part of an amount `assets` that already includes fees.\r\n    /// Used in {IERC4626-deposit} and {IERC4626-redeem} operations.\r\n    function _feeOnTotal(uint256 assets, uint256 feeBasisPoints) private pure returns (uint256) {\r\n        return assets.mulDiv(feeBasisPoints, feeBasisPoints + _BASIS_POINT_SCALE, Math.Rounding.Ceil);\r\n    }\r\n\r\n    \r\n}"},"contracts/Spark.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\r\n\r\ncontract Spark is ERC20, Ownable, ERC20Permit {\r\n    constructor()\r\n        ERC20(\"Spark\", \"sDAI\")\r\n        Ownable(msg.sender)\r\n        ERC20Permit(\"Spark\")\r\n    {}\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}"},"contracts/Vault.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.21;\n\nimport \"./ERC4626Fees.sol\";\n\ncontract Vault is ERC4626Fees {\n    \n    uint32 public stakeDuration;\n\n    constructor(IERC20 _asset, uint256 _entryBasisPoints,uint256 _exitBasisPoints, uint32 _duration) ERC4626Fees(_entryBasisPoints,_exitBasisPoints) ERC4626(_asset) ERC20(\"Vault Ocean Token\", \"vOCT\") {\n        stakeDuration = _duration;\n    }\n\n    mapping(address lender => uint32 epoch) public stakeTimeEpochMapping;\n    \n    function getWithdrawEpoch() public view returns(uint32){\n        return stakeTimeEpochMapping[msg.sender] + stakeDuration; \n    }\n\n    function setDuration(uint32 _duration) public onlyOwner{\n        stakeDuration = _duration;\n    }\n\n    function _blockTimestamp() internal view virtual returns(uint32){\n        return uint32(block.timestamp);\n    }\n\n    \n\n\n\n    /** @dev See {IERC4626-deposit}. */\n    function deposit(uint256 assets, address receiver) public virtual override  returns (uint256) {\n        uint256 maxAssets = maxDeposit(receiver);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxDeposit(receiver, assets, maxAssets);\n        }\n\n        uint256 shares = previewDeposit(assets);\n        _deposit(_msgSender(), receiver, assets, shares);\n        afterDeposit(assets, shares);\n\n        // overridden\n        stakeTimeEpochMapping[msg.sender] = uint32(block.timestamp);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-mint}.\n     *\n     * As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n     * In this case, the shares will be minted without requiring any assets to be deposited.\n     */\n    function mint(uint256 shares, address receiver) public virtual override returns (uint256) {\n        uint256 maxShares = maxMint(receiver);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxMint(receiver, shares, maxShares);\n        }\n\n        uint256 assets = previewMint(shares);\n        _deposit(_msgSender(), receiver, assets, shares);\n        afterDeposit(assets, shares);\n        return assets;\n\n    }\n\n    /** @dev See {IERC4626-withdraw}. */\n    function withdraw(uint256 assets, address receiver, address owner) public virtual override returns (uint256) {\n        // overridden\n        require(getWithdrawEpoch() <= _blockTimestamp(),\"Not eligible right now, funds can be redeem after locking period\");\n\n        uint256 maxAssets = maxWithdraw(owner);\n        if (assets > maxAssets) {\n            revert ERC4626ExceededMaxWithdraw(owner, assets, maxAssets);\n        }\n\n        uint256 shares = previewWithdraw(assets);\n        beforeWithdraw(assets, shares);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return shares;\n    }\n\n    /** @dev See {IERC4626-redeem}. */\n    function redeem(uint256 shares, address receiver, address owner) public virtual override returns (uint256) {\n        // overridden\n        require(getWithdrawEpoch() <= _blockTimestamp(),\"Not eligible right now, funds can be redeem after locking period\");\n\n        \n        // require(\n        //     getWithdrawEpoch() <= _blockTimestamp(),\n        //     string(abi.encodePacked(\"You can withdraw funds after this \", getWithdrawEpoch(), \"Epoch\"))\n        // );\n\n        uint256 maxShares = maxRedeem(owner);\n        if (shares > maxShares) {\n            revert ERC4626ExceededMaxRedeem(owner, shares, maxShares);\n        }\n\n        uint256 assets = previewRedeem(shares);\n        beforeWithdraw(assets, shares);\n        _withdraw(_msgSender(), receiver, owner, assets, shares);\n\n        return assets;\n    }\n\n    function changeEntryFee(uint256 _fee)public onlyOwner {\n        entryFeeBasisPoints = _fee;\n    }\n    function changeExitFee(uint256 _fee)public onlyOwner {\n        exitFeeBasisPoints = _fee;\n    }\n\n    /*//////////////////////////////////////////////////////////////\n                          INTERNAL HOOKS LOGIC\n    //////////////////////////////////////////////////////////////*/\n\n    // function afterDeposit(uint256 assets, uint256 shares) internal virtual {}\n    function afterDeposit(uint256 assets, uint256 shares) internal virtual {\n        // uint256 interest = assets /10;\n        // SafeERC20.safeTransferFrom(IERC20(asset()),owner(), address(this),interest);\n    }\n    \n    function beforeWithdraw(uint256 assets, uint256 shares) internal virtual {\n        //  uint256 interest = assets /10;\n        // SafeERC20.safeTransferFrom(IERC20(asset()),owner(), address(this),interest);\n    \n    }\n\n\n    // function afterDeposit(uint256 assets, uint256 shares) internal virtual {}\n    \n    // function beforeWithdraw(uint256 assets, uint256 shares) internal virtual {}   \n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2538],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":2539,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,2538],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","exportedSymbols":{"IERC20":[1072],"IERC20Metadata":[1937],"IERC4626":[317]},"id":318,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":318,"sourceUnit":1073,"src":"133:49:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"../token/ERC20/extensions/IERC20Metadata.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":318,"sourceUnit":1938,"src":"183:76:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"191:14:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["420:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"420:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"420:6:1"},{"baseName":{"id":157,"name":"IERC20Metadata","nameLocations":["428:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"428:14:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"428:14:1"}],"canonicalName":"IERC4626","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"261:136:1","text":" @dev Interface of the ERC4626 \"Tokenized Vault Standard\", as defined in\n https://eips.ethereum.org/EIPS/eip-4626[ERC-4626]."},"fullyImplemented":false,"id":317,"linearizedBaseContracts":[317,1937,1072],"name":"IERC4626","nameLocation":"408:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"eventSelector":"dcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7","id":168,"name":"Deposit","nameLocation":"455:7:1","nodeType":"EventDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":160,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"479:6:1","nodeType":"VariableDeclaration","scope":168,"src":"463:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":159,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":162,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"503:5:1","nodeType":"VariableDeclaration","scope":168,"src":"487:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"518:6:1","nodeType":"VariableDeclaration","scope":168,"src":"510:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"510:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":166,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"534:6:1","nodeType":"VariableDeclaration","scope":168,"src":"526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":165,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"462:79:1"},"src":"449:93:1"},{"anonymous":false,"eventSelector":"fbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db","id":180,"name":"Withdraw","nameLocation":"554:8:1","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"588:6:1","nodeType":"VariableDeclaration","scope":180,"src":"572:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":true,"mutability":"mutable","name":"receiver","nameLocation":"620:8:1","nodeType":"VariableDeclaration","scope":180,"src":"604:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"604:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"654:5:1","nodeType":"VariableDeclaration","scope":180,"src":"638:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"638:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"677:6:1","nodeType":"VariableDeclaration","scope":180,"src":"669:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"669:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"indexed":false,"mutability":"mutable","name":"shares","nameLocation":"701:6:1","nodeType":"VariableDeclaration","scope":180,"src":"693:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"562:151:1"},"src":"548:166:1"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"720:207:1","text":" @dev Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing.\n - MUST be an ERC-20 token contract.\n - MUST NOT revert."},"functionSelector":"38d52e0f","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"941:5:1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"946:2:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"assetTokenAddress","nameLocation":"980:17:1","nodeType":"VariableDeclaration","scope":186,"src":"972:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"972:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"971:27:1"},"scope":317,"src":"932:67:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1005:286:1","text":" @dev Returns the total amount of the underlying asset that is “managed” by Vault.\n - SHOULD include any compounding that occurs from yield.\n - MUST be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT revert."},"functionSelector":"01e1d114","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"1305:11:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"1316:2:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"totalManagedAssets","nameLocation":"1350:18:1","nodeType":"VariableDeclaration","scope":192,"src":"1342:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1341:28:1"},"scope":317,"src":"1296:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"1376:720:1","text":" @dev Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"c6e6f592","id":200,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"2110:15:1","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"assets","nameLocation":"2134:6:1","nodeType":"VariableDeclaration","scope":200,"src":"2126:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2125:16:1"},"returnParameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"shares","nameLocation":"2173:6:1","nodeType":"VariableDeclaration","scope":200,"src":"2165:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2164:16:1"},"scope":317,"src":"2101:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2187:720:1","text":" @dev Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal\n scenario where all the conditions are met.\n - MUST NOT be inclusive of any fees that are charged against assets in the Vault.\n - MUST NOT show any variations depending on the caller.\n - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange.\n - MUST NOT revert.\n NOTE: This calculation MAY NOT reflect the “per-user” price-per-share, and instead should reflect the\n “average-user’s” price-per-share, meaning what the average user should expect to see when exchanging to and\n from."},"functionSelector":"07a2d13a","id":208,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"2921:15:1","nodeType":"FunctionDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"shares","nameLocation":"2945:6:1","nodeType":"VariableDeclaration","scope":208,"src":"2937:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2936:16:1"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"assets","nameLocation":"2984:6:1","nodeType":"VariableDeclaration","scope":208,"src":"2976:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2976:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2975:16:1"},"scope":317,"src":"2912:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"2998:386:1","text":" @dev Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver,\n through a deposit call.\n - MUST return a limited value if receiver is subject to some deposit limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited.\n - MUST NOT revert."},"functionSelector":"402d267d","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"3398:10:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"receiver","nameLocation":"3417:8:1","nodeType":"VariableDeclaration","scope":216,"src":"3409:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"3409:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3408:18:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"maxAssets","nameLocation":"3458:9:1","nodeType":"VariableDeclaration","scope":216,"src":"3450:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"3450:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3449:19:1"},"scope":317,"src":"3389:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3475:1012:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given\n current on-chain conditions.\n - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit\n   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called\n   in the same transaction.\n - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the\n   deposit would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"ef8b30f7","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"4501:14:1","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"assets","nameLocation":"4524:6:1","nodeType":"VariableDeclaration","scope":224,"src":"4516:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4515:16:1"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"shares","nameLocation":"4563:6:1","nodeType":"VariableDeclaration","scope":224,"src":"4555:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":221,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:16:1"},"scope":317,"src":"4492:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"4577:651:1","text":" @dev Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   deposit execution, and are accounted for during deposit.\n - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"6e553f65","id":234,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"5242:7:1","nodeType":"FunctionDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"assets","nameLocation":"5258:6:1","nodeType":"VariableDeclaration","scope":234,"src":"5250:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":226,"name":"uint256","nodeType":"ElementaryTypeName","src":"5250:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"receiver","nameLocation":"5274:8:1","nodeType":"VariableDeclaration","scope":234,"src":"5266:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5249:34:1"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"shares","nameLocation":"5310:6:1","nodeType":"VariableDeclaration","scope":234,"src":"5302:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5301:16:1"},"scope":317,"src":"5233:85:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"5324:341:1","text":" @dev Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call.\n - MUST return a limited value if receiver is subject to some mint limit.\n - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted.\n - MUST NOT revert."},"functionSelector":"c63d75b6","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"5679:7:1","nodeType":"FunctionDefinition","parameters":{"id":238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"receiver","nameLocation":"5695:8:1","nodeType":"VariableDeclaration","scope":242,"src":"5687:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":236,"name":"address","nodeType":"ElementaryTypeName","src":"5687:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5686:18:1"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"maxShares","nameLocation":"5736:9:1","nodeType":"VariableDeclaration","scope":242,"src":"5728:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5728:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5727:19:1"},"scope":317,"src":"5670:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"5753:984:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given\n current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call\n   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the\n   same transaction.\n - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint\n   would be accepted, regardless if the user has enough tokens approved, etc.\n - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by minting."},"functionSelector":"b3d7f6b9","id":250,"implemented":false,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"6751:11:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"shares","nameLocation":"6771:6:1","nodeType":"VariableDeclaration","scope":250,"src":"6763:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6763:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6762:16:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"assets","nameLocation":"6810:6:1","nodeType":"VariableDeclaration","scope":250,"src":"6802:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6801:16:1"},"scope":317,"src":"6742:76:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"6824:642:1","text":" @dev Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens.\n - MUST emit the Deposit event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint\n   execution, and are accounted for during mint.\n - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not\n   approving enough underlying tokens to the Vault contract, etc).\n NOTE: most implementations will require pre-approval of the Vault with the Vault’s underlying asset token."},"functionSelector":"94bf804d","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"7480:4:1","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"shares","nameLocation":"7493:6:1","nodeType":"VariableDeclaration","scope":260,"src":"7485:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"7485:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"receiver","nameLocation":"7509:8:1","nodeType":"VariableDeclaration","scope":260,"src":"7501:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7484:34:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"assets","nameLocation":"7545:6:1","nodeType":"VariableDeclaration","scope":260,"src":"7537:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"7537:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7536:16:1"},"scope":317,"src":"7471:82:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"7559:293:1","text":" @dev Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the\n Vault, through a withdraw call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"ce96cb77","id":268,"implemented":false,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"7866:11:1","nodeType":"FunctionDefinition","parameters":{"id":264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":263,"mutability":"mutable","name":"owner","nameLocation":"7886:5:1","nodeType":"VariableDeclaration","scope":268,"src":"7878:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":262,"name":"address","nodeType":"ElementaryTypeName","src":"7878:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7877:15:1"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"maxAssets","nameLocation":"7924:9:1","nodeType":"VariableDeclaration","scope":268,"src":"7916:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7915:19:1"},"scope":317,"src":"7857:78:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"7941:1034:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block,\n given current on-chain conditions.\n - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw\n   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if\n   called\n   in the same transaction.\n - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though\n   the withdrawal would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by depositing."},"functionSelector":"0a28a477","id":276,"implemented":false,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"8989:15:1","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"assets","nameLocation":"9013:6:1","nodeType":"VariableDeclaration","scope":276,"src":"9005:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":270,"name":"uint256","nodeType":"ElementaryTypeName","src":"9005:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9004:16:1"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"shares","nameLocation":"9052:6:1","nodeType":"VariableDeclaration","scope":276,"src":"9044:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"9044:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9043:16:1"},"scope":317,"src":"8980:80:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"9066:670:1","text":" @dev Burns shares from owner and sends exactly assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   withdraw execution, and are accounted for during withdraw.\n - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"b460af94","id":288,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"9750:8:1","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"assets","nameLocation":"9767:6:1","nodeType":"VariableDeclaration","scope":288,"src":"9759:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"9759:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"receiver","nameLocation":"9783:8:1","nodeType":"VariableDeclaration","scope":288,"src":"9775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":280,"name":"address","nodeType":"ElementaryTypeName","src":"9775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"owner","nameLocation":"9801:5:1","nodeType":"VariableDeclaration","scope":288,"src":"9793:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"9793:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9758:49:1"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"shares","nameLocation":"9834:6:1","nodeType":"VariableDeclaration","scope":288,"src":"9826:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"9826:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9825:16:1"},"scope":317,"src":"9741:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"9848:381:1","text":" @dev Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault,\n through a redeem call.\n - MUST return a limited value if owner is subject to some withdrawal limit or timelock.\n - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock.\n - MUST NOT revert."},"functionSelector":"d905777e","id":296,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"10243:9:1","nodeType":"FunctionDefinition","parameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"owner","nameLocation":"10261:5:1","nodeType":"VariableDeclaration","scope":296,"src":"10253:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"10253:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10252:15:1"},"returnParameters":{"id":295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"maxShares","nameLocation":"10299:9:1","nodeType":"VariableDeclaration","scope":296,"src":"10291:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":293,"name":"uint256","nodeType":"ElementaryTypeName","src":"10291:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10290:19:1"},"scope":317,"src":"10234:76:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":297,"nodeType":"StructuredDocumentation","src":"10316:1010:1","text":" @dev Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block,\n given current on-chain conditions.\n - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call\n   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the\n   same transaction.\n - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the\n   redemption would be accepted, regardless if the user has enough shares, etc.\n - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees.\n - MUST NOT revert.\n NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in\n share price or some other type of condition, meaning the depositor will lose assets by redeeming."},"functionSelector":"4cdad506","id":304,"implemented":false,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"11340:13:1","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"shares","nameLocation":"11362:6:1","nodeType":"VariableDeclaration","scope":304,"src":"11354:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"11354:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11353:16:1"},"returnParameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"assets","nameLocation":"11401:6:1","nodeType":"VariableDeclaration","scope":304,"src":"11393:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11392:16:1"},"scope":317,"src":"11331:78:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"11415:661:1","text":" @dev Burns exactly shares from owner and sends assets of underlying tokens to receiver.\n - MUST emit the Withdraw event.\n - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the\n   redeem execution, and are accounted for during redeem.\n - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner\n   not having enough shares, etc).\n NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed.\n Those methods should be performed separately."},"functionSelector":"ba087652","id":316,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"12090:6:1","nodeType":"FunctionDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"shares","nameLocation":"12105:6:1","nodeType":"VariableDeclaration","scope":316,"src":"12097:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"12097:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"receiver","nameLocation":"12121:8:1","nodeType":"VariableDeclaration","scope":316,"src":"12113:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"12113:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"owner","nameLocation":"12139:5:1","nodeType":"VariableDeclaration","scope":316,"src":"12131:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":310,"name":"address","nodeType":"ElementaryTypeName","src":"12131:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12096:49:1"},"returnParameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"assets","nameLocation":"12172:6:1","nodeType":"VariableDeclaration","scope":316,"src":"12164:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"12164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:16:1"},"scope":317,"src":"12081:99:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":318,"src":"398:11784:1","usedErrors":[],"usedEvents":[168,180,1006,1015]}],"src":"107:12076:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[342]},"id":343,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":319,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":342,"linearizedBaseContracts":[342],"name":"IERC5267","nameLocation":"143:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"158:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":322,"name":"EIP712DomainChanged","nameLocation":"253:19:2","nodeType":"EventDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"272:2:2"},"src":"247:28:2"},{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"281:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":341,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:2","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[],"src":"447:2:2"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"fields","nameLocation":"517:6:2","nodeType":"VariableDeclaration","scope":341,"src":"510:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":325,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"name","nameLocation":"551:4:2","nodeType":"VariableDeclaration","scope":341,"src":"537:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":327,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"version","nameLocation":"583:7:2","nodeType":"VariableDeclaration","scope":341,"src":"569:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":329,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"chainId","nameLocation":"612:7:2","nodeType":"VariableDeclaration","scope":341,"src":"604:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:2","nodeType":"VariableDeclaration","scope":341,"src":"633:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"salt","nameLocation":"680:4:2","nodeType":"VariableDeclaration","scope":341,"src":"672:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":335,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"extensions","nameLocation":"715:10:2","nodeType":"VariableDeclaration","scope":341,"src":"698:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":338,"nodeType":"ArrayTypeName","src":"698:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:2"},"scope":342,"src":"426:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":343,"src":"133:605:2","usedErrors":[],"usedEvents":[322]}],"src":"107:632:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[479],"IERC20Errors":[384],"IERC721Errors":[432]},"id":480,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":344,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"138:139:3","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":384,"linearizedBaseContracts":[384],"name":"IERC20Errors","nameLocation":"288:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"307:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":354,"name":"ERC20InsufficientBalance","nameLocation":"627:24:3","nodeType":"ErrorDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"sender","nameLocation":"660:6:3","nodeType":"VariableDeclaration","scope":354,"src":"652:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":347,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"balance","nameLocation":"676:7:3","nodeType":"VariableDeclaration","scope":354,"src":"668:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":349,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"needed","nameLocation":"693:6:3","nodeType":"VariableDeclaration","scope":354,"src":"685:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:3"},"src":"621:80:3"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"707:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":359,"name":"ERC20InvalidSender","nameLocation":"870:18:3","nodeType":"ErrorDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"sender","nameLocation":"897:6:3","nodeType":"VariableDeclaration","scope":359,"src":"889:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:3"},"src":"864:41:3"},{"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"911:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":364,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:3","nodeType":"ErrorDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:3","nodeType":"VariableDeclaration","scope":364,"src":"1102:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:3"},"src":"1075:45:3"},{"documentation":{"id":365,"nodeType":"StructuredDocumentation","src":"1126:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":373,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:3","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"spender","nameLocation":"1517:7:3","nodeType":"VariableDeclaration","scope":373,"src":"1509:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:3","nodeType":"VariableDeclaration","scope":373,"src":"1526:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"needed","nameLocation":"1553:6:3","nodeType":"VariableDeclaration","scope":373,"src":"1545:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:3"},"src":"1476:85:3"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"1567:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":378,"name":"ERC20InvalidApprover","nameLocation":"1752:20:3","nodeType":"ErrorDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"approver","nameLocation":"1781:8:3","nodeType":"VariableDeclaration","scope":378,"src":"1773:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:3"},"src":"1746:45:3"},{"documentation":{"id":379,"nodeType":"StructuredDocumentation","src":"1797:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":383,"name":"ERC20InvalidSpender","nameLocation":"2003:19:3","nodeType":"ErrorDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":381,"mutability":"mutable","name":"spender","nameLocation":"2031:7:3","nodeType":"VariableDeclaration","scope":383,"src":"2023:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:3"},"src":"1997:43:3"}],"scope":480,"src":"278:1764:3","usedErrors":[354,359,364,373,378,383],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"2044:141:3","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":432,"linearizedBaseContracts":[432],"name":"IERC721Errors","nameLocation":"2196:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"2216:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":390,"name":"ERC721InvalidOwner","nameLocation":"2446:18:3","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"2473:5:3","nodeType":"VariableDeclaration","scope":390,"src":"2465:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:3"},"src":"2440:40:3"},{"documentation":{"id":391,"nodeType":"StructuredDocumentation","src":"2486:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":395,"name":"ERC721NonexistentToken","nameLocation":"2629:22:3","nodeType":"ErrorDefinition","parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:3","nodeType":"VariableDeclaration","scope":395,"src":"2652:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":392,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:3"},"src":"2623:46:3"},{"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"2675:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":404,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:3","nodeType":"ErrorDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"sender","nameLocation":"3004:6:3","nodeType":"VariableDeclaration","scope":404,"src":"2996:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:3","nodeType":"VariableDeclaration","scope":404,"src":"3012:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"owner","nameLocation":"3037:5:3","nodeType":"VariableDeclaration","scope":404,"src":"3029:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:3"},"src":"2969:75:3"},{"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"3050:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":409,"name":"ERC721InvalidSender","nameLocation":"3213:19:3","nodeType":"ErrorDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"sender","nameLocation":"3241:6:3","nodeType":"VariableDeclaration","scope":409,"src":"3233:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:3"},"src":"3207:42:3"},{"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3255:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":414,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:3","nodeType":"ErrorDefinition","parameters":{"id":413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:3","nodeType":"VariableDeclaration","scope":414,"src":"3447:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:3"},"src":"3419:46:3"},{"documentation":{"id":415,"nodeType":"StructuredDocumentation","src":"3471:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":421,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:3","nodeType":"ErrorDefinition","parameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"operator","nameLocation":"3764:8:3","nodeType":"VariableDeclaration","scope":421,"src":"3756:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:3","nodeType":"VariableDeclaration","scope":421,"src":"3774:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:3"},"src":"3723:68:3"},{"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"3797:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":426,"name":"ERC721InvalidApprover","nameLocation":"3982:21:3","nodeType":"ErrorDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"approver","nameLocation":"4012:8:3","nodeType":"VariableDeclaration","scope":426,"src":"4004:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:3"},"src":"3976:46:3"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"4028:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":431,"name":"ERC721InvalidOperator","nameLocation":"4236:21:3","nodeType":"ErrorDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"operator","nameLocation":"4266:8:3","nodeType":"VariableDeclaration","scope":431,"src":"4258:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:3"},"src":"4230:46:3"}],"scope":480,"src":"2186:2092:3","usedErrors":[390,395,404,409,414,421,426,431],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"4280:143:3","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":479,"linearizedBaseContracts":[479],"name":"IERC1155Errors","nameLocation":"4434:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":434,"nodeType":"StructuredDocumentation","src":"4455:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":444,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:3","nodeType":"ErrorDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":436,"mutability":"mutable","name":"sender","nameLocation":"4862:6:3","nodeType":"VariableDeclaration","scope":444,"src":"4854:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":435,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"balance","nameLocation":"4878:7:3","nodeType":"VariableDeclaration","scope":444,"src":"4870:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"needed","nameLocation":"4895:6:3","nodeType":"VariableDeclaration","scope":444,"src":"4887:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":439,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":442,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:3","nodeType":"VariableDeclaration","scope":444,"src":"4903:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:3"},"src":"4821:99:3"},{"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"4926:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":449,"name":"ERC1155InvalidSender","nameLocation":"5089:20:3","nodeType":"ErrorDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"sender","nameLocation":"5118:6:3","nodeType":"VariableDeclaration","scope":449,"src":"5110:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:3"},"src":"5083:43:3"},{"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"5132:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":454,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:3","nodeType":"ErrorDefinition","parameters":{"id":453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:3","nodeType":"VariableDeclaration","scope":454,"src":"5325:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:3"},"src":"5296:47:3"},{"documentation":{"id":455,"nodeType":"StructuredDocumentation","src":"5349:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":461,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:3","nodeType":"ErrorDefinition","parameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"operator","nameLocation":"5653:8:3","nodeType":"VariableDeclaration","scope":461,"src":"5645:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":459,"mutability":"mutable","name":"owner","nameLocation":"5671:5:3","nodeType":"VariableDeclaration","scope":461,"src":"5663:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:3"},"src":"5610:68:3"},{"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"5684:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":466,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:3","nodeType":"ErrorDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"approver","nameLocation":"5900:8:3","nodeType":"VariableDeclaration","scope":466,"src":"5892:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:3"},"src":"5863:47:3"},{"documentation":{"id":467,"nodeType":"StructuredDocumentation","src":"5916:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":471,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:3","nodeType":"ErrorDefinition","parameters":{"id":470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":469,"mutability":"mutable","name":"operator","nameLocation":"6155:8:3","nodeType":"VariableDeclaration","scope":471,"src":"6147:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":468,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:3"},"src":"6118:47:3"},{"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"6171:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":478,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:3","nodeType":"ErrorDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":474,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:3","nodeType":"VariableDeclaration","scope":478,"src":"6488:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":476,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:3","nodeType":"VariableDeclaration","scope":478,"src":"6507:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:3"},"src":"6456:73:3"}],"scope":480,"src":"4424:2107:3","usedErrors":[444,449,454,461,466,471,478],"usedEvents":[]}],"src":"112:6420:3"},"id":3},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2538],"ERC20":[994],"IERC20":[1072],"IERC20Errors":[384],"IERC20Metadata":[1937]},"id":995,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":481,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":483,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":995,"sourceUnit":1073,"src":"131:36:4","symbolAliases":[{"foreign":{"id":482,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"139:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":485,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":995,"sourceUnit":1938,"src":"168:63:4","symbolAliases":[{"foreign":{"id":484,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"176:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":995,"sourceUnit":2539,"src":"232:48:4","symbolAliases":[{"foreign":{"id":486,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"240:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":995,"sourceUnit":480,"src":"281:65:4","symbolAliases":[{"foreign":{"id":488,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"289:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":491,"name":"Context","nameLocations":["1428:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2538,"src":"1428:7:4"},"id":492,"nodeType":"InheritanceSpecifier","src":"1428:7:4"},{"baseName":{"id":493,"name":"IERC20","nameLocations":["1437:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"1437:6:4"},"id":494,"nodeType":"InheritanceSpecifier","src":"1437:6:4"},{"baseName":{"id":495,"name":"IERC20Metadata","nameLocations":["1445:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"1445:14:4"},"id":496,"nodeType":"InheritanceSpecifier","src":"1445:14:4"},{"baseName":{"id":497,"name":"IERC20Errors","nameLocations":["1461:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":384,"src":"1461:12:4"},"id":498,"nodeType":"InheritanceSpecifier","src":"1461:12:4"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"348:1052:4","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":994,"linearizedBaseContracts":[994,384,1937,1072,2538],"name":"ERC20","nameLocation":"1419:5:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":502,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:4","nodeType":"VariableDeclaration","scope":994,"src":"1480:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":501,"keyName":"account","keyNameLocation":"1496:7:4","keyType":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":508,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:4","nodeType":"VariableDeclaration","scope":994,"src":"1540:83:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":507,"keyName":"account","keyNameLocation":"1556:7:4","keyType":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":506,"keyName":"spender","keyNameLocation":"1583:7:4","keyType":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":510,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:4","nodeType":"VariableDeclaration","scope":994,"src":"1630:28:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":512,"mutability":"mutable","name":"_name","nameLocation":"1680:5:4","nodeType":"VariableDeclaration","scope":994,"src":"1665:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":511,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":514,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:4","nodeType":"VariableDeclaration","scope":994,"src":"1691:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":513,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":530,"nodeType":"Block","src":"1952:57:4","statements":[{"expression":{"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":522,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"1962:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":523,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"1970:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":525,"nodeType":"ExpressionStatement","src":"1962:13:4"},{"expression":{"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":526,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1985:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":527,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"1995:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":529,"nodeType":"ExpressionStatement","src":"1985:17:4"}]},"documentation":{"id":515,"nodeType":"StructuredDocumentation","src":"1720:171:4","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":531,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":517,"mutability":"mutable","name":"name_","nameLocation":"1922:5:4","nodeType":"VariableDeclaration","scope":531,"src":"1908:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":516,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:4","nodeType":"VariableDeclaration","scope":531,"src":"1929:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":518,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:4"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"1952:0:4"},"scope":994,"src":"1896:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1924],"body":{"id":539,"nodeType":"Block","src":"2134:29:4","statements":[{"expression":{"id":537,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"2151:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":536,"id":538,"nodeType":"Return","src":"2144:12:4"}]},"documentation":{"id":532,"nodeType":"StructuredDocumentation","src":"2015:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:4","nodeType":"FunctionDefinition","parameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"2087:2:4"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":535,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"2119:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":534,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:4"},"scope":994,"src":"2074:89:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1930],"body":{"id":548,"nodeType":"Block","src":"2338:31:4","statements":[{"expression":{"id":546,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"2355:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":545,"id":547,"nodeType":"Return","src":"2348:14:4"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"2169:102:4","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":549,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:4","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"2291:2:4"},"returnParameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":549,"src":"2323:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":543,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:4"},"scope":994,"src":"2276:93:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1936],"body":{"id":557,"nodeType":"Block","src":"3058:26:4","statements":[{"expression":{"hexValue":"3138","id":555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:4","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":554,"id":556,"nodeType":"Return","src":"3068:9:4"}]},"documentation":{"id":550,"nodeType":"StructuredDocumentation","src":"2375:622:4","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":558,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:4","nodeType":"FunctionDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[],"src":"3019:2:4"},"returnParameters":{"id":554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":553,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"3051:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":552,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:4"},"scope":994,"src":"3002:82:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1021],"body":{"id":566,"nodeType":"Block","src":"3205:36:4","statements":[{"expression":{"id":564,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3222:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":563,"id":565,"nodeType":"Return","src":"3215:19:4"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"3090:49:4","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":567,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:4","nodeType":"FunctionDefinition","parameters":{"id":560,"nodeType":"ParameterList","parameters":[],"src":"3164:2:4"},"returnParameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":567,"src":"3196:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:4"},"scope":994,"src":"3144:97:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1029],"body":{"id":579,"nodeType":"Block","src":"3373:42:4","statements":[{"expression":{"baseExpression":{"id":575,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3390:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":577,"indexExpression":{"id":576,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3400:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":574,"id":578,"nodeType":"Return","src":"3383:25:4"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"3247:47:4","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":580,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:4","nodeType":"FunctionDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"account","nameLocation":"3326:7:4","nodeType":"VariableDeclaration","scope":580,"src":"3318:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:4"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":580,"src":"3364:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:4"},"scope":994,"src":"3299:116:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1039],"body":{"id":603,"nodeType":"Block","src":"3685:103:4","statements":[{"assignments":[591],"declarations":[{"constant":false,"id":591,"mutability":"mutable","name":"owner","nameLocation":"3703:5:4","nodeType":"VariableDeclaration","scope":603,"src":"3695:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":594,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":592,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"3711:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:4"},{"expression":{"arguments":[{"id":596,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3743:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"3750:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3754:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":595,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3733:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"ExpressionStatement","src":"3733:27:4"},{"expression":{"hexValue":"74727565","id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":589,"id":602,"nodeType":"Return","src":"3770:11:4"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"3421:184:4","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":604,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:4","nodeType":"FunctionDefinition","parameters":{"id":586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":583,"mutability":"mutable","name":"to","nameLocation":"3636:2:4","nodeType":"VariableDeclaration","scope":604,"src":"3628:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":582,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"value","nameLocation":"3648:5:4","nodeType":"VariableDeclaration","scope":604,"src":"3640:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:4"},"returnParameters":{"id":589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":604,"src":"3679:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":587,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:4"},"scope":994,"src":"3610:178:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1049],"body":{"id":620,"nodeType":"Block","src":"3935:51:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":614,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3952:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":616,"indexExpression":{"id":615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"3964:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":618,"indexExpression":{"id":617,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"3971:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":613,"id":619,"nodeType":"Return","src":"3945:34:4"}]},"documentation":{"id":605,"nodeType":"StructuredDocumentation","src":"3794:47:4","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":621,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:4","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":607,"mutability":"mutable","name":"owner","nameLocation":"3873:5:4","nodeType":"VariableDeclaration","scope":621,"src":"3865:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":609,"mutability":"mutable","name":"spender","nameLocation":"3888:7:4","nodeType":"VariableDeclaration","scope":621,"src":"3880:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:4"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":621,"src":"3926:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:4"},"scope":994,"src":"3846:140:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1059],"body":{"id":644,"nodeType":"Block","src":"4372:107:4","statements":[{"assignments":[632],"declarations":[{"constant":false,"id":632,"mutability":"mutable","name":"owner","nameLocation":"4390:5:4","nodeType":"VariableDeclaration","scope":644,"src":"4382:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":631,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":635,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":633,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"4398:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:4"},{"expression":{"arguments":[{"id":637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":632,"src":"4429:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4436:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"4445:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[885,945],"referencedDeclaration":885,"src":"4420:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"4420:31:4"},{"expression":{"hexValue":"74727565","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":630,"id":643,"nodeType":"Return","src":"4461:11:4"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"3992:296:4","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":645,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:4","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"spender","nameLocation":"4318:7:4","nodeType":"VariableDeclaration","scope":645,"src":"4310:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"4335:5:4","nodeType":"VariableDeclaration","scope":645,"src":"4327:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:4"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"4366:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":628,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:4"},"scope":994,"src":"4293:186:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1071],"body":{"id":676,"nodeType":"Block","src":"5132:151:4","statements":[{"assignments":[658],"declarations":[{"constant":false,"id":658,"mutability":"mutable","name":"spender","nameLocation":"5150:7:4","nodeType":"VariableDeclaration","scope":676,"src":"5142:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":661,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":659,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"5160:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:4"},{"expression":{"arguments":[{"id":663,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"5198:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":664,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"5204:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5213:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"5182:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"5182:37:4"},{"expression":{"arguments":[{"id":669,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"5239:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":650,"src":"5245:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5249:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":668,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"5229:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":673,"nodeType":"ExpressionStatement","src":"5229:26:4"},{"expression":{"hexValue":"74727565","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":656,"id":675,"nodeType":"Return","src":"5265:11:4"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"4485:549:4","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":677,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:4","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"from","nameLocation":"5069:4:4","nodeType":"VariableDeclaration","scope":677,"src":"5061:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"to","nameLocation":"5083:2:4","nodeType":"VariableDeclaration","scope":677,"src":"5075:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"value","nameLocation":"5095:5:4","nodeType":"VariableDeclaration","scope":677,"src":"5087:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:4"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":677,"src":"5126:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":654,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:4"},"scope":994,"src":"5039:244:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":723,"nodeType":"Block","src":"5725:231:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5739:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:4","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":701,"nodeType":"IfStatement","src":"5735:86:4","trueBody":{"id":700,"nodeType":"Block","src":"5759:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:4","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":693,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"5780:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":699,"nodeType":"RevertStatement","src":"5773:37:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5834:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:4","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"5830:86:4","trueBody":{"id":715,"nodeType":"Block","src":"5852:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:4","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5873:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":714,"nodeType":"RevertStatement","src":"5866:39:4"}]}},{"expression":{"arguments":[{"id":718,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"5933:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5939:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5943:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":717,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"5925:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":722,"nodeType":"ExpressionStatement","src":"5925:24:4"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"5289:362:4","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":724,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:4","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":680,"mutability":"mutable","name":"from","nameLocation":"5683:4:4","nodeType":"VariableDeclaration","scope":724,"src":"5675:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"to","nameLocation":"5697:2:4","nodeType":"VariableDeclaration","scope":724,"src":"5689:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"value","nameLocation":"5709:5:4","nodeType":"VariableDeclaration","scope":724,"src":"5701:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:4"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"5725:0:4"},"scope":994,"src":"5656:300:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"6346:1032:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":734,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"6360:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:4","typeDescriptions":{}}},"id":738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":771,"nodeType":"Block","src":"6534:362:4","statements":[{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:4","nodeType":"VariableDeclaration","scope":771,"src":"6548:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":750,"initialValue":{"baseExpression":{"id":747,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"6570:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":749,"indexExpression":{"id":748,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"6580:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6603:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"6617:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":761,"nodeType":"IfStatement","src":"6599:115:4","trueBody":{"id":760,"nodeType":"Block","src":"6624:90:4","statements":[{"errorCall":{"arguments":[{"id":755,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"6674:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":756,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6680:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"6693:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":754,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6649:24:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":759,"nodeType":"RevertStatement","src":"6642:57:4"}]}},{"id":770,"nodeType":"UncheckedBlock","src":"6727:159:4","statements":[{"expression":{"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":762,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"6834:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":764,"indexExpression":{"id":763,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"6844:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":765,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6852:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"6866:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":769,"nodeType":"ExpressionStatement","src":"6834:37:4"}]}]},"id":772,"nodeType":"IfStatement","src":"6356:540:4","trueBody":{"id":744,"nodeType":"Block","src":"6380:148:4","statements":[{"expression":{"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":740,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"6496:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"6512:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":743,"nodeType":"ExpressionStatement","src":"6496:21:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"6910:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:4","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":792,"nodeType":"Block","src":"7125:206:4","statements":[{"id":791,"nodeType":"UncheckedBlock","src":"7139:182:4","statements":[{"expression":{"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":785,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"7284:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":787,"indexExpression":{"id":786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"7294:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"7301:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":790,"nodeType":"ExpressionStatement","src":"7284:22:4"}]}]},"id":793,"nodeType":"IfStatement","src":"6906:425:4","trueBody":{"id":784,"nodeType":"Block","src":"6928:191:4","statements":[{"id":783,"nodeType":"UncheckedBlock","src":"6942:167:4","statements":[{"expression":{"id":781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":779,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"7073:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"7089:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":782,"nodeType":"ExpressionStatement","src":"7073:21:4"}]}]}},{"eventCall":{"arguments":[{"id":795,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"7355:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":796,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"7361:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"7365:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":794,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"7346:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":799,"nodeType":"EmitStatement","src":"7341:30:4"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"5962:304:4","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:4","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"from","nameLocation":"6296:4:4","nodeType":"VariableDeclaration","scope":801,"src":"6288:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":726,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"to","nameLocation":"6310:2:4","nodeType":"VariableDeclaration","scope":801,"src":"6302:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"value","nameLocation":"6322:5:4","nodeType":"VariableDeclaration","scope":801,"src":"6314:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":730,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:4"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"6346:0:4"},"scope":994,"src":"6271:1107:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"7777:152:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"7791:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:4","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"7787:91:4","trueBody":{"id":822,"nodeType":"Block","src":"7814:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:4","typeDescriptions":{}}},"id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":815,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"7835:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"RevertStatement","src":"7828:39:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:4","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":829,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"7907:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"7916:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":824,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"7887:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"ExpressionStatement","src":"7887:35:4"}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"7384:332:4","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:4","nodeType":"FunctionDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"account","nameLocation":"7744:7:4","nodeType":"VariableDeclaration","scope":834,"src":"7736:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"value","nameLocation":"7761:5:4","nodeType":"VariableDeclaration","scope":834,"src":"7753:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:4"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[],"src":"7777:0:4"},"scope":994,"src":"7721:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":866,"nodeType":"Block","src":"8303:150:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":842,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8317:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":843,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:4","typeDescriptions":{}}},"id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":856,"nodeType":"IfStatement","src":"8313:89:4","trueBody":{"id":855,"nodeType":"Block","src":"8340:62:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:4","typeDescriptions":{}}},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":848,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"8361:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":854,"nodeType":"RevertStatement","src":"8354:37:4"}]}},{"expression":{"arguments":[{"id":858,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8419:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:4","typeDescriptions":{}}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"8440:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":857,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"8411:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"8411:35:4"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"7935:307:4","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":867,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:4","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"account","nameLocation":"8270:7:4","nodeType":"VariableDeclaration","scope":867,"src":"8262:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"8287:5:4","nodeType":"VariableDeclaration","scope":867,"src":"8279:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:4"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[],"src":"8303:0:4"},"scope":994,"src":"8247:206:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":884,"nodeType":"Block","src":"9063:54:4","statements":[{"expression":{"arguments":[{"id":878,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"9082:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":879,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"9089:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"9098:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":877,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[885,945],"referencedDeclaration":945,"src":"9073:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"9073:37:4"}]},"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"8459:525:4","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:4","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"owner","nameLocation":"9015:5:4","nodeType":"VariableDeclaration","scope":885,"src":"9007:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":872,"mutability":"mutable","name":"spender","nameLocation":"9030:7:4","nodeType":"VariableDeclaration","scope":885,"src":"9022:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"value","nameLocation":"9047:5:4","nodeType":"VariableDeclaration","scope":885,"src":"9039:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":873,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:4"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"9063:0:4"},"scope":994,"src":"8989:128:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":944,"nodeType":"Block","src":"10047:334:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"10061:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:4","typeDescriptions":{}}},"id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"10057:89:4","trueBody":{"id":910,"nodeType":"Block","src":"10082:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:4","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":903,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"10103:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"RevertStatement","src":"10096:39:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"10159:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:4","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"10155:90:4","trueBody":{"id":925,"nodeType":"Block","src":"10182:63:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:4","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"10203:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"RevertStatement","src":"10196:38:4"}]}},{"expression":{"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":927,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"10254:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":930,"indexExpression":{"id":928,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"10266:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":931,"indexExpression":{"id":929,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"10273:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"10284:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":934,"nodeType":"ExpressionStatement","src":"10254:35:4"},{"condition":{"id":935,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"10303:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":943,"nodeType":"IfStatement","src":"10299:76:4","trueBody":{"id":942,"nodeType":"Block","src":"10314:61:4","statements":[{"eventCall":{"arguments":[{"id":937,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"10342:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"10349:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"10358:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":936,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10333:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"EmitStatement","src":"10328:36:4"}]}}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"9123:821:4","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:4","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"owner","nameLocation":"9975:5:4","nodeType":"VariableDeclaration","scope":945,"src":"9967:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"spender","nameLocation":"9990:7:4","nodeType":"VariableDeclaration","scope":945,"src":"9982:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"value","nameLocation":"10007:5:4","nodeType":"VariableDeclaration","scope":945,"src":"9999:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:4","nodeType":"VariableDeclaration","scope":945,"src":"10014:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":893,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:4"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"10047:0:4"},"scope":994,"src":"9949:432:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"10752:388:4","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:4","nodeType":"VariableDeclaration","scope":992,"src":"10762:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":961,"initialValue":{"arguments":[{"id":958,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"10799:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":959,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10806:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"10789:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":962,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10828:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:4","memberName":"max","nodeType":"MemberAccess","src":"10848:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":991,"nodeType":"IfStatement","src":"10824:310:4","trueBody":{"id":990,"nodeType":"Block","src":"10867:267:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10885:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10904:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":979,"nodeType":"IfStatement","src":"10881:130:4","trueBody":{"id":978,"nodeType":"Block","src":"10911:100:4","statements":[{"errorCall":{"arguments":[{"id":973,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"10963:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"10972:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10990:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"10936:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"RevertStatement","src":"10929:67:4"}]}},{"id":989,"nodeType":"UncheckedBlock","src":"11024:100:4","statements":[{"expression":{"arguments":[{"id":981,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"11061:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"11068:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11077:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11096:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":980,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[885,945],"referencedDeclaration":945,"src":"11052:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":988,"nodeType":"ExpressionStatement","src":"11052:57:4"}]}]}}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"10387:271:4","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:4","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"owner","nameLocation":"10696:5:4","nodeType":"VariableDeclaration","scope":993,"src":"10688:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"spender","nameLocation":"10711:7:4","nodeType":"VariableDeclaration","scope":993,"src":"10703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":949,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":952,"mutability":"mutable","name":"value","nameLocation":"10728:5:4","nodeType":"VariableDeclaration","scope":993,"src":"10720:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:4"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"10752:0:4"},"scope":994,"src":"10663:477:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":995,"src":"1401:9741:4","usedErrors":[354,359,364,373,378,383],"usedEvents":[1006,1015]}],"src":"105:11038:4"},"id":4},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1072]},"id":1073,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":996,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"132:70:5","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1072,"linearizedBaseContracts":[1072],"name":"IERC20","nameLocation":"213:6:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"226:158:5","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1006,"name":"Transfer","nameLocation":"395:8:5","nodeType":"EventDefinition","parameters":{"id":1005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:5","nodeType":"VariableDeclaration","scope":1006,"src":"404:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1002,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:5","nodeType":"VariableDeclaration","scope":1006,"src":"426:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1001,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1004,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:5","nodeType":"VariableDeclaration","scope":1006,"src":"446:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1003,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:5"},"src":"389:72:5"},{"anonymous":false,"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"467:148:5","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1015,"name":"Approval","nameLocation":"626:8:5","nodeType":"EventDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:5","nodeType":"VariableDeclaration","scope":1015,"src":"635:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1011,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:5","nodeType":"VariableDeclaration","scope":1015,"src":"658:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:5","nodeType":"VariableDeclaration","scope":1015,"src":"683:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:5"},"src":"620:78:5"},{"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"704:65:5","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1021,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:5","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[],"src":"794:2:5"},"returnParameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1021,"src":"820:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:5"},"scope":1072,"src":"774:55:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1022,"nodeType":"StructuredDocumentation","src":"835:71:5","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1029,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:5","nodeType":"FunctionDefinition","parameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"account","nameLocation":"938:7:5","nodeType":"VariableDeclaration","scope":1029,"src":"930:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1023,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:5"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1029,"src":"970:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:5"},"scope":1072,"src":"911:68:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"985:213:5","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1039,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:5","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"to","nameLocation":"1229:2:5","nodeType":"VariableDeclaration","scope":1039,"src":"1221:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1031,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"value","nameLocation":"1241:5:5","nodeType":"VariableDeclaration","scope":1039,"src":"1233:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:5"},"returnParameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"1266:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1036,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:5"},"scope":1072,"src":"1203:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1278:264:5","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1049,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:5","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"owner","nameLocation":"1574:5:5","nodeType":"VariableDeclaration","scope":1049,"src":"1566:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"spender","nameLocation":"1589:7:5","nodeType":"VariableDeclaration","scope":1049,"src":"1581:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:5"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"1621:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:5"},"scope":1072,"src":"1547:83:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"1636:667:5","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1059,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:5","nodeType":"FunctionDefinition","parameters":{"id":1055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"spender","nameLocation":"2333:7:5","nodeType":"VariableDeclaration","scope":1059,"src":"2325:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1054,"mutability":"mutable","name":"value","nameLocation":"2350:5:5","nodeType":"VariableDeclaration","scope":1059,"src":"2342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1053,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:5"},"returnParameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1059,"src":"2375:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1056,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:5"},"scope":1072,"src":"2308:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1060,"nodeType":"StructuredDocumentation","src":"2387:297:5","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1071,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:5","nodeType":"FunctionDefinition","parameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"from","nameLocation":"2719:4:5","nodeType":"VariableDeclaration","scope":1071,"src":"2711:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"to","nameLocation":"2733:2:5","nodeType":"VariableDeclaration","scope":1071,"src":"2725:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1063,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"value","nameLocation":"2745:5:5","nodeType":"VariableDeclaration","scope":1071,"src":"2737:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:5"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"2770:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1068,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:5"},"scope":1072,"src":"2689:87:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1073,"src":"203:2575:5","usedErrors":[],"usedEvents":[1006,1015]}],"src":"106:2673:5"},"id":5},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3536],"EIP712":[3763],"ERC20":[994],"ERC20Permit":[1226],"IERC20Permit":[1973],"Nonces":[2606]},"id":1227,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1074,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1076,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":1974,"src":"148:48:6","symbolAliases":[{"foreign":{"id":1075,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"156:12:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1078,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":995,"src":"197:35:6","symbolAliases":[{"foreign":{"id":1077,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"205:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1080,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":3537,"src":"233:60:6","symbolAliases":[{"foreign":{"id":1079,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"241:5:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":3764,"src":"294:62:6","symbolAliases":[{"foreign":{"id":1081,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"302:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1227,"sourceUnit":2607,"src":"357:49:6","symbolAliases":[{"foreign":{"id":1083,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"365:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1086,"name":"ERC20","nameLocations":["929:5:6"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"929:5:6"},"id":1087,"nodeType":"InheritanceSpecifier","src":"929:5:6"},{"baseName":{"id":1088,"name":"IERC20Permit","nameLocations":["936:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1973,"src":"936:12:6"},"id":1089,"nodeType":"InheritanceSpecifier","src":"936:12:6"},{"baseName":{"id":1090,"name":"EIP712","nameLocations":["950:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"950:6:6"},"id":1091,"nodeType":"InheritanceSpecifier","src":"950:6:6"},{"baseName":{"id":1092,"name":"Nonces","nameLocations":["958:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2606,"src":"958:6:6"},"id":1093,"nodeType":"InheritanceSpecifier","src":"958:6:6"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"408:487:6","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1226,"linearizedBaseContracts":[1226,2606,3763,342,1973,994,384,1937,1072,2538],"name":"ERC20Permit","nameLocation":"914:11:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1098,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"996:15:6","nodeType":"VariableDeclaration","scope":1226,"src":"971:146:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1032:84:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1022:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1022:95:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1099,"nodeType":"StructuredDocumentation","src":"1124:52:6","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1103,"name":"ERC2612ExpiredSignature","nameLocation":"1187:23:6","nodeType":"ErrorDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1101,"mutability":"mutable","name":"deadline","nameLocation":"1219:8:6","nodeType":"VariableDeclaration","scope":1103,"src":"1211:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1211:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:18:6"},"src":"1181:48:6"},{"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"1235:45:6","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1110,"name":"ERC2612InvalidSigner","nameLocation":"1291:20:6","nodeType":"ErrorDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"signer","nameLocation":"1320:6:6","nodeType":"VariableDeclaration","scope":1110,"src":"1312:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1105,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"owner","nameLocation":"1336:5:6","nodeType":"VariableDeclaration","scope":1110,"src":"1328:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"1328:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1311:31:6"},"src":"1285:58:6"},{"body":{"id":1120,"nodeType":"Block","src":"1624:2:6","statements":[]},"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"1349:220:6","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1121,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1116,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"1613:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1619:3:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1118,"kind":"baseConstructorSpecifier","modifierName":{"id":1115,"name":"EIP712","nameLocations":["1606:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":3763,"src":"1606:6:6"},"nodeType":"ModifierInvocation","src":"1606:17:6"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"name","nameLocation":"1600:4:6","nodeType":"VariableDeclaration","scope":1121,"src":"1586:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1112,"name":"string","nodeType":"ElementaryTypeName","src":"1586:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1585:20:6"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"1624:0:6"},"scope":1226,"src":"1574:52:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1958],"body":{"id":1197,"nodeType":"Block","src":"1869:483:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1139,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1883:5:6","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1889:9:6","memberName":"timestamp","nodeType":"MemberAccess","src":"1883:15:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1141,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1901:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1883:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1148,"nodeType":"IfStatement","src":"1879:97:6","trueBody":{"id":1147,"nodeType":"Block","src":"1911:65:6","statements":[{"errorCall":{"arguments":[{"id":1144,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"1956:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1143,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1103,"src":"1932:23:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1932:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"RevertStatement","src":"1925:40:6"}]}},{"assignments":[1150],"declarations":[{"constant":false,"id":1150,"mutability":"mutable","name":"structHash","nameLocation":"1994:10:6","nodeType":"VariableDeclaration","scope":1197,"src":"1986:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1149,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1986:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1164,"initialValue":{"arguments":[{"arguments":[{"id":1154,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"2028:15:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1155,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2045:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1156,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2052:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2061:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1159,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2078:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1158,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2068:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2068:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1161,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2086:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1152,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2017:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2021:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2017:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2017:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1151,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2007:9:6","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:89:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1986:110:6"},{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"hash","nameLocation":"2115:4:6","nodeType":"VariableDeclaration","scope":1197,"src":"2107:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1165,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2107:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1170,"initialValue":{"arguments":[{"id":1168,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"2139:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1167,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3696,"src":"2122:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2122:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2107:43:6"},{"assignments":[1172],"declarations":[{"constant":false,"id":1172,"mutability":"mutable","name":"signer","nameLocation":"2169:6:6","nodeType":"VariableDeclaration","scope":1197,"src":"2161:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"2161:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1180,"initialValue":{"arguments":[{"id":1175,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"2192:4:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1176,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"2198:1:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1177,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"2201:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1178,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"2204:1:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1173,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"2178:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3536_$","typeString":"type(library ECDSA)"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2184:7:6","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3486,"src":"2178:13:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2161:45:6"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2220:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1182,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2230:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2220:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1190,"nodeType":"IfStatement","src":"2216:88:6","trueBody":{"id":1189,"nodeType":"Block","src":"2237:67:6","statements":[{"errorCall":{"arguments":[{"id":1185,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"2279:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1186,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2287:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1184,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"2258:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1188,"nodeType":"RevertStatement","src":"2251:42:6"}]}},{"expression":{"arguments":[{"id":1192,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"2323:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1193,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"2330:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"2339:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1191,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[885,945],"referencedDeclaration":885,"src":"2314:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2314:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1196,"nodeType":"ExpressionStatement","src":"2314:31:6"}]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"1632:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1689:6:6","nodeType":"FunctionDefinition","parameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"owner","nameLocation":"1713:5:6","nodeType":"VariableDeclaration","scope":1198,"src":"1705:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"1705:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"spender","nameLocation":"1736:7:6","nodeType":"VariableDeclaration","scope":1198,"src":"1728:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"1728:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"1761:5:6","nodeType":"VariableDeclaration","scope":1198,"src":"1753:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1753:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1130,"mutability":"mutable","name":"deadline","nameLocation":"1784:8:6","nodeType":"VariableDeclaration","scope":1198,"src":"1776:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1776:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"v","nameLocation":"1808:1:6","nodeType":"VariableDeclaration","scope":1198,"src":"1802:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1131,"name":"uint8","nodeType":"ElementaryTypeName","src":"1802:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"r","nameLocation":"1827:1:6","nodeType":"VariableDeclaration","scope":1198,"src":"1819:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1819:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"s","nameLocation":"1846:1:6","nodeType":"VariableDeclaration","scope":1198,"src":"1838:9:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1838:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1695:158:6"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"1869:0:6"},"scope":1226,"src":"1680:672:6","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1966,2565],"body":{"id":1214,"nodeType":"Block","src":"2506:43:6","statements":[{"expression":{"arguments":[{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"2536:5:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1209,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2523:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1226_$","typeString":"type(contract super ERC20Permit)"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:6:6","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":2565,"src":"2523:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1208,"id":1213,"nodeType":"Return","src":"2516:26:6"}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"2358:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2415:6:6","nodeType":"FunctionDefinition","overrides":{"id":1205,"nodeType":"OverrideSpecifier","overrides":[{"id":1203,"name":"IERC20Permit","nameLocations":["2466:12:6"],"nodeType":"IdentifierPath","referencedDeclaration":1973,"src":"2466:12:6"},{"id":1204,"name":"Nonces","nameLocations":["2480:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":2606,"src":"2480:6:6"}],"src":"2457:30:6"},"parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"2430:5:6","nodeType":"VariableDeclaration","scope":1215,"src":"2422:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"2422:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2421:15:6"},"returnParameters":{"id":1208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"2497:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1206,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2496:9:6"},"scope":1226,"src":"2406:143:6","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1972],"body":{"id":1224,"nodeType":"Block","src":"2724:44:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1221,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"2741:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2741:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1220,"id":1223,"nodeType":"Return","src":"2734:27:6"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"2555:43:6","text":" @inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1225,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2665:16:6","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"2681:2:6"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1225,"src":"2715:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2715:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2714:9:6"},"scope":1226,"src":"2656:112:6","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1227,"src":"896:1874:6","usedErrors":[354,359,364,373,378,383,1103,1110,2548,2620,2622,3199,3204,3209],"usedEvents":[322,1006,1015]}],"src":"122:2649:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","exportedSymbols":{"ERC20":[994],"ERC4626":[1911],"IERC20":[1072],"IERC20Metadata":[1937],"IERC4626":[317],"Math":[4891],"SafeERC20":[2263]},"id":1912,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1228,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1232,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1912,"sourceUnit":995,"src":"144:59:7","symbolAliases":[{"foreign":{"id":1229,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"152:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1230,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"160:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1231,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"176:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"../utils/SafeERC20.sol","id":1234,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1912,"sourceUnit":2264,"src":"204:49:7","symbolAliases":[{"foreign":{"id":1233,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"212:9:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4626.sol","file":"../../../interfaces/IERC4626.sol","id":1236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1912,"sourceUnit":318,"src":"254:58:7","symbolAliases":[{"foreign":{"id":1235,"name":"IERC4626","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"262:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"../../../utils/math/Math.sol","id":1238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1912,"sourceUnit":4892,"src":"313:50:7","symbolAliases":[{"foreign":{"id":1237,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"321:4:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1240,"name":"ERC20","nameLocations":["3187:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"3187:5:7"},"id":1241,"nodeType":"InheritanceSpecifier","src":"3187:5:7"},{"baseName":{"id":1242,"name":"IERC4626","nameLocations":["3194:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":317,"src":"3194:8:7"},"id":1243,"nodeType":"InheritanceSpecifier","src":"3194:8:7"}],"canonicalName":"ERC4626","contractDependencies":[],"contractKind":"contract","documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"365:2792:7","text":" @dev Implementation of the ERC4626 \"Tokenized Vault Standard\" as defined in\n https://eips.ethereum.org/EIPS/eip-4626[EIP-4626].\n This extension allows the minting and burning of \"shares\" (represented using the ERC20 inheritance) in exchange for\n underlying \"assets\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends\n the ERC20 standard. Any additional extensions included along it would affect the \"shares\" token represented by this\n contract and not the \"assets\" token which is an independent contract.\n [CAUTION]\n ====\n In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning\n with a \"donation\" to the vault that inflates the price of a share. This is variously known as a donation or inflation\n attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial\n deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may\n similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by\n verifying the amount received is as expected, using a wrapper that performs these checks such as\n https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router].\n Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()`\n corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault\n decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself\n determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset\n (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's\n donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more\n expensive than it is profitable. More details about the underlying math can be found\n xref:erc4626.adoc#inflation-attack[here].\n The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued\n to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets\n will cause the first user to exit to experience reduced losses in detriment to the last users that will experience\n bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the\n `_convertToShares` and `_convertToAssets` functions.\n To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide].\n ===="},"fullyImplemented":true,"id":1911,"linearizedBaseContracts":[1911,317,994,384,1937,1072,2538],"name":"ERC4626","nameLocation":"3176:7:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1246,"libraryName":{"id":1244,"name":"Math","nameLocations":["3215:4:7"],"nodeType":"IdentifierPath","referencedDeclaration":4891,"src":"3215:4:7"},"nodeType":"UsingForDirective","src":"3209:23:7","typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3224:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1249,"mutability":"immutable","name":"_asset","nameLocation":"3263:6:7","nodeType":"VariableDeclaration","scope":1911,"src":"3238:31:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":1248,"nodeType":"UserDefinedTypeName","pathNode":{"id":1247,"name":"IERC20","nameLocations":["3238:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"3238:6:7"},"referencedDeclaration":1072,"src":"3238:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"private"},{"constant":false,"id":1251,"mutability":"immutable","name":"_underlyingDecimals","nameLocation":"3299:19:7","nodeType":"VariableDeclaration","scope":1911,"src":"3275:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1250,"name":"uint8","nodeType":"ElementaryTypeName","src":"3275:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"3325:92:7","text":" @dev Attempted to deposit more assets than the max amount for `receiver`."},"errorSelector":"79012fb2","id":1260,"name":"ERC4626ExceededMaxDeposit","nameLocation":"3428:25:7","nodeType":"ErrorDefinition","parameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1254,"mutability":"mutable","name":"receiver","nameLocation":"3462:8:7","nodeType":"VariableDeclaration","scope":1260,"src":"3454:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"3454:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"assets","nameLocation":"3480:6:7","nodeType":"VariableDeclaration","scope":1260,"src":"3472:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1255,"name":"uint256","nodeType":"ElementaryTypeName","src":"3472:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1258,"mutability":"mutable","name":"max","nameLocation":"3496:3:7","nodeType":"VariableDeclaration","scope":1260,"src":"3488:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3453:47:7"},"src":"3422:79:7"},{"documentation":{"id":1261,"nodeType":"StructuredDocumentation","src":"3507:89:7","text":" @dev Attempted to mint more shares than the max amount for `receiver`."},"errorSelector":"284ff667","id":1269,"name":"ERC4626ExceededMaxMint","nameLocation":"3607:22:7","nodeType":"ErrorDefinition","parameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1263,"mutability":"mutable","name":"receiver","nameLocation":"3638:8:7","nodeType":"VariableDeclaration","scope":1269,"src":"3630:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1262,"name":"address","nodeType":"ElementaryTypeName","src":"3630:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"shares","nameLocation":"3656:6:7","nodeType":"VariableDeclaration","scope":1269,"src":"3648:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3648:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"max","nameLocation":"3672:3:7","nodeType":"VariableDeclaration","scope":1269,"src":"3664:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3629:47:7"},"src":"3601:76:7"},{"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"3683:93:7","text":" @dev Attempted to withdraw more assets than the max amount for `receiver`."},"errorSelector":"fe9cceec","id":1278,"name":"ERC4626ExceededMaxWithdraw","nameLocation":"3787:26:7","nodeType":"ErrorDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"owner","nameLocation":"3822:5:7","nodeType":"VariableDeclaration","scope":1278,"src":"3814:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"3814:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"assets","nameLocation":"3837:6:7","nodeType":"VariableDeclaration","scope":1278,"src":"3829:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"3829:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"max","nameLocation":"3853:3:7","nodeType":"VariableDeclaration","scope":1278,"src":"3845:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"3845:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3813:44:7"},"src":"3781:77:7"},{"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3864:91:7","text":" @dev Attempted to redeem more shares than the max amount for `receiver`."},"errorSelector":"b94abeec","id":1287,"name":"ERC4626ExceededMaxRedeem","nameLocation":"3966:24:7","nodeType":"ErrorDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"owner","nameLocation":"3999:5:7","nodeType":"VariableDeclaration","scope":1287,"src":"3991:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"shares","nameLocation":"4014:6:7","nodeType":"VariableDeclaration","scope":1287,"src":"4006:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1285,"mutability":"mutable","name":"max","nameLocation":"4030:3:7","nodeType":"VariableDeclaration","scope":1287,"src":"4022:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"4022:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3990:44:7"},"src":"3960:75:7"},{"body":{"id":1313,"nodeType":"Block","src":"4192:168:7","statements":[{"assignments":[1295,1297],"declarations":[{"constant":false,"id":1295,"mutability":"mutable","name":"success","nameLocation":"4208:7:7","nodeType":"VariableDeclaration","scope":1313,"src":"4203:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1294,"name":"bool","nodeType":"ElementaryTypeName","src":"4203:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"assetDecimals","nameLocation":"4223:13:7","nodeType":"VariableDeclaration","scope":1313,"src":"4217:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1296,"name":"uint8","nodeType":"ElementaryTypeName","src":"4217:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1301,"initialValue":{"arguments":[{"id":1299,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"4261:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}],"id":1298,"name":"_tryGetAssetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"4240:20:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IERC20_$1072_$returns$_t_bool_$_t_uint8_$","typeString":"function (contract IERC20) view returns (bool,uint8)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint8_$","typeString":"tuple(bool,uint8)"}},"nodeType":"VariableDeclarationStatement","src":"4202:66:7"},{"expression":{"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1302,"name":"_underlyingDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"4278:19:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"id":1303,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"4300:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3138","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4326:2:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4300:28:7","trueExpression":{"id":1304,"name":"assetDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"4310:13:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4278:50:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1308,"nodeType":"ExpressionStatement","src":"4278:50:7"},{"expression":{"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1309,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"4338:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1310,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"4347:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"src":"4338:15:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":1312,"nodeType":"ExpressionStatement","src":"4338:15:7"}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"4041:119:7","text":" @dev Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777)."},"id":1314,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"asset_","nameLocation":"4184:6:7","nodeType":"VariableDeclaration","scope":1314,"src":"4177:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":1290,"nodeType":"UserDefinedTypeName","pathNode":{"id":1289,"name":"IERC20","nameLocations":["4177:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"4177:6:7"},"referencedDeclaration":1072,"src":"4177:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4176:15:7"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[],"src":"4192:0:7"},"scope":1911,"src":"4165:195:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1380,"nodeType":"Block","src":"4583:453:7","statements":[{"assignments":[1326,1328],"declarations":[{"constant":false,"id":1326,"mutability":"mutable","name":"success","nameLocation":"4599:7:7","nodeType":"VariableDeclaration","scope":1380,"src":"4594:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1325,"name":"bool","nodeType":"ElementaryTypeName","src":"4594:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"encodedDecimals","nameLocation":"4621:15:7","nodeType":"VariableDeclaration","scope":1380,"src":"4608:28:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1327,"name":"bytes","nodeType":"ElementaryTypeName","src":"4608:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1341,"initialValue":{"arguments":[{"arguments":[{"expression":{"id":1336,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1937,"src":"4695:14:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1937_$","typeString":"type(contract IERC20Metadata)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4710:8:7","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1936,"src":"4695:23:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_view$__$returns$_t_uint8_$","typeString":"function IERC20Metadata.decimals() view returns (uint8)"}},{"components":[],"id":1338,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4720:2:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_declaration_view$__$returns$_t_uint8_$","typeString":"function IERC20Metadata.decimals() view returns (uint8)"},{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}],"expression":{"id":1334,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4680:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4684:10:7","memberName":"encodeCall","nodeType":"MemberAccess","src":"4680:14:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4680:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1331,"name":"asset_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"4648:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4640:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1329,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:7","typeDescriptions":{}}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4656:10:7","memberName":"staticcall","nodeType":"MemberAccess","src":"4640:26:7","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4640:93:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4593:140:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"4747:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1343,"name":"encodedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"4758:15:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4774:6:7","memberName":"length","nodeType":"MemberAccess","src":"4758:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4758:28:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4747:39:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1375,"nodeType":"IfStatement","src":"4743:260:7","trueBody":{"id":1374,"nodeType":"Block","src":"4788:215:7","statements":[{"assignments":[1349],"declarations":[{"constant":false,"id":1349,"mutability":"mutable","name":"returnedDecimals","nameLocation":"4810:16:7","nodeType":"VariableDeclaration","scope":1374,"src":"4802:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"4802:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1357,"initialValue":{"arguments":[{"id":1352,"name":"encodedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1328,"src":"4840:15:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4858:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"4858:7:7","typeDescriptions":{}}}],"id":1355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4857:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"expression":{"id":1350,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4829:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4833:6:7","memberName":"decode","nodeType":"MemberAccess","src":"4829:10:7","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4829:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4802:65:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1358,"name":"returnedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4885:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4910:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1360,"name":"uint8","nodeType":"ElementaryTypeName","src":"4910:5:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1359,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4905:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4905:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4917:3:7","memberName":"max","nodeType":"MemberAccess","src":"4905:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4885:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"4881:112:7","trueBody":{"id":1372,"nodeType":"Block","src":"4922:71:7","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4948:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"id":1368,"name":"returnedDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"4960:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4954:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1366,"name":"uint8","nodeType":"ElementaryTypeName","src":"4954:5:7","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4954:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4947:31:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint8_$","typeString":"tuple(bool,uint8)"}},"functionReturnParameters":1324,"id":1371,"nodeType":"Return","src":"4940:38:7"}]}}]}},{"expression":{"components":[{"hexValue":"66616c7365","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5020:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5027:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5019:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1324,"id":1379,"nodeType":"Return","src":"5012:17:7"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"4366:132:7","text":" @dev Attempts to fetch the asset decimals. A return value of false indicates that the attempt failed in some way."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_tryGetAssetDecimals","nameLocation":"4512:20:7","nodeType":"FunctionDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"asset_","nameLocation":"4540:6:7","nodeType":"VariableDeclaration","scope":1381,"src":"4533:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":1317,"nodeType":"UserDefinedTypeName","pathNode":{"id":1316,"name":"IERC20","nameLocations":["4533:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"4533:6:7"},"referencedDeclaration":1072,"src":"4533:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"4532:15:7"},"returnParameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"4570:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1320,"name":"bool","nodeType":"ElementaryTypeName","src":"4570:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"4576:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1322,"name":"uint8","nodeType":"ElementaryTypeName","src":"4576:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4569:13:7"},"scope":1911,"src":"4503:533:7","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[558,1936],"body":{"id":1395,"nodeType":"Block","src":"5529:63:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"_underlyingDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"5546:19:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1391,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"5568:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5546:39:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1389,"id":1394,"nodeType":"Return","src":"5539:46:7"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5042:394:7","text":" @dev Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This\n \"original\" value is cached during construction of the vault contract. If this read operation fails (e.g., the\n asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals.\n See {IERC20Metadata-decimals}."},"functionSelector":"313ce567","id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"5450:8:7","nodeType":"FunctionDefinition","overrides":{"id":1386,"nodeType":"OverrideSpecifier","overrides":[{"id":1384,"name":"IERC20Metadata","nameLocations":["5490:14:7"],"nodeType":"IdentifierPath","referencedDeclaration":1937,"src":"5490:14:7"},{"id":1385,"name":"ERC20","nameLocations":["5506:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"5506:5:7"}],"src":"5481:31:7"},"parameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"5458:2:7"},"returnParameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1396,"src":"5522:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1387,"name":"uint8","nodeType":"ElementaryTypeName","src":"5522:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5521:7:7"},"scope":1911,"src":"5441:151:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[186],"body":{"id":1407,"nodeType":"Block","src":"5691:39:7","statements":[{"expression":{"arguments":[{"id":1404,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5716:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}],"id":1403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5708:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"5708:7:7","typeDescriptions":{}}},"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5708:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1401,"id":1406,"nodeType":"Return","src":"5701:22:7"}]},"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"5598:33:7","text":"@dev See {IERC4626-asset}. "},"functionSelector":"38d52e0f","id":1408,"implemented":true,"kind":"function","modifiers":[],"name":"asset","nameLocation":"5645:5:7","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"5650:2:7"},"returnParameters":{"id":1401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1408,"src":"5682:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1399,"name":"address","nodeType":"ElementaryTypeName","src":"5682:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5681:9:7"},"scope":1911,"src":"5636:94:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[192],"body":{"id":1422,"nodeType":"Block","src":"5841:55:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1418,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5883:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$1911","typeString":"contract ERC4626"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626_$1911","typeString":"contract ERC4626"}],"id":1417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5875:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1416,"name":"address","nodeType":"ElementaryTypeName","src":"5875:7:7","typeDescriptions":{}}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5875:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1414,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5858:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5865:9:7","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1029,"src":"5858:16:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5858:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1413,"id":1421,"nodeType":"Return","src":"5851:38:7"}]},"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"5736:39:7","text":"@dev See {IERC4626-totalAssets}. "},"functionSelector":"01e1d114","id":1423,"implemented":true,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"5789:11:7","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"5800:2:7"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1423,"src":"5832:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1411,"name":"uint256","nodeType":"ElementaryTypeName","src":"5832:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5831:9:7"},"scope":1911,"src":"5780:116:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[200],"body":{"id":1438,"nodeType":"Block","src":"6029:69:7","statements":[{"expression":{"arguments":[{"id":1432,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"6063:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1433,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"6071:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6076:8:7","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"6071:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":1435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6085:5:7","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"6071:19:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":1431,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"6046:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6046:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1430,"id":1437,"nodeType":"Return","src":"6039:52:7"}]},"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"5902:43:7","text":"@dev See {IERC4626-convertToShares}. "},"functionSelector":"c6e6f592","id":1439,"implemented":true,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"5959:15:7","nodeType":"FunctionDefinition","parameters":{"id":1427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"assets","nameLocation":"5983:6:7","nodeType":"VariableDeclaration","scope":1439,"src":"5975:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"5975:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5974:16:7"},"returnParameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1439,"src":"6020:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"6020:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6019:9:7"},"scope":1911,"src":"5950:148:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[208],"body":{"id":1454,"nodeType":"Block","src":"6231:69:7","statements":[{"expression":{"arguments":[{"id":1448,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"6265:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1449,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"6273:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6278:8:7","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"6273:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6287:5:7","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"6273:19:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":1447,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"6248:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6248:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1446,"id":1453,"nodeType":"Return","src":"6241:52:7"}]},"documentation":{"id":1440,"nodeType":"StructuredDocumentation","src":"6104:43:7","text":"@dev See {IERC4626-convertToAssets}. "},"functionSelector":"07a2d13a","id":1455,"implemented":true,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"6161:15:7","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1442,"mutability":"mutable","name":"shares","nameLocation":"6185:6:7","nodeType":"VariableDeclaration","scope":1455,"src":"6177:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"6177:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6176:16:7"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1455,"src":"6222:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"6222:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6221:9:7"},"scope":1911,"src":"6152:148:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[216],"body":{"id":1469,"nodeType":"Block","src":"6416:41:7","statements":[{"expression":{"expression":{"arguments":[{"id":1465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6438:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1464,"name":"uint256","nodeType":"ElementaryTypeName","src":"6438:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1463,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6433:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6447:3:7","memberName":"max","nodeType":"MemberAccess","src":"6433:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1462,"id":1468,"nodeType":"Return","src":"6426:24:7"}]},"documentation":{"id":1456,"nodeType":"StructuredDocumentation","src":"6306:38:7","text":"@dev See {IERC4626-maxDeposit}. "},"functionSelector":"402d267d","id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"6358:10:7","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"6369:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"6369:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6368:9:7"},"returnParameters":{"id":1462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1470,"src":"6407:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"6407:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6406:9:7"},"scope":1911,"src":"6349:108:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[242],"body":{"id":1484,"nodeType":"Block","src":"6567:41:7","statements":[{"expression":{"expression":{"arguments":[{"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1479,"name":"uint256","nodeType":"ElementaryTypeName","src":"6589:7:7","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1478,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6584:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6584:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6598:3:7","memberName":"max","nodeType":"MemberAccess","src":"6584:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1477,"id":1483,"nodeType":"Return","src":"6577:24:7"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"6463:35:7","text":"@dev See {IERC4626-maxMint}. "},"functionSelector":"c63d75b6","id":1485,"implemented":true,"kind":"function","modifiers":[],"name":"maxMint","nameLocation":"6512:7:7","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"6520:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"6520:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6519:9:7"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"6558:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"6558:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6557:9:7"},"scope":1911,"src":"6503:105:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[268],"body":{"id":1502,"nodeType":"Block","src":"6732:79:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1495,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"6776:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1494,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6766:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1497,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"6784:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6789:8:7","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"6784:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6798:5:7","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"6784:19:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":1493,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"6749:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6749:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1492,"id":1501,"nodeType":"Return","src":"6742:62:7"}]},"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"6614:39:7","text":"@dev See {IERC4626-maxWithdraw}. "},"functionSelector":"ce96cb77","id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"maxWithdraw","nameLocation":"6667:11:7","nodeType":"FunctionDefinition","parameters":{"id":1489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"owner","nameLocation":"6687:5:7","nodeType":"VariableDeclaration","scope":1503,"src":"6679:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"6679:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6678:15:7"},"returnParameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"6723:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1490,"name":"uint256","nodeType":"ElementaryTypeName","src":"6723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6722:9:7"},"scope":1911,"src":"6658:153:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[296],"body":{"id":1515,"nodeType":"Block","src":"6931:40:7","statements":[{"expression":{"arguments":[{"id":1512,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1506,"src":"6958:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1511,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"6948:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6948:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1510,"id":1514,"nodeType":"Return","src":"6941:23:7"}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"6817:37:7","text":"@dev See {IERC4626-maxRedeem}. "},"functionSelector":"d905777e","id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"6868:9:7","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"owner","nameLocation":"6886:5:7","nodeType":"VariableDeclaration","scope":1516,"src":"6878:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"6878:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6877:15:7"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1516,"src":"6922:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"6922:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6921:9:7"},"scope":1911,"src":"6859:112:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[224],"body":{"id":1531,"nodeType":"Block","src":"7102:69:7","statements":[{"expression":{"arguments":[{"id":1525,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"7136:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1526,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7144:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7149:8:7","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"7144:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":1528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7158:5:7","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"7144:19:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":1524,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"7119:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1523,"id":1530,"nodeType":"Return","src":"7112:52:7"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"6977:42:7","text":"@dev See {IERC4626-previewDeposit}. "},"functionSelector":"ef8b30f7","id":1532,"implemented":true,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"7033:14:7","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"assets","nameLocation":"7056:6:7","nodeType":"VariableDeclaration","scope":1532,"src":"7048:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"7048:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7047:16:7"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1532,"src":"7093:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"7093:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7092:9:7"},"scope":1911,"src":"7024:147:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[250],"body":{"id":1547,"nodeType":"Block","src":"7296:68:7","statements":[{"expression":{"arguments":[{"id":1541,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"7330:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1542,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7338:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7343:8:7","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"7338:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7352:4:7","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"7338:18:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":1540,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7313:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7313:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1539,"id":1546,"nodeType":"Return","src":"7306:51:7"}]},"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"7177:39:7","text":"@dev See {IERC4626-previewMint}. "},"functionSelector":"b3d7f6b9","id":1548,"implemented":true,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"7230:11:7","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1535,"mutability":"mutable","name":"shares","nameLocation":"7250:6:7","nodeType":"VariableDeclaration","scope":1548,"src":"7242:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"7242:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7241:16:7"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1548,"src":"7287:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"7287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7286:9:7"},"scope":1911,"src":"7221:143:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[276],"body":{"id":1563,"nodeType":"Block","src":"7497:68:7","statements":[{"expression":{"arguments":[{"id":1557,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"7531:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1558,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7539:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7544:8:7","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"7539:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7553:4:7","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"7539:18:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":1556,"name":"_convertToShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"7514:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7514:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1555,"id":1562,"nodeType":"Return","src":"7507:51:7"}]},"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"7370:43:7","text":"@dev See {IERC4626-previewWithdraw}. "},"functionSelector":"0a28a477","id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"7427:15:7","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"assets","nameLocation":"7451:6:7","nodeType":"VariableDeclaration","scope":1564,"src":"7443:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"7443:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7442:16:7"},"returnParameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1564,"src":"7488:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"7488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7487:9:7"},"scope":1911,"src":"7418:147:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[304],"body":{"id":1579,"nodeType":"Block","src":"7694:69:7","statements":[{"expression":{"arguments":[{"id":1573,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"7728:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":1574,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"7736:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7741:8:7","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"7736:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":1576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7750:5:7","memberName":"Floor","nodeType":"MemberAccess","referencedDeclaration":3844,"src":"7736:19:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":1572,"name":"_convertToAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"7711:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$","typeString":"function (uint256,enum Math.Rounding) view returns (uint256)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7711:45:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1571,"id":1578,"nodeType":"Return","src":"7704:52:7"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"7571:41:7","text":"@dev See {IERC4626-previewRedeem}. "},"functionSelector":"4cdad506","id":1580,"implemented":true,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"7626:13:7","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1567,"mutability":"mutable","name":"shares","nameLocation":"7648:6:7","nodeType":"VariableDeclaration","scope":1580,"src":"7640:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"7640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7639:16:7"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1580,"src":"7685:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"7685:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7684:9:7"},"scope":1911,"src":"7617:146:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[234],"body":{"id":1623,"nodeType":"Block","src":"7893:308:7","statements":[{"assignments":[1591],"declarations":[{"constant":false,"id":1591,"mutability":"mutable","name":"maxAssets","nameLocation":"7911:9:7","nodeType":"VariableDeclaration","scope":1623,"src":"7903:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"7903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1595,"initialValue":{"arguments":[{"id":1593,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"7934:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1592,"name":"maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"7923:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7903:40:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1596,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"7957:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1597,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"7966:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7957:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1606,"nodeType":"IfStatement","src":"7953:110:7","trueBody":{"id":1605,"nodeType":"Block","src":"7977:86:7","statements":[{"errorCall":{"arguments":[{"id":1600,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"8024:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"8034:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1602,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"8042:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1599,"name":"ERC4626ExceededMaxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"7998:25:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7998:54:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1604,"nodeType":"RevertStatement","src":"7991:61:7"}]}},{"assignments":[1608],"declarations":[{"constant":false,"id":1608,"mutability":"mutable","name":"shares","nameLocation":"8081:6:7","nodeType":"VariableDeclaration","scope":1623,"src":"8073:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1607,"name":"uint256","nodeType":"ElementaryTypeName","src":"8073:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1612,"initialValue":{"arguments":[{"id":1610,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"8105:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1609,"name":"previewDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"8090:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8090:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8073:39:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1614,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"8131:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8131:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"8145:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1617,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"8155:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1618,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"8163:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1613,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8122:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"8122:48:7"},{"expression":{"id":1621,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"8188:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1589,"id":1622,"nodeType":"Return","src":"8181:13:7"}]},"documentation":{"id":1581,"nodeType":"StructuredDocumentation","src":"7769:35:7","text":"@dev See {IERC4626-deposit}. "},"functionSelector":"6e553f65","id":1624,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"7818:7:7","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"assets","nameLocation":"7834:6:7","nodeType":"VariableDeclaration","scope":1624,"src":"7826:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"7826:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"receiver","nameLocation":"7850:8:7","nodeType":"VariableDeclaration","scope":1624,"src":"7842:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"7842:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7825:34:7"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1624,"src":"7884:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"7884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7883:9:7"},"scope":1911,"src":"7809:392:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[260],"body":{"id":1667,"nodeType":"Block","src":"8549:299:7","statements":[{"assignments":[1635],"declarations":[{"constant":false,"id":1635,"mutability":"mutable","name":"maxShares","nameLocation":"8567:9:7","nodeType":"VariableDeclaration","scope":1667,"src":"8559:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"8559:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1639,"initialValue":{"arguments":[{"id":1637,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"8587:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1636,"name":"maxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"8579:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8579:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8559:37:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"8610:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1641,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8619:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8610:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1650,"nodeType":"IfStatement","src":"8606:107:7","trueBody":{"id":1649,"nodeType":"Block","src":"8630:83:7","statements":[{"errorCall":{"arguments":[{"id":1644,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"8674:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1645,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"8684:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1646,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"8692:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1643,"name":"ERC4626ExceededMaxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"8651:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8651:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1648,"nodeType":"RevertStatement","src":"8644:58:7"}]}},{"assignments":[1652],"declarations":[{"constant":false,"id":1652,"mutability":"mutable","name":"assets","nameLocation":"8731:6:7","nodeType":"VariableDeclaration","scope":1667,"src":"8723:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"8723:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1656,"initialValue":{"arguments":[{"id":1654,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"8752:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1653,"name":"previewMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"8740:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8740:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8723:36:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1658,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"8778:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8778:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1660,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"8792:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1661,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"8802:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1662,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"8810:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1657,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"8769:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8769:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1664,"nodeType":"ExpressionStatement","src":"8769:48:7"},{"expression":{"id":1665,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"8835:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1633,"id":1666,"nodeType":"Return","src":"8828:13:7"}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"8207:256:7","text":"@dev See {IERC4626-mint}.\n As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n In this case, the shares will be minted without requiring any assets to be deposited."},"functionSelector":"94bf804d","id":1668,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"8477:4:7","nodeType":"FunctionDefinition","parameters":{"id":1630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"shares","nameLocation":"8490:6:7","nodeType":"VariableDeclaration","scope":1668,"src":"8482:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1626,"name":"uint256","nodeType":"ElementaryTypeName","src":"8482:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"receiver","nameLocation":"8506:8:7","nodeType":"VariableDeclaration","scope":1668,"src":"8498:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"8498:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8481:34:7"},"returnParameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1668,"src":"8540:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"8540:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8539:9:7"},"scope":1911,"src":"8468:380:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[288],"body":{"id":1714,"nodeType":"Block","src":"8995:313:7","statements":[{"assignments":[1681],"declarations":[{"constant":false,"id":1681,"mutability":"mutable","name":"maxAssets","nameLocation":"9013:9:7","nodeType":"VariableDeclaration","scope":1714,"src":"9005:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"9005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1685,"initialValue":{"arguments":[{"id":1683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9037:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1682,"name":"maxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"9025:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9025:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9005:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1686,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"9057:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1687,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"9066:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9057:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"9053:108:7","trueBody":{"id":1695,"nodeType":"Block","src":"9077:84:7","statements":[{"errorCall":{"arguments":[{"id":1690,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9125:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1691,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"9132:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1692,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"9140:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1689,"name":"ERC4626ExceededMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"9098:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9098:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1694,"nodeType":"RevertStatement","src":"9091:59:7"}]}},{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"shares","nameLocation":"9179:6:7","nodeType":"VariableDeclaration","scope":1714,"src":"9171:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"9171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1702,"initialValue":{"arguments":[{"id":1700,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"9204:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1699,"name":"previewWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"9188:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9188:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9171:40:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1704,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"9231:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9231:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1673,"src":"9245:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1707,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9255:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1708,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"9262:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1709,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9270:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"9221:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9221:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1711,"nodeType":"ExpressionStatement","src":"9221:56:7"},{"expression":{"id":1712,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9295:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1679,"id":1713,"nodeType":"Return","src":"9288:13:7"}]},"documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"8854:36:7","text":"@dev See {IERC4626-withdraw}. "},"functionSelector":"b460af94","id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"8904:8:7","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"assets","nameLocation":"8921:6:7","nodeType":"VariableDeclaration","scope":1715,"src":"8913:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1670,"name":"uint256","nodeType":"ElementaryTypeName","src":"8913:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"receiver","nameLocation":"8937:8:7","nodeType":"VariableDeclaration","scope":1715,"src":"8929:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"8929:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"owner","nameLocation":"8955:5:7","nodeType":"VariableDeclaration","scope":1715,"src":"8947:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1674,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8912:49:7"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"8986:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1677,"name":"uint256","nodeType":"ElementaryTypeName","src":"8986:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8985:9:7"},"scope":1911,"src":"8895:413:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[316],"body":{"id":1761,"nodeType":"Block","src":"9451:307:7","statements":[{"assignments":[1728],"declarations":[{"constant":false,"id":1728,"mutability":"mutable","name":"maxShares","nameLocation":"9469:9:7","nodeType":"VariableDeclaration","scope":1761,"src":"9461:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"9461:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1732,"initialValue":{"arguments":[{"id":1730,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"9491:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1729,"name":"maxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"9481:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9481:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9461:36:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9511:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1734,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"9520:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9511:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1743,"nodeType":"IfStatement","src":"9507:106:7","trueBody":{"id":1742,"nodeType":"Block","src":"9531:82:7","statements":[{"errorCall":{"arguments":[{"id":1737,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"9577:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1738,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9584:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1739,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"9592:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1736,"name":"ERC4626ExceededMaxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"9552:24:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1741,"nodeType":"RevertStatement","src":"9545:57:7"}]}},{"assignments":[1745],"declarations":[{"constant":false,"id":1745,"mutability":"mutable","name":"assets","nameLocation":"9631:6:7","nodeType":"VariableDeclaration","scope":1761,"src":"9623:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1744,"name":"uint256","nodeType":"ElementaryTypeName","src":"9623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1749,"initialValue":{"arguments":[{"id":1747,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9654:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1746,"name":"previewRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"9640:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9640:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9623:38:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1751,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"9681:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9681:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1753,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"9695:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"9705:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1755,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"9712:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1756,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"9720:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1750,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"9671:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9671:56:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1758,"nodeType":"ExpressionStatement","src":"9671:56:7"},{"expression":{"id":1759,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"9745:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1726,"id":1760,"nodeType":"Return","src":"9738:13:7"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"9314:34:7","text":"@dev See {IERC4626-redeem}. "},"functionSelector":"ba087652","id":1762,"implemented":true,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"9362:6:7","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"shares","nameLocation":"9377:6:7","nodeType":"VariableDeclaration","scope":1762,"src":"9369:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"9369:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"receiver","nameLocation":"9393:8:7","nodeType":"VariableDeclaration","scope":1762,"src":"9385:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"9385:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1722,"mutability":"mutable","name":"owner","nameLocation":"9411:5:7","nodeType":"VariableDeclaration","scope":1762,"src":"9403:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1721,"name":"address","nodeType":"ElementaryTypeName","src":"9403:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9368:49:7"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1762,"src":"9442:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1724,"name":"uint256","nodeType":"ElementaryTypeName","src":"9442:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9441:9:7"},"scope":1911,"src":"9353:405:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1789,"nodeType":"Block","src":"9988:107:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1775,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"10019:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10019:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10035:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1778,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"10041:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10041:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10035:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10019:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1782,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"10060:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10060:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10076:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10060:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1786,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"10079:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"expression":{"id":1773,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"10005:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10012:6:7","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"10005:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10005:83:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1772,"id":1788,"nodeType":"Return","src":"9998:90:7"}]},"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"9764:113:7","text":" @dev Internal conversion function (from assets to shares) with support for rounding direction."},"id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToShares","nameLocation":"9891:16:7","nodeType":"FunctionDefinition","parameters":{"id":1769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"assets","nameLocation":"9916:6:7","nodeType":"VariableDeclaration","scope":1790,"src":"9908:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"9908:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1768,"mutability":"mutable","name":"rounding","nameLocation":"9938:8:7","nodeType":"VariableDeclaration","scope":1790,"src":"9924:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":1767,"nodeType":"UserDefinedTypeName","pathNode":{"id":1766,"name":"Math.Rounding","nameLocations":["9924:4:7","9929:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"9924:13:7"},"referencedDeclaration":3848,"src":"9924:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9907:40:7"},"returnParameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1790,"src":"9979:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"9979:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9978:9:7"},"scope":1911,"src":"9882:213:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"10325:107:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1803,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1423,"src":"10356:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10356:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10372:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10356:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1807,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"10375:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10391:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1810,"name":"_decimalsOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1910,"src":"10397:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10397:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10391:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10375:39:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1814,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"10416:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"expression":{"id":1801,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"10342:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10349:6:7","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"10342:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10342:83:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1800,"id":1816,"nodeType":"Return","src":"10335:90:7"}]},"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"10101:113:7","text":" @dev Internal conversion function (from shares to assets) with support for rounding direction."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"_convertToAssets","nameLocation":"10228:16:7","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"shares","nameLocation":"10253:6:7","nodeType":"VariableDeclaration","scope":1818,"src":"10245:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"10245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1796,"mutability":"mutable","name":"rounding","nameLocation":"10275:8:7","nodeType":"VariableDeclaration","scope":1818,"src":"10261:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":1795,"nodeType":"UserDefinedTypeName","pathNode":{"id":1794,"name":"Math.Rounding","nameLocations":["10261:4:7","10266:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"10261:13:7"},"referencedDeclaration":3848,"src":"10261:13:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10244:40:7"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"10316:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1798,"name":"uint256","nodeType":"ElementaryTypeName","src":"10316:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10315:9:7"},"scope":1911,"src":"10219:213:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"10597:729:7","statements":[{"expression":{"arguments":[{"id":1833,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11191:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":1834,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"11199:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1837,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11215:4:7","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626_$1911","typeString":"contract ERC4626"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626_$1911","typeString":"contract ERC4626"}],"id":1836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11207:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:7","typeDescriptions":{}}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11207:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1839,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"11222:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1830,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"11164:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2263_$","typeString":"type(library SafeERC20)"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11174:16:7","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":2050,"src":"11164:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11164:65:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1841,"nodeType":"ExpressionStatement","src":"11164:65:7"},{"expression":{"arguments":[{"id":1843,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"11245:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1844,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"11255:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1842,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"11239:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1846,"nodeType":"ExpressionStatement","src":"11239:23:7"},{"eventCall":{"arguments":[{"id":1848,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"11286:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1849,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"11294:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1850,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"11304:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1851,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"11312:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1847,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"11278:7:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11278:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"EmitStatement","src":"11273:46:7"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"10438:53:7","text":" @dev Deposit/mint common workflow."},"id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"10505:8:7","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"caller","nameLocation":"10522:6:7","nodeType":"VariableDeclaration","scope":1855,"src":"10514:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"10514:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"receiver","nameLocation":"10538:8:7","nodeType":"VariableDeclaration","scope":1855,"src":"10530:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"10530:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"assets","nameLocation":"10556:6:7","nodeType":"VariableDeclaration","scope":1855,"src":"10548:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"10548:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"shares","nameLocation":"10572:6:7","nodeType":"VariableDeclaration","scope":1855,"src":"10564:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"10564:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10513:66:7"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"10597:0:7"},"scope":1911,"src":"10496:830:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1901,"nodeType":"Block","src":"11556:751:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"11570:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1870,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"11580:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11570:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1879,"nodeType":"IfStatement","src":"11566:84:7","trueBody":{"id":1878,"nodeType":"Block","src":"11587:63:7","statements":[{"expression":{"arguments":[{"id":1873,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"11617:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1874,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"11624:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1875,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"11632:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1872,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"11601:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11601:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1877,"nodeType":"ExpressionStatement","src":"11601:38:7"}]}},{"expression":{"arguments":[{"id":1881,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"12163:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1882,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"12170:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1880,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"12157:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12157:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1884,"nodeType":"ExpressionStatement","src":"12157:20:7"},{"expression":{"arguments":[{"id":1888,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"12210:6:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":1889,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"12218:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1890,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"12228:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1885,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"12187:9:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2263_$","typeString":"type(library SafeERC20)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12197:12:7","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2023,"src":"12187:22:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12187:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"ExpressionStatement","src":"12187:48:7"},{"eventCall":{"arguments":[{"id":1894,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"12260:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1895,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"12268:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"12278:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1897,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"12285:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1898,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"12293:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1893,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":180,"src":"12251:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12251:49:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1900,"nodeType":"EmitStatement","src":"12246:54:7"}]},"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"11332:56:7","text":" @dev Withdraw/redeem common workflow."},"id":1902,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"11402:9:7","nodeType":"FunctionDefinition","parameters":{"id":1867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"caller","nameLocation":"11429:6:7","nodeType":"VariableDeclaration","scope":1902,"src":"11421:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"11421:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"receiver","nameLocation":"11453:8:7","nodeType":"VariableDeclaration","scope":1902,"src":"11445:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1859,"name":"address","nodeType":"ElementaryTypeName","src":"11445:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"owner","nameLocation":"11479:5:7","nodeType":"VariableDeclaration","scope":1902,"src":"11471:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"11471:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1864,"mutability":"mutable","name":"assets","nameLocation":"11502:6:7","nodeType":"VariableDeclaration","scope":1902,"src":"11494:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"11494:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"shares","nameLocation":"11526:6:7","nodeType":"VariableDeclaration","scope":1902,"src":"11518:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"11518:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11411:127:7"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[],"src":"11556:0:7"},"scope":1911,"src":"11393:914:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1909,"nodeType":"Block","src":"12378:25:7","statements":[{"expression":{"hexValue":"30","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12395:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1906,"id":1908,"nodeType":"Return","src":"12388:8:7"}]},"id":1910,"implemented":true,"kind":"function","modifiers":[],"name":"_decimalsOffset","nameLocation":"12322:15:7","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[],"src":"12337:2:7"},"returnParameters":{"id":1906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1910,"src":"12371:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1904,"name":"uint8","nodeType":"ElementaryTypeName","src":"12371:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"12370:7:7"},"scope":1911,"src":"12313:90:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1912,"src":"3158:9247:7","usedErrors":[354,359,364,373,378,383,1260,1269,1278,1287,1990,2271,2276,2279,3843],"usedEvents":[168,180,1006,1015]}],"src":"118:12288:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1072],"IERC20Metadata":[1937]},"id":1938,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1913,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1938,"sourceUnit":1073,"src":"151:37:8","symbolAliases":[{"foreign":{"id":1914,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"159:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1917,"name":"IERC20","nameLocations":["305:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"305:6:8"},"id":1918,"nodeType":"InheritanceSpecifier","src":"305:6:8"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"190:86:8","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1937,"linearizedBaseContracts":[1937,1072],"name":"IERC20Metadata","nameLocation":"287:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1919,"nodeType":"StructuredDocumentation","src":"318:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1924,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:8","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"390:2:8"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1924,"src":"416:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1921,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:8"},"scope":1937,"src":"377:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1925,"nodeType":"StructuredDocumentation","src":"437:56:8","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1930,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:8","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[],"src":"513:2:8"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"539:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1927,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:8"},"scope":1937,"src":"498:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"560:65:8","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1936,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:8","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[],"src":"647:2:8"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1936,"src":"673:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1933,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:8"},"scope":1937,"src":"630:50:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1938,"src":"277:405:8","usedErrors":[],"usedEvents":[1006,1015]}],"src":"125:558:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1973]},"id":1974,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1939,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"149:1963:9","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1973,"linearizedBaseContracts":[1973],"name":"IERC20Permit","nameLocation":"2123:12:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"2142:850:9","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1958,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3006:6:9","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"owner","nameLocation":"3030:5:9","nodeType":"VariableDeclaration","scope":1958,"src":"3022:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1942,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"spender","nameLocation":"3053:7:9","nodeType":"VariableDeclaration","scope":1958,"src":"3045:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1944,"name":"address","nodeType":"ElementaryTypeName","src":"3045:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"value","nameLocation":"3078:5:9","nodeType":"VariableDeclaration","scope":1958,"src":"3070:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3070:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1949,"mutability":"mutable","name":"deadline","nameLocation":"3101:8:9","nodeType":"VariableDeclaration","scope":1958,"src":"3093:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"v","nameLocation":"3125:1:9","nodeType":"VariableDeclaration","scope":1958,"src":"3119:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1950,"name":"uint8","nodeType":"ElementaryTypeName","src":"3119:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"r","nameLocation":"3144:1:9","nodeType":"VariableDeclaration","scope":1958,"src":"3136:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1952,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3136:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"s","nameLocation":"3163:1:9","nodeType":"VariableDeclaration","scope":1958,"src":"3155:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1954,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3155:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3012:158:9"},"returnParameters":{"id":1957,"nodeType":"ParameterList","parameters":[],"src":"3179:0:9"},"scope":1973,"src":"2997:183:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"3186:294:9","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1966,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3494:6:9","nodeType":"FunctionDefinition","parameters":{"id":1962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"owner","nameLocation":"3509:5:9","nodeType":"VariableDeclaration","scope":1966,"src":"3501:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1960,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3500:15:9"},"returnParameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1966,"src":"3539:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3539:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3538:9:9"},"scope":1973,"src":"3485:63:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"3554:128:9","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1972,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3749:16:9","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[],"src":"3765:2:9"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1972,"src":"3791:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1969,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3791:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3790:9:9"},"scope":1973,"src":"3740:60:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1974,"src":"2113:1689:9","usedErrors":[],"usedEvents":[]}],"src":"123:3680:9"},"id":9},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[2516],"IERC20":[1072],"IERC20Permit":[1973],"SafeERC20":[2263]},"id":2264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1975,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":1073,"src":"141:37:10","symbolAliases":[{"foreign":{"id":1976,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"149:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"../extensions/IERC20Permit.sol","id":1979,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":1974,"src":"179:60:10","symbolAliases":[{"foreign":{"id":1978,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"187:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":1981,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2264,"sourceUnit":2517,"src":"240:51:10","symbolAliases":[{"foreign":{"id":1980,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"248:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"293:457:10","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":2263,"linearizedBaseContracts":[2263],"name":"SafeERC20","nameLocation":"759:9:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1985,"libraryName":{"id":1983,"name":"Address","nameLocations":["781:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2516,"src":"781:7:10"},"nodeType":"UsingForDirective","src":"775:26:10","typeName":{"id":1984,"name":"address","nodeType":"ElementaryTypeName","src":"793:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"documentation":{"id":1986,"nodeType":"StructuredDocumentation","src":"807:64:10","text":" @dev An operation with an ERC20 token failed."},"errorSelector":"5274afe7","id":1990,"name":"SafeERC20FailedOperation","nameLocation":"882:24:10","nodeType":"ErrorDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"token","nameLocation":"915:5:10","nodeType":"VariableDeclaration","scope":1990,"src":"907:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"907:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"906:15:10"},"src":"876:46:10"},{"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"928:71:10","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1999,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"1010:32:10","nodeType":"ErrorDefinition","parameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"spender","nameLocation":"1051:7:10","nodeType":"VariableDeclaration","scope":1999,"src":"1043:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1995,"mutability":"mutable","name":"currentAllowance","nameLocation":"1068:16:10","nodeType":"VariableDeclaration","scope":1999,"src":"1060:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1060:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1997,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1094:17:10","nodeType":"VariableDeclaration","scope":1999,"src":"1086:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:70:10"},"src":"1004:109:10"},{"body":{"id":2022,"nodeType":"Block","src":"1375:88:10","statements":[{"expression":{"arguments":[{"id":2011,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"1405:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2014,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"1427:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1433:8:10","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1039,"src":"1427:14:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2016,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"1444:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"1448:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1443:11:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2012,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1412:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1416:10:10","memberName":"encodeCall","nodeType":"MemberAccess","src":"1412:14:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1412:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2010,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"1385:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2021,"nodeType":"ExpressionStatement","src":"1385:71:10"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"1119:179:10","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2023,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1312:12:10","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"token","nameLocation":"1332:5:10","nodeType":"VariableDeclaration","scope":2023,"src":"1325:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":2002,"nodeType":"UserDefinedTypeName","pathNode":{"id":2001,"name":"IERC20","nameLocations":["1325:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"1325:6:10"},"referencedDeclaration":1072,"src":"1325:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"to","nameLocation":"1347:2:10","nodeType":"VariableDeclaration","scope":2023,"src":"1339:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2004,"name":"address","nodeType":"ElementaryTypeName","src":"1339:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2007,"mutability":"mutable","name":"value","nameLocation":"1359:5:10","nodeType":"VariableDeclaration","scope":2023,"src":"1351:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1351:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:41:10"},"returnParameters":{"id":2009,"nodeType":"ParameterList","parameters":[],"src":"1375:0:10"},"scope":2263,"src":"1303:160:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2049,"nodeType":"Block","src":"1792:98:10","statements":[{"expression":{"arguments":[{"id":2037,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1822:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2040,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"1844:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:12:10","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1071,"src":"1844:18:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":2042,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"1865:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"1871:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2033,"src":"1875:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1864:17:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":2038,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1829:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1833:10:10","memberName":"encodeCall","nodeType":"MemberAccess","src":"1829:14:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1829:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2036,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"1802:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:81:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2048,"nodeType":"ExpressionStatement","src":"1802:81:10"}]},"documentation":{"id":2024,"nodeType":"StructuredDocumentation","src":"1469:228:10","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":2050,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1711:16:10","nodeType":"FunctionDefinition","parameters":{"id":2034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"token","nameLocation":"1735:5:10","nodeType":"VariableDeclaration","scope":2050,"src":"1728:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":2026,"nodeType":"UserDefinedTypeName","pathNode":{"id":2025,"name":"IERC20","nameLocations":["1728:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"1728:6:10"},"referencedDeclaration":1072,"src":"1728:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"from","nameLocation":"1750:4:10","nodeType":"VariableDeclaration","scope":2050,"src":"1742:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"1742:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"to","nameLocation":"1764:2:10","nodeType":"VariableDeclaration","scope":2050,"src":"1756:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2030,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2033,"mutability":"mutable","name":"value","nameLocation":"1776:5:10","nodeType":"VariableDeclaration","scope":2050,"src":"1768:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2032,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1727:55:10"},"returnParameters":{"id":2035,"nodeType":"ParameterList","parameters":[],"src":"1792:0:10"},"scope":2263,"src":"1702:188:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2080,"nodeType":"Block","src":"2167:139:10","statements":[{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"oldAllowance","nameLocation":"2185:12:10","nodeType":"VariableDeclaration","scope":2080,"src":"2177:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2071,"initialValue":{"arguments":[{"arguments":[{"id":2067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2224:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2263","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2263","typeString":"library SafeERC20"}],"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2216:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:10","typeDescriptions":{}}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2216:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2069,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2231:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2063,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"2200:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2206:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"2200:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2200:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:62:10"},{"expression":{"arguments":[{"id":2073,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"2262:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":2074,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"2278:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"2293:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2278:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2072,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"2249:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"ExpressionStatement","src":"2249:50:10"}]},"documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"1896:180:10","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2090:21:10","nodeType":"FunctionDefinition","parameters":{"id":2059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"token","nameLocation":"2119:5:10","nodeType":"VariableDeclaration","scope":2081,"src":"2112:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":2053,"nodeType":"UserDefinedTypeName","pathNode":{"id":2052,"name":"IERC20","nameLocations":["2112:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"2112:6:10"},"referencedDeclaration":1072,"src":"2112:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"spender","nameLocation":"2134:7:10","nodeType":"VariableDeclaration","scope":2081,"src":"2126:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"2126:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"2151:5:10","nodeType":"VariableDeclaration","scope":2081,"src":"2143:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2143:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2111:46:10"},"returnParameters":{"id":2060,"nodeType":"ParameterList","parameters":[],"src":"2167:0:10"},"scope":2263,"src":"2081:225:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2123,"nodeType":"Block","src":"2607:370:10","statements":[{"id":2122,"nodeType":"UncheckedBlock","src":"2617:354:10","statements":[{"assignments":[2093],"declarations":[{"constant":false,"id":2093,"mutability":"mutable","name":"currentAllowance","nameLocation":"2649:16:10","nodeType":"VariableDeclaration","scope":2122,"src":"2641:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2092,"name":"uint256","nodeType":"ElementaryTypeName","src":"2641:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2102,"initialValue":{"arguments":[{"arguments":[{"id":2098,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2692:4:10","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$2263","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$2263","typeString":"library SafeERC20"}],"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2684:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2096,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:10","typeDescriptions":{}}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2699:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2094,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"2668:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2674:9:10","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"2668:15:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2668:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2641:66:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2103,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"2725:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2104,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"2744:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2725:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2113,"nodeType":"IfStatement","src":"2721:160:10","trueBody":{"id":2112,"nodeType":"Block","src":"2763:118:10","statements":[{"errorCall":{"arguments":[{"id":2107,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2821:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2108,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"2830:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2109,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"2848:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2106,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2788:32:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":2110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2788:78:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2111,"nodeType":"RevertStatement","src":"2781:85:10"}]}},{"expression":{"arguments":[{"id":2115,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2085,"src":"2907:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":2116,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2914:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2117,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"2923:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2118,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"2942:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2923:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2114,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"2894:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2894:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2121,"nodeType":"ExpressionStatement","src":"2894:66:10"}]}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"2312:192:10","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."},"id":2124,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2518:21:10","nodeType":"FunctionDefinition","parameters":{"id":2090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"token","nameLocation":"2547:5:10","nodeType":"VariableDeclaration","scope":2124,"src":"2540:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":2084,"nodeType":"UserDefinedTypeName","pathNode":{"id":2083,"name":"IERC20","nameLocations":["2540:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"2540:6:10"},"referencedDeclaration":1072,"src":"2540:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2087,"mutability":"mutable","name":"spender","nameLocation":"2562:7:10","nodeType":"VariableDeclaration","scope":2124,"src":"2554:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2086,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2089,"mutability":"mutable","name":"requestedDecrease","nameLocation":"2579:17:10","nodeType":"VariableDeclaration","scope":2124,"src":"2571:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2571:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2539:58:10"},"returnParameters":{"id":2091,"nodeType":"ParameterList","parameters":[],"src":"2607:0:10"},"scope":2263,"src":"2509:468:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2170,"nodeType":"Block","src":"3373:303:10","statements":[{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"approvalCall","nameLocation":"3396:12:10","nodeType":"VariableDeclaration","scope":2170,"src":"3383:25:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2135,"name":"bytes","nodeType":"ElementaryTypeName","src":"3383:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2145,"initialValue":{"arguments":[{"expression":{"id":2139,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3426:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3432:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"3426:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2141,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"3442:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"3451:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3441:16:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":2137,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3411:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3415:10:10","memberName":"encodeCall","nodeType":"MemberAccess","src":"3411:14:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3411:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3383:75:10"},{"condition":{"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3473:45:10","subExpression":{"arguments":[{"id":2147,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3498:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":2148,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"3505:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2146,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"3474:23:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3474:44:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2169,"nodeType":"IfStatement","src":"3469:201:10","trueBody":{"id":2168,"nodeType":"Block","src":"3520:150:10","statements":[{"expression":{"arguments":[{"id":2152,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3554:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":2155,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3576:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3582:7:10","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1059,"src":"3576:13:10","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":2157,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"3592:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":2158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3591:12:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":2153,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3561:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3565:10:10","memberName":"encodeCall","nodeType":"MemberAccess","src":"3561:14:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2151,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3534:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2162,"nodeType":"ExpressionStatement","src":"3534:71:10"},{"expression":{"arguments":[{"id":2164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"3639:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":2165,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"3646:12:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2163,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3619:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2167,"nodeType":"ExpressionStatement","src":"3619:40:10"}]}}]},"documentation":{"id":2125,"nodeType":"StructuredDocumentation","src":"2983:308:10","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"3305:12:10","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"token","nameLocation":"3325:5:10","nodeType":"VariableDeclaration","scope":2171,"src":"3318:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":2127,"nodeType":"UserDefinedTypeName","pathNode":{"id":2126,"name":"IERC20","nameLocations":["3318:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"3318:6:10"},"referencedDeclaration":1072,"src":"3318:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"spender","nameLocation":"3340:7:10","nodeType":"VariableDeclaration","scope":2171,"src":"3332:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"3332:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"value","nameLocation":"3357:5:10","nodeType":"VariableDeclaration","scope":2171,"src":"3349:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3349:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3317:46:10"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[],"src":"3373:0:10"},"scope":2263,"src":"3296:380:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2212,"nodeType":"Block","src":"4129:559:10","statements":[{"assignments":[2181],"declarations":[{"constant":false,"id":2181,"mutability":"mutable","name":"returndata","nameLocation":"4491:10:10","nodeType":"VariableDeclaration","scope":2212,"src":"4478:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2180,"name":"bytes","nodeType":"ElementaryTypeName","src":"4478:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2189,"initialValue":{"arguments":[{"id":2187,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2177,"src":"4532:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2184,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4512:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4504:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2182,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:10","typeDescriptions":{}}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4519:12:10","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":2337,"src":"4504:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4504:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4478:59:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2190,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"4551:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4562:6:10","memberName":"length","nodeType":"MemberAccess","src":"4551:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4572:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4551:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:31:10","subExpression":{"arguments":[{"id":2196,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"4589:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2197,"name":"bool","nodeType":"ElementaryTypeName","src":"4602:4:10","typeDescriptions":{}}}],"id":2199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2194,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4578:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4582:6:10","memberName":"decode","nodeType":"MemberAccess","src":"4578:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4551:57:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2211,"nodeType":"IfStatement","src":"4547:135:10","trueBody":{"id":2210,"nodeType":"Block","src":"4610:72:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2206,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4664:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}],"id":2205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4656:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2204,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:10","typeDescriptions":{}}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2203,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"4631:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4631:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2209,"nodeType":"RevertStatement","src":"4624:47:10"}]}}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"3682:372:10","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":2213,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"4068:19:10","nodeType":"FunctionDefinition","parameters":{"id":2178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"token","nameLocation":"4095:5:10","nodeType":"VariableDeclaration","scope":2213,"src":"4088:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":2174,"nodeType":"UserDefinedTypeName","pathNode":{"id":2173,"name":"IERC20","nameLocations":["4088:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"4088:6:10"},"referencedDeclaration":1072,"src":"4088:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"data","nameLocation":"4115:4:10","nodeType":"VariableDeclaration","scope":2213,"src":"4102:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2176,"name":"bytes","nodeType":"ElementaryTypeName","src":"4102:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4087:33:10"},"returnParameters":{"id":2179,"nodeType":"ParameterList","parameters":[],"src":"4129:0:10"},"scope":2263,"src":"4059:629:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2261,"nodeType":"Block","src":"5278:489:10","statements":[{"assignments":[2225,2227],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"success","nameLocation":"5579:7:10","nodeType":"VariableDeclaration","scope":2261,"src":"5574:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2224,"name":"bool","nodeType":"ElementaryTypeName","src":"5574:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"returndata","nameLocation":"5601:10:10","nodeType":"VariableDeclaration","scope":2261,"src":"5588:23:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"5588:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2235,"initialValue":{"arguments":[{"id":2233,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"5635:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2230,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5623:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}],"id":2229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5615:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2228,"name":"address","nodeType":"ElementaryTypeName","src":"5615:7:10","typeDescriptions":{}}},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5630:4:10","memberName":"call","nodeType":"MemberAccess","src":"5615:19:10","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5573:67:10"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2236,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"5657:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2237,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"5669:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:10","memberName":"length","nodeType":"MemberAccess","src":"5669:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5690:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5669:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2243,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"5706:10:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5719:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":2244,"name":"bool","nodeType":"ElementaryTypeName","src":"5719:4:10","typeDescriptions":{}}}],"id":2246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5718:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":2241,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5695:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5699:6:10","memberName":"decode","nodeType":"MemberAccess","src":"5695:10:10","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5695:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5669:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5668:58:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:69:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":2253,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5738:5:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}],"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5730:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"5730:7:10","typeDescriptions":{}}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5730:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5745:4:10","memberName":"code","nodeType":"MemberAccess","src":"5730:19:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:10","memberName":"length","nodeType":"MemberAccess","src":"5730:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5759:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5730:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5657:103:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2223,"id":2260,"nodeType":"Return","src":"5650:110:10"}]},"documentation":{"id":2214,"nodeType":"StructuredDocumentation","src":"4694:490:10","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."},"id":2262,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"5198:23:10","nodeType":"FunctionDefinition","parameters":{"id":2220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2217,"mutability":"mutable","name":"token","nameLocation":"5229:5:10","nodeType":"VariableDeclaration","scope":2262,"src":"5222:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":2216,"nodeType":"UserDefinedTypeName","pathNode":{"id":2215,"name":"IERC20","nameLocations":["5222:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"5222:6:10"},"referencedDeclaration":1072,"src":"5222:6:10","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2219,"mutability":"mutable","name":"data","nameLocation":"5249:4:10","nodeType":"VariableDeclaration","scope":2262,"src":"5236:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5221:33:10"},"returnParameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2262,"src":"5272:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2221,"name":"bool","nodeType":"ElementaryTypeName","src":"5272:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5271:6:10"},"scope":2263,"src":"5189:578:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2264,"src":"751:5018:10","usedErrors":[1990,1999],"usedEvents":[]}],"src":"115:5655:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2516]},"id":2517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2265,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2266,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2516,"linearizedBaseContracts":[2516],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2271,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":2271,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2276,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":2276,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2279,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":2319,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2289,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2292,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2302,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":2301,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2297,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}],"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2295,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2294,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2300,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[2304,null],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":2319,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2303,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2311,"initialValue":{"arguments":[{"hexValue":"","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2305,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2307,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":2312,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2318,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":2317,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2314,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2316,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":2280,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":2285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2282,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":2320,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2281,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2284,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":2320,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2283,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":2286,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2516,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2336,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":2331,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2332,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2330,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2383,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2329,"id":2335,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2337,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":2337,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2322,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2325,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":2337,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2324,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2337,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2327,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2516,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2382,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2351,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2349,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2364,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":2363,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2359,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2516","typeString":"library Address"}],"id":2358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2357,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2356,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2362,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[2366,2368],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":2382,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2365,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2368,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":2382,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2367,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2375,"initialValue":{"arguments":[{"id":2373,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2369,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":2377,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2378,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2379,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2368,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2376,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2348,"id":2381,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":2338,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2340,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":2383,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2342,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":2383,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2341,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2344,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":2383,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2343,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":2348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2383,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2346,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2516,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[2394,2396],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":2408,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2393,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":2408,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2395,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2401,"initialValue":{"arguments":[{"id":2399,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2397,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":2403,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2404,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2405,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2396,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2402,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2392,"id":2407,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":2409,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2385,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":2409,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2387,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2409,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2390,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2516,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[2420,2422],"declarations":[{"constant":false,"id":2420,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":2434,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2419,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2422,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":2434,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2421,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2427,"initialValue":{"arguments":[{"id":2425,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2423,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":2429,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2430,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2420,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2431,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2422,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2428,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2418,"id":2433,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":2410,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":2415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":2435,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2411,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2414,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":2435,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2413,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":2418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2435,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2416,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2516,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2474,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":2447,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2472,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2454,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2458,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2469,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":2468,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":2465,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2464,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2467,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":2470,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2446,"id":2471,"nodeType":"Return","src":"5173:17:11"}]},"id":2473,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":2453,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":2450,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2449,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2452,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2475,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":2475,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":2475,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2439,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":2475,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2441,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2475,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2444,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2516,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2496,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":2485,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2494,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":2492,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2484,"id":2493,"nodeType":"Return","src":"5597:17:11"}]},"id":2495,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":2491,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":2488,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2487,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2515,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2490,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":2476,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2497,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2478,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":2497,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2477,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2480,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":2497,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2479,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2497,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2482,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2516,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2514,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2503,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2512,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2509,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2279,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2511,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2513,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2508,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2500,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":2507,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2515,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2515,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2499,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":2502,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2516,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2517,"src":"195:6066:11","usedErrors":[2271,2276,2279],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2538]},"id":2539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2518,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2538,"linearizedBaseContracts":[2538],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2527,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2523,"id":2526,"nodeType":"Return","src":"728:17:12"}]},"id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2520,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2521,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2538,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2536,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2533,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2532,"id":2535,"nodeType":"Return","src":"835:15:12"}]},"id":2537,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2537,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2530,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2538,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2539,"src":"624:235:12","usedErrors":[],"usedEvents":[]}],"src":"101:759:12"},"id":12},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[2606]},"id":2607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2540,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"125:83:13","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":2606,"linearizedBaseContracts":[2606],"name":"Nonces","nameLocation":"227:6:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"240:90:13","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":2548,"name":"InvalidAccountNonce","nameLocation":"341:19:13","nodeType":"ErrorDefinition","parameters":{"id":2547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2544,"mutability":"mutable","name":"account","nameLocation":"369:7:13","nodeType":"VariableDeclaration","scope":2548,"src":"361:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2543,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2546,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:13","nodeType":"VariableDeclaration","scope":2548,"src":"378:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:13"},"src":"335:65:13"},{"constant":false,"id":2552,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:13","nodeType":"VariableDeclaration","scope":2606,"src":"406:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2551,"keyName":"account","keyNameLocation":"422:7:13","keyType":{"id":2549,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2550,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":2564,"nodeType":"Block","src":"607:38:13","statements":[{"expression":{"baseExpression":{"id":2560,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"624:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2562,"indexExpression":{"id":2561,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"632:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2559,"id":2563,"nodeType":"Return","src":"617:21:13"}]},"documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"464:69:13","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:13","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"owner","nameLocation":"562:5:13","nodeType":"VariableDeclaration","scope":2565,"src":"554:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:13"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"598:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:13"},"scope":2606,"src":"538:107:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2579,"nodeType":"Block","src":"828:326:13","statements":[{"id":2578,"nodeType":"UncheckedBlock","src":"1031:117:13","statements":[{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:13","subExpression":{"baseExpression":{"id":2573,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"1121:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2575,"indexExpression":{"id":2574,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"1129:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2572,"id":2577,"nodeType":"Return","src":"1114:23:13"}]}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"651:103:13","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:13","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"owner","nameLocation":"786:5:13","nodeType":"VariableDeclaration","scope":2580,"src":"778:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:13"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"819:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:13"},"scope":2606,"src":"759:395:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2604,"nodeType":"Block","src":"1338:149:13","statements":[{"assignments":[2589],"declarations":[{"constant":false,"id":2589,"mutability":"mutable","name":"current","nameLocation":"1356:7:13","nodeType":"VariableDeclaration","scope":2604,"src":"1348:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2593,"initialValue":{"arguments":[{"id":2591,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1376:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2590,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"1366:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"1396:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2595,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1405:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2603,"nodeType":"IfStatement","src":"1392:89:13","trueBody":{"id":2602,"nodeType":"Block","src":"1414:67:13","statements":[{"errorCall":{"arguments":[{"id":2598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"1455:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2599,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2597,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"1435:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2601,"nodeType":"RevertStatement","src":"1428:42:13"}]}}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"1160:100:13","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":2605,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:13","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"owner","nameLocation":"1299:5:13","nodeType":"VariableDeclaration","scope":2605,"src":"1291:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2582,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:13","nodeType":"VariableDeclaration","scope":2605,"src":"1306:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:13"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[],"src":"1338:0:13"},"scope":2606,"src":"1265:222:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2607,"src":"209:1280:13","usedErrors":[2548],"usedEvents":[]}],"src":"99:1391:13"},"id":13},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[2612],"ShortStrings":[2823],"StorageSlot":[2933]},"id":2824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2610,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2824,"sourceUnit":2934,"src":"132:46:14","symbolAliases":[{"foreign":{"id":2609,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"140:11:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":2612,"name":"ShortString","nameLocation":"353:11:14","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:14","underlyingType":{"id":2611,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"378:876:14","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2823,"linearizedBaseContracts":[2823],"name":"ShortStrings","nameLocation":"1263:12:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2616,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:14","nodeType":"VariableDeclaration","scope":2823,"src":"1345:111:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":2620,"name":"StringTooLong","nameLocation":"1469:13:14","nodeType":"ErrorDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"str","nameLocation":"1490:3:14","nodeType":"VariableDeclaration","scope":2620,"src":"1483:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2617,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:14"},"src":"1463:32:14"},{"errorSelector":"b3512b0c","id":2622,"name":"InvalidShortString","nameLocation":"1506:18:14","nodeType":"ErrorDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[],"src":"1524:2:14"},"src":"1500:27:14"},{"body":{"id":2665,"nodeType":"Block","src":"1786:208:14","statements":[{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:14","nodeType":"VariableDeclaration","scope":2665,"src":"1796:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2631,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2637,"initialValue":{"arguments":[{"id":2635,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1822:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2633,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:14","typeDescriptions":{}}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2638,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"1840:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:14","memberName":"length","nodeType":"MemberAccess","src":"1840:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2647,"nodeType":"IfStatement","src":"1836:72:14","trueBody":{"id":2646,"nodeType":"Block","src":"1858:50:14","statements":[{"errorCall":{"arguments":[{"id":2643,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"1893:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2642,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"1879:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2645,"nodeType":"RevertStatement","src":"1872:25:14"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2656,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"1965:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:14","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:14","typeDescriptions":{}}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":2659,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"1974:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:14","memberName":"length","nodeType":"MemberAccess","src":"1974:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:14","typeDescriptions":{}}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2648,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"1924:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"type(ShortString)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"functionReturnParameters":2630,"id":2664,"nodeType":"Return","src":"1917:70:14"}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"1533:170:14","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":2666,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:14","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"str","nameLocation":"1745:3:14","nodeType":"VariableDeclaration","scope":2666,"src":"1731:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2624,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:14"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2666,"src":"1773:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":2628,"nodeType":"UserDefinedTypeName","pathNode":{"id":2627,"name":"ShortString","nameLocations":["1773:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"1773:11:14"},"referencedDeclaration":2612,"src":"1773:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:14"},"scope":2823,"src":"1708:286:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2691,"nodeType":"Block","src":"2152:331:14","statements":[{"assignments":[2676],"declarations":[{"constant":false,"id":2676,"mutability":"mutable","name":"len","nameLocation":"2170:3:14","nodeType":"VariableDeclaration","scope":2691,"src":"2162:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2680,"initialValue":{"arguments":[{"id":2678,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"2187:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}],"id":2677,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"2176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2612_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:14"},{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"str","nameLocation":"2294:3:14","nodeType":"VariableDeclaration","scope":2691,"src":"2280:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2681,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2687,"initialValue":{"arguments":[{"hexValue":"3332","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2683,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:14"},{"AST":{"nativeSrc":"2376:81:14","nodeType":"YulBlock","src":"2376:81:14","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2397:3:14","nodeType":"YulIdentifier","src":"2397:3:14"},{"name":"len","nativeSrc":"2402:3:14","nodeType":"YulIdentifier","src":"2402:3:14"}],"functionName":{"name":"mstore","nativeSrc":"2390:6:14","nodeType":"YulIdentifier","src":"2390:6:14"},"nativeSrc":"2390:16:14","nodeType":"YulFunctionCall","src":"2390:16:14"},"nativeSrc":"2390:16:14","nodeType":"YulExpressionStatement","src":"2390:16:14"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2430:3:14","nodeType":"YulIdentifier","src":"2430:3:14"},{"kind":"number","nativeSrc":"2435:4:14","nodeType":"YulLiteral","src":"2435:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2426:3:14","nodeType":"YulIdentifier","src":"2426:3:14"},"nativeSrc":"2426:14:14","nodeType":"YulFunctionCall","src":"2426:14:14"},{"name":"sstr","nativeSrc":"2442:4:14","nodeType":"YulIdentifier","src":"2442:4:14"}],"functionName":{"name":"mstore","nativeSrc":"2419:6:14","nodeType":"YulIdentifier","src":"2419:6:14"},"nativeSrc":"2419:28:14","nodeType":"YulFunctionCall","src":"2419:28:14"},"nativeSrc":"2419:28:14","nodeType":"YulExpressionStatement","src":"2419:28:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2676,"isOffset":false,"isSlot":false,"src":"2402:3:14","valueSize":1},{"declaration":2670,"isOffset":false,"isSlot":false,"src":"2442:4:14","valueSize":1},{"declaration":2682,"isOffset":false,"isSlot":false,"src":"2397:3:14","valueSize":1},{"declaration":2682,"isOffset":false,"isSlot":false,"src":"2430:3:14","valueSize":1}],"id":2688,"nodeType":"InlineAssembly","src":"2367:90:14"},{"expression":{"id":2689,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2473:3:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2674,"id":2690,"nodeType":"Return","src":"2466:10:14"}]},"documentation":{"id":2667,"nodeType":"StructuredDocumentation","src":"2000:73:14","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2692,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:14","nodeType":"FunctionDefinition","parameters":{"id":2671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:14","nodeType":"VariableDeclaration","scope":2692,"src":"2096:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":2669,"nodeType":"UserDefinedTypeName","pathNode":{"id":2668,"name":"ShortString","nameLocations":["2096:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"2096:11:14"},"referencedDeclaration":2612,"src":"2096:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:14"},"returnParameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2692,"src":"2137:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2672,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:14"},"scope":2823,"src":"2078:405:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2723,"nodeType":"Block","src":"2625:175:14","statements":[{"assignments":[2702],"declarations":[{"constant":false,"id":2702,"mutability":"mutable","name":"result","nameLocation":"2643:6:14","nodeType":"VariableDeclaration","scope":2723,"src":"2635:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2712,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2707,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"2679:4:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}],"expression":{"id":2705,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"2660:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"type(ShortString)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2672:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"2660:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2612_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2652:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2703,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:14","typeDescriptions":{}}},"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2652:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2652:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2635:57:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2713,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"2706:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2715:2:14","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2706:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2720,"nodeType":"IfStatement","src":"2702:69:14","trueBody":{"id":2719,"nodeType":"Block","src":"2719:52:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2716,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"2740:18:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2740:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2718,"nodeType":"RevertStatement","src":"2733:27:14"}]}},{"expression":{"id":2721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"2787:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2700,"id":2722,"nodeType":"Return","src":"2780:13:14"}]},"documentation":{"id":2693,"nodeType":"StructuredDocumentation","src":"2489:61:14","text":" @dev Return the length of a `ShortString`."},"id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2564:10:14","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"sstr","nameLocation":"2587:4:14","nodeType":"VariableDeclaration","scope":2724,"src":"2575:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":2695,"nodeType":"UserDefinedTypeName","pathNode":{"id":2694,"name":"ShortString","nameLocations":["2575:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"2575:11:14"},"referencedDeclaration":2612,"src":"2575:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"internal"}],"src":"2574:18:14"},"returnParameters":{"id":2700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2724,"src":"2616:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2616:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2615:9:14"},"scope":2823,"src":"2555:245:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2763,"nodeType":"Block","src":"3023:231:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3043:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2735,"name":"bytes","nodeType":"ElementaryTypeName","src":"3037:5:14","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3050:6:14","memberName":"length","nodeType":"MemberAccess","src":"3037:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3037:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2761,"nodeType":"Block","src":"3121:127:14","statements":[{"expression":{"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2750,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2729,"src":"3161:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2747,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"3135:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2933_$","typeString":"type(library StorageSlot)"}},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:13:14","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2910,"src":"3135:25:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2841_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3135:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2841_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3168:5:14","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2840,"src":"3135:38:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3176:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3135:46:14","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2755,"nodeType":"ExpressionStatement","src":"3135:46:14"},{"expression":{"arguments":[{"id":2758,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3219:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2756,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"3202:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"type(ShortString)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3214:4:14","memberName":"wrap","nodeType":"MemberAccess","src":"3202:16:14","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3202:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"functionReturnParameters":2734,"id":2760,"nodeType":"Return","src":"3195:42:14"}]},"id":2762,"nodeType":"IfStatement","src":"3033:215:14","trueBody":{"id":2746,"nodeType":"Block","src":"3063:52:14","statements":[{"expression":{"arguments":[{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"3098:5:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2742,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3084:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"functionReturnParameters":2734,"id":2745,"nodeType":"Return","src":"3077:27:14"}]}}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"2806:103:14","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2764,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2923:25:14","nodeType":"FunctionDefinition","parameters":{"id":2730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"value","nameLocation":"2963:5:14","nodeType":"VariableDeclaration","scope":2764,"src":"2949:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2726,"name":"string","nodeType":"ElementaryTypeName","src":"2949:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2729,"mutability":"mutable","name":"store","nameLocation":"2985:5:14","nodeType":"VariableDeclaration","scope":2764,"src":"2970:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2728,"name":"string","nodeType":"ElementaryTypeName","src":"2970:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2948:43:14"},"returnParameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2764,"src":"3010:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":2732,"nodeType":"UserDefinedTypeName","pathNode":{"id":2731,"name":"ShortString","nameLocations":["3010:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"3010:11:14"},"referencedDeclaration":2612,"src":"3010:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"internal"}],"src":"3009:13:14"},"scope":2823,"src":"2914:340:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2790,"nodeType":"Block","src":"3494:158:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2777,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"3527:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}],"expression":{"id":2775,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"3508:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"type(ShortString)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3520:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"3508:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2612_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3508:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2779,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"3537:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3508:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2788,"nodeType":"Block","src":"3609:37:14","statements":[{"expression":{"id":2786,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"3630:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2774,"id":2787,"nodeType":"Return","src":"3623:12:14"}]},"id":2789,"nodeType":"IfStatement","src":"3504:142:14","trueBody":{"id":2785,"nodeType":"Block","src":"3556:47:14","statements":[{"expression":{"arguments":[{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"3586:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}],"id":2781,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"3577:8:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2612_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3577:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2774,"id":2784,"nodeType":"Return","src":"3570:22:14"}]}}]},"documentation":{"id":2765,"nodeType":"StructuredDocumentation","src":"3260:120:14","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2791,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3394:20:14","nodeType":"FunctionDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"value","nameLocation":"3427:5:14","nodeType":"VariableDeclaration","scope":2791,"src":"3415:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":2767,"nodeType":"UserDefinedTypeName","pathNode":{"id":2766,"name":"ShortString","nameLocations":["3415:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"3415:11:14"},"referencedDeclaration":2612,"src":"3415:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2770,"mutability":"mutable","name":"store","nameLocation":"3449:5:14","nodeType":"VariableDeclaration","scope":2791,"src":"3434:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2769,"name":"string","nodeType":"ElementaryTypeName","src":"3434:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3414:41:14"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2791,"src":"3479:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2772,"name":"string","nodeType":"ElementaryTypeName","src":"3479:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3478:15:14"},"scope":2823,"src":"3385:267:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2821,"nodeType":"Block","src":"4132:174:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"4165:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}],"expression":{"id":2802,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"4146:11:14","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"type(ShortString)"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4158:6:14","memberName":"unwrap","nodeType":"MemberAccess","src":"4146:18:14","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$2612_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2806,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"4175:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4146:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2819,"nodeType":"Block","src":"4249:51:14","statements":[{"expression":{"expression":{"arguments":[{"id":2815,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"4276:5:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2813,"name":"bytes","nodeType":"ElementaryTypeName","src":"4270:5:14","typeDescriptions":{}}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4283:6:14","memberName":"length","nodeType":"MemberAccess","src":"4270:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2801,"id":2818,"nodeType":"Return","src":"4263:26:14"}]},"id":2820,"nodeType":"IfStatement","src":"4142:158:14","trueBody":{"id":2812,"nodeType":"Block","src":"4194:49:14","statements":[{"expression":{"arguments":[{"id":2809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"4226:5:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}],"id":2808,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"4215:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2612_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4215:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2801,"id":2811,"nodeType":"Return","src":"4208:24:14"}]}}]},"documentation":{"id":2792,"nodeType":"StructuredDocumentation","src":"3658:364:14","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2822,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4036:22:14","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"value","nameLocation":"4071:5:14","nodeType":"VariableDeclaration","scope":2822,"src":"4059:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":2794,"nodeType":"UserDefinedTypeName","pathNode":{"id":2793,"name":"ShortString","nameLocations":["4059:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"4059:11:14"},"referencedDeclaration":2612,"src":"4059:11:14","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"store","nameLocation":"4093:5:14","nodeType":"VariableDeclaration","scope":2822,"src":"4078:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"4078:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4058:41:14"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2822,"src":"4123:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"4123:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4122:9:14"},"scope":2823,"src":"4027:279:14","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2824,"src":"1255:3053:14","usedErrors":[2620,2622],"usedEvents":[]}],"src":"106:4203:14"},"id":14},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2933]},"id":2934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2826,"nodeType":"StructuredDocumentation","src":"219:1025:15","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2933,"linearizedBaseContracts":[2933],"name":"StorageSlot","nameLocation":"1253:11:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2829,"members":[{"constant":false,"id":2828,"mutability":"mutable","name":"value","nameLocation":"1308:5:15","nodeType":"VariableDeclaration","scope":2829,"src":"1300:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2827,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:15","nodeType":"StructDefinition","scope":2933,"src":"1271:49:15","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2832,"members":[{"constant":false,"id":2831,"mutability":"mutable","name":"value","nameLocation":"1360:5:15","nodeType":"VariableDeclaration","scope":2832,"src":"1355:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2830,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:15","nodeType":"StructDefinition","scope":2933,"src":"1326:46:15","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2835,"members":[{"constant":false,"id":2834,"mutability":"mutable","name":"value","nameLocation":"1415:5:15","nodeType":"VariableDeclaration","scope":2835,"src":"1407:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2833,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:15","nodeType":"StructDefinition","scope":2933,"src":"1378:49:15","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2838,"members":[{"constant":false,"id":2837,"mutability":"mutable","name":"value","nameLocation":"1470:5:15","nodeType":"VariableDeclaration","scope":2838,"src":"1462:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:15","nodeType":"StructDefinition","scope":2933,"src":"1433:49:15","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2841,"members":[{"constant":false,"id":2840,"mutability":"mutable","name":"value","nameLocation":"1523:5:15","nodeType":"VariableDeclaration","scope":2841,"src":"1516:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2839,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:15","nodeType":"StructDefinition","scope":2933,"src":"1488:47:15","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2844,"members":[{"constant":false,"id":2843,"mutability":"mutable","name":"value","nameLocation":"1574:5:15","nodeType":"VariableDeclaration","scope":2844,"src":"1568:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:15","nodeType":"StructDefinition","scope":2933,"src":"1541:45:15","visibility":"public"},{"body":{"id":2854,"nodeType":"Block","src":"1768:106:15","statements":[{"AST":{"nativeSrc":"1830:38:15","nodeType":"YulBlock","src":"1830:38:15","statements":[{"nativeSrc":"1844:14:15","nodeType":"YulAssignment","src":"1844:14:15","value":{"name":"slot","nativeSrc":"1854:4:15","nodeType":"YulIdentifier","src":"1854:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:15","nodeType":"YulIdentifier","src":"1844:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2851,"isOffset":false,"isSlot":true,"src":"1844:6:15","suffix":"slot","valueSize":1},{"declaration":2847,"isOffset":false,"isSlot":false,"src":"1854:4:15","valueSize":1}],"id":2853,"nodeType":"InlineAssembly","src":"1821:47:15"}]},"documentation":{"id":2845,"nodeType":"StructuredDocumentation","src":"1592:87:15","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:15","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"slot","nameLocation":"1716:4:15","nodeType":"VariableDeclaration","scope":2855,"src":"1708:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:15"},"returnParameters":{"id":2852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"r","nameLocation":"1765:1:15","nodeType":"VariableDeclaration","scope":2855,"src":"1745:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2829_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2850,"nodeType":"UserDefinedTypeName","pathNode":{"id":2849,"name":"AddressSlot","nameLocations":["1745:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2829,"src":"1745:11:15"},"referencedDeclaration":2829,"src":"1745:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2829_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:15"},"scope":2933,"src":"1684:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2865,"nodeType":"Block","src":"2056:106:15","statements":[{"AST":{"nativeSrc":"2118:38:15","nodeType":"YulBlock","src":"2118:38:15","statements":[{"nativeSrc":"2132:14:15","nodeType":"YulAssignment","src":"2132:14:15","value":{"name":"slot","nativeSrc":"2142:4:15","nodeType":"YulIdentifier","src":"2142:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:15","nodeType":"YulIdentifier","src":"2132:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2862,"isOffset":false,"isSlot":true,"src":"2132:6:15","suffix":"slot","valueSize":1},{"declaration":2858,"isOffset":false,"isSlot":false,"src":"2142:4:15","valueSize":1}],"id":2864,"nodeType":"InlineAssembly","src":"2109:47:15"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"1880:87:15","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2866,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:15","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2858,"mutability":"mutable","name":"slot","nameLocation":"2004:4:15","nodeType":"VariableDeclaration","scope":2866,"src":"1996:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:15"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"r","nameLocation":"2053:1:15","nodeType":"VariableDeclaration","scope":2866,"src":"2033:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2832_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2861,"nodeType":"UserDefinedTypeName","pathNode":{"id":2860,"name":"BooleanSlot","nameLocations":["2033:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2832,"src":"2033:11:15"},"referencedDeclaration":2832,"src":"2033:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2832_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:15"},"scope":2933,"src":"1972:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2876,"nodeType":"Block","src":"2344:106:15","statements":[{"AST":{"nativeSrc":"2406:38:15","nodeType":"YulBlock","src":"2406:38:15","statements":[{"nativeSrc":"2420:14:15","nodeType":"YulAssignment","src":"2420:14:15","value":{"name":"slot","nativeSrc":"2430:4:15","nodeType":"YulIdentifier","src":"2430:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:15","nodeType":"YulIdentifier","src":"2420:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2873,"isOffset":false,"isSlot":true,"src":"2420:6:15","suffix":"slot","valueSize":1},{"declaration":2869,"isOffset":false,"isSlot":false,"src":"2430:4:15","valueSize":1}],"id":2875,"nodeType":"InlineAssembly","src":"2397:47:15"}]},"documentation":{"id":2867,"nodeType":"StructuredDocumentation","src":"2168:87:15","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2877,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:15","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2869,"mutability":"mutable","name":"slot","nameLocation":"2292:4:15","nodeType":"VariableDeclaration","scope":2877,"src":"2284:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:15"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"r","nameLocation":"2341:1:15","nodeType":"VariableDeclaration","scope":2877,"src":"2321:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2835_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2872,"nodeType":"UserDefinedTypeName","pathNode":{"id":2871,"name":"Bytes32Slot","nameLocations":["2321:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2835,"src":"2321:11:15"},"referencedDeclaration":2835,"src":"2321:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2835_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:15"},"scope":2933,"src":"2260:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2887,"nodeType":"Block","src":"2632:106:15","statements":[{"AST":{"nativeSrc":"2694:38:15","nodeType":"YulBlock","src":"2694:38:15","statements":[{"nativeSrc":"2708:14:15","nodeType":"YulAssignment","src":"2708:14:15","value":{"name":"slot","nativeSrc":"2718:4:15","nodeType":"YulIdentifier","src":"2718:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:15","nodeType":"YulIdentifier","src":"2708:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2884,"isOffset":false,"isSlot":true,"src":"2708:6:15","suffix":"slot","valueSize":1},{"declaration":2880,"isOffset":false,"isSlot":false,"src":"2718:4:15","valueSize":1}],"id":2886,"nodeType":"InlineAssembly","src":"2685:47:15"}]},"documentation":{"id":2878,"nodeType":"StructuredDocumentation","src":"2456:87:15","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2888,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:15","nodeType":"FunctionDefinition","parameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"slot","nameLocation":"2580:4:15","nodeType":"VariableDeclaration","scope":2888,"src":"2572:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:15"},"returnParameters":{"id":2885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"r","nameLocation":"2629:1:15","nodeType":"VariableDeclaration","scope":2888,"src":"2609:21:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2838_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2883,"nodeType":"UserDefinedTypeName","pathNode":{"id":2882,"name":"Uint256Slot","nameLocations":["2609:11:15"],"nodeType":"IdentifierPath","referencedDeclaration":2838,"src":"2609:11:15"},"referencedDeclaration":2838,"src":"2609:11:15","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2838_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:15"},"scope":2933,"src":"2548:190:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2898,"nodeType":"Block","src":"2917:106:15","statements":[{"AST":{"nativeSrc":"2979:38:15","nodeType":"YulBlock","src":"2979:38:15","statements":[{"nativeSrc":"2993:14:15","nodeType":"YulAssignment","src":"2993:14:15","value":{"name":"slot","nativeSrc":"3003:4:15","nodeType":"YulIdentifier","src":"3003:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:15","nodeType":"YulIdentifier","src":"2993:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2895,"isOffset":false,"isSlot":true,"src":"2993:6:15","suffix":"slot","valueSize":1},{"declaration":2891,"isOffset":false,"isSlot":false,"src":"3003:4:15","valueSize":1}],"id":2897,"nodeType":"InlineAssembly","src":"2970:47:15"}]},"documentation":{"id":2889,"nodeType":"StructuredDocumentation","src":"2744:86:15","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2899,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:15","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"slot","nameLocation":"2866:4:15","nodeType":"VariableDeclaration","scope":2899,"src":"2858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2890,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:15"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"r","nameLocation":"2914:1:15","nodeType":"VariableDeclaration","scope":2899,"src":"2895:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2841_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2894,"nodeType":"UserDefinedTypeName","pathNode":{"id":2893,"name":"StringSlot","nameLocations":["2895:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"2895:10:15"},"referencedDeclaration":2841,"src":"2895:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2841_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:15"},"scope":2933,"src":"2835:188:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2909,"nodeType":"Block","src":"3225:112:15","statements":[{"AST":{"nativeSrc":"3287:44:15","nodeType":"YulBlock","src":"3287:44:15","statements":[{"nativeSrc":"3301:20:15","nodeType":"YulAssignment","src":"3301:20:15","value":{"name":"store.slot","nativeSrc":"3311:10:15","nodeType":"YulIdentifier","src":"3311:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:15","nodeType":"YulIdentifier","src":"3301:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2906,"isOffset":false,"isSlot":true,"src":"3301:6:15","suffix":"slot","valueSize":1},{"declaration":2902,"isOffset":false,"isSlot":true,"src":"3311:10:15","suffix":"slot","valueSize":1}],"id":2908,"nodeType":"InlineAssembly","src":"3278:53:15"}]},"documentation":{"id":2900,"nodeType":"StructuredDocumentation","src":"3029:101:15","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2910,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:15","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"store","nameLocation":"3173:5:15","nodeType":"VariableDeclaration","scope":2910,"src":"3158:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2901,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:15"},"returnParameters":{"id":2907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2906,"mutability":"mutable","name":"r","nameLocation":"3222:1:15","nodeType":"VariableDeclaration","scope":2910,"src":"3203:20:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2841_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2905,"nodeType":"UserDefinedTypeName","pathNode":{"id":2904,"name":"StringSlot","nameLocations":["3203:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":2841,"src":"3203:10:15"},"referencedDeclaration":2841,"src":"3203:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2841_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:15"},"scope":2933,"src":"3135:202:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"3513:106:15","statements":[{"AST":{"nativeSrc":"3575:38:15","nodeType":"YulBlock","src":"3575:38:15","statements":[{"nativeSrc":"3589:14:15","nodeType":"YulAssignment","src":"3589:14:15","value":{"name":"slot","nativeSrc":"3599:4:15","nodeType":"YulIdentifier","src":"3599:4:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:15","nodeType":"YulIdentifier","src":"3589:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2917,"isOffset":false,"isSlot":true,"src":"3589:6:15","suffix":"slot","valueSize":1},{"declaration":2913,"isOffset":false,"isSlot":false,"src":"3599:4:15","valueSize":1}],"id":2919,"nodeType":"InlineAssembly","src":"3566:47:15"}]},"documentation":{"id":2911,"nodeType":"StructuredDocumentation","src":"3343:85:15","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:15","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2913,"mutability":"mutable","name":"slot","nameLocation":"3463:4:15","nodeType":"VariableDeclaration","scope":2921,"src":"3455:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2912,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:15"},"returnParameters":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"r","nameLocation":"3510:1:15","nodeType":"VariableDeclaration","scope":2921,"src":"3492:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2844_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2916,"nodeType":"UserDefinedTypeName","pathNode":{"id":2915,"name":"BytesSlot","nameLocations":["3492:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2844,"src":"3492:9:15"},"referencedDeclaration":2844,"src":"3492:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2844_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:15"},"scope":2933,"src":"3433:186:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2931,"nodeType":"Block","src":"3816:112:15","statements":[{"AST":{"nativeSrc":"3878:44:15","nodeType":"YulBlock","src":"3878:44:15","statements":[{"nativeSrc":"3892:20:15","nodeType":"YulAssignment","src":"3892:20:15","value":{"name":"store.slot","nativeSrc":"3902:10:15","nodeType":"YulIdentifier","src":"3902:10:15"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:15","nodeType":"YulIdentifier","src":"3892:6:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2928,"isOffset":false,"isSlot":true,"src":"3892:6:15","suffix":"slot","valueSize":1},{"declaration":2924,"isOffset":false,"isSlot":true,"src":"3902:10:15","suffix":"slot","valueSize":1}],"id":2930,"nodeType":"InlineAssembly","src":"3869:53:15"}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"3625:99:15","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:15","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"store","nameLocation":"3765:5:15","nodeType":"VariableDeclaration","scope":2932,"src":"3751:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2923,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:15"},"returnParameters":{"id":2929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2928,"mutability":"mutable","name":"r","nameLocation":"3813:1:15","nodeType":"VariableDeclaration","scope":2932,"src":"3795:19:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2844_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2927,"nodeType":"UserDefinedTypeName","pathNode":{"id":2926,"name":"BytesSlot","nameLocations":["3795:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2844,"src":"3795:9:15"},"referencedDeclaration":2844,"src":"3795:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2844_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:15"},"scope":2933,"src":"3729:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2934,"src":"1245:2685:15","usedErrors":[],"usedEvents":[]}],"src":"193:3738:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4891],"SignedMath":[4996],"Strings":[3188]},"id":3189,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3189,"sourceUnit":4892,"src":"127:37:16","symbolAliases":[{"foreign":{"id":2936,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"135:4:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2939,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3189,"sourceUnit":4997,"src":"165:49:16","symbolAliases":[{"foreign":{"id":2938,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"173:10:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2940,"nodeType":"StructuredDocumentation","src":"216:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3188,"linearizedBaseContracts":[3188],"name":"Strings","nameLocation":"259:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2943,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:16","nodeType":"VariableDeclaration","scope":3188,"src":"273:56:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2941,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2946,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:16","nodeType":"VariableDeclaration","scope":3188,"src":"335:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2944,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2947,"nodeType":"StructuredDocumentation","src":"384:81:16","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2953,"name":"StringsInsufficientHexLength","nameLocation":"476:28:16","nodeType":"ErrorDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2949,"mutability":"mutable","name":"value","nameLocation":"513:5:16","nodeType":"VariableDeclaration","scope":2953,"src":"505:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2948,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2951,"mutability":"mutable","name":"length","nameLocation":"528:6:16","nodeType":"VariableDeclaration","scope":2953,"src":"520:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2950,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:16"},"src":"470:66:16"},{"body":{"id":3000,"nodeType":"Block","src":"708:627:16","statements":[{"id":2999,"nodeType":"UncheckedBlock","src":"718:611:16","statements":[{"assignments":[2962],"declarations":[{"constant":false,"id":2962,"mutability":"mutable","name":"length","nameLocation":"750:6:16","nodeType":"VariableDeclaration","scope":2999,"src":"742:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2969,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"770:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2963,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"759:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:16","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4711,"src":"759:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:16"},{"assignments":[2971],"declarations":[{"constant":false,"id":2971,"mutability":"mutable","name":"buffer","nameLocation":"808:6:16","nodeType":"VariableDeclaration","scope":2999,"src":"794:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2970,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2976,"initialValue":{"arguments":[{"id":2974,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"828:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2972,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:16"},{"assignments":[2978],"declarations":[{"constant":false,"id":2978,"mutability":"mutable","name":"ptr","nameLocation":"857:3:16","nodeType":"VariableDeclaration","scope":2999,"src":"849:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2977,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2979,"nodeType":"VariableDeclarationStatement","src":"849:11:16"},{"AST":{"nativeSrc":"930:67:16","nodeType":"YulBlock","src":"930:67:16","statements":[{"nativeSrc":"948:35:16","nodeType":"YulAssignment","src":"948:35:16","value":{"arguments":[{"name":"buffer","nativeSrc":"959:6:16","nodeType":"YulIdentifier","src":"959:6:16"},{"arguments":[{"kind":"number","nativeSrc":"971:2:16","nodeType":"YulLiteral","src":"971:2:16","type":"","value":"32"},{"name":"length","nativeSrc":"975:6:16","nodeType":"YulIdentifier","src":"975:6:16"}],"functionName":{"name":"add","nativeSrc":"967:3:16","nodeType":"YulIdentifier","src":"967:3:16"},"nativeSrc":"967:15:16","nodeType":"YulFunctionCall","src":"967:15:16"}],"functionName":{"name":"add","nativeSrc":"955:3:16","nodeType":"YulIdentifier","src":"955:3:16"},"nativeSrc":"955:28:16","nodeType":"YulFunctionCall","src":"955:28:16"},"variableNames":[{"name":"ptr","nativeSrc":"948:3:16","nodeType":"YulIdentifier","src":"948:3:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2971,"isOffset":false,"isSlot":false,"src":"959:6:16","valueSize":1},{"declaration":2962,"isOffset":false,"isSlot":false,"src":"975:6:16","valueSize":1},{"declaration":2978,"isOffset":false,"isSlot":false,"src":"948:3:16","valueSize":1}],"id":2980,"nodeType":"InlineAssembly","src":"921:76:16"},{"body":{"id":2995,"nodeType":"Block","src":"1023:269:16","statements":[{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1041:5:16","subExpression":{"id":2982,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"1041:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2984,"nodeType":"ExpressionStatement","src":"1041:5:16"},{"AST":{"nativeSrc":"1124:86:16","nodeType":"YulBlock","src":"1124:86:16","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1154:3:16","nodeType":"YulIdentifier","src":"1154:3:16"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:16","nodeType":"YulIdentifier","src":"1168:5:16"},{"kind":"number","nativeSrc":"1175:2:16","nodeType":"YulLiteral","src":"1175:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1164:3:16","nodeType":"YulIdentifier","src":"1164:3:16"},"nativeSrc":"1164:14:16","nodeType":"YulFunctionCall","src":"1164:14:16"},{"name":"HEX_DIGITS","nativeSrc":"1180:10:16","nodeType":"YulIdentifier","src":"1180:10:16"}],"functionName":{"name":"byte","nativeSrc":"1159:4:16","nodeType":"YulIdentifier","src":"1159:4:16"},"nativeSrc":"1159:32:16","nodeType":"YulFunctionCall","src":"1159:32:16"}],"functionName":{"name":"mstore8","nativeSrc":"1146:7:16","nodeType":"YulIdentifier","src":"1146:7:16"},"nativeSrc":"1146:46:16","nodeType":"YulFunctionCall","src":"1146:46:16"},"nativeSrc":"1146:46:16","nodeType":"YulExpressionStatement","src":"1146:46:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":2943,"isOffset":false,"isSlot":false,"src":"1180:10:16","valueSize":1},{"declaration":2978,"isOffset":false,"isSlot":false,"src":"1154:3:16","valueSize":1},{"declaration":2956,"isOffset":false,"isSlot":false,"src":"1168:5:16","valueSize":1}],"id":2985,"nodeType":"InlineAssembly","src":"1115:95:16"},{"expression":{"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"1227:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1236:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1227:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2989,"nodeType":"ExpressionStatement","src":"1227:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"1260:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1269:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1260:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2994,"nodeType":"IfStatement","src":"1256:21:16","trueBody":{"id":2993,"nodeType":"Break","src":"1272:5:16"}}]},"condition":{"hexValue":"74727565","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1017:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2996,"nodeType":"WhileStatement","src":"1010:282:16"},{"expression":{"id":2997,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2971,"src":"1312:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2960,"id":2998,"nodeType":"Return","src":"1305:13:16"}]}]},"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"542:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:16","nodeType":"FunctionDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"value","nameLocation":"663:5:16","nodeType":"VariableDeclaration","scope":3001,"src":"655:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:16"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3001,"src":"693:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2958,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:16"},"scope":3188,"src":"637:698:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"1511:92:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1542:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1550:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1542:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1560:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1542:20:16","trueExpression":{"hexValue":"2d","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1554:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":3021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1588:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":3019,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"1573:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4996_$","typeString":"type(library SignedMath)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1584:3:16","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4995,"src":"1573:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1573:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3018,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"1564:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1528:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3009,"name":"string","nodeType":"ElementaryTypeName","src":"1528:6:16","typeDescriptions":{}}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:6:16","memberName":"concat","nodeType":"MemberAccess","src":"1528:13:16","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1528:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3008,"id":3025,"nodeType":"Return","src":"1521:75:16"}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"1341:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1444:14:16","nodeType":"FunctionDefinition","parameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"value","nameLocation":"1466:5:16","nodeType":"VariableDeclaration","scope":3027,"src":"1459:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3003,"name":"int256","nodeType":"ElementaryTypeName","src":"1459:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1458:14:16"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"1496:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3006,"name":"string","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1495:15:16"},"scope":3188,"src":"1435:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3046,"nodeType":"Block","src":"1782:100:16","statements":[{"id":3045,"nodeType":"UncheckedBlock","src":"1792:84:16","statements":[{"expression":{"arguments":[{"id":3036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"1835:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"1854:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3037,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"1842:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:16","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4833,"src":"1842:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1842:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1863:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1842:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3035,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3047,3130,3150],"referencedDeclaration":3130,"src":"1823:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1823:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3034,"id":3044,"nodeType":"Return","src":"1816:49:16"}]}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"1609:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1717:11:16","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"value","nameLocation":"1737:5:16","nodeType":"VariableDeclaration","scope":3047,"src":"1729:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1728:15:16"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3047,"src":"1767:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3032,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1766:15:16"},"scope":3188,"src":"1708:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3129,"nodeType":"Block","src":"2095:435:16","statements":[{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"localValue","nameLocation":"2113:10:16","nodeType":"VariableDeclaration","scope":3129,"src":"2105:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3060,"initialValue":{"id":3059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2126:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2105:26:16"},{"assignments":[3062],"declarations":[{"constant":false,"id":3062,"mutability":"mutable","name":"buffer","nameLocation":"2154:6:16","nodeType":"VariableDeclaration","scope":3129,"src":"2141:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3061,"name":"bytes","nodeType":"ElementaryTypeName","src":"2141:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3071,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2173:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3066,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2177:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2173:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2186:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2173:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2163:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3063,"name":"bytes","nodeType":"ElementaryTypeName","src":"2167:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2163:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:16"},{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3072,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"2198:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3074,"indexExpression":{"hexValue":"30","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2205:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2198:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2210:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2198:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3077,"nodeType":"ExpressionStatement","src":"2198:15:16"},{"expression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3078,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"2223:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3080,"indexExpression":{"hexValue":"31","id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2230:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2223:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2235:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2223:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3083,"nodeType":"ExpressionStatement","src":"2223:15:16"},{"body":{"id":3112,"nodeType":"Block","src":"2293:95:16","statements":[{"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3098,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"2307:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3100,"indexExpression":{"id":3099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2314:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2307:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3101,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2319:10:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3105,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2330:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2343:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2330:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2319:28:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2307:40:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3107,"nodeType":"ExpressionStatement","src":"2307:40:16"},{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3108,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2361:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2361:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3111,"nodeType":"ExpressionStatement","src":"2361:16:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2281:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2285:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2281:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3113,"initializationExpression":{"assignments":[3085],"declarations":[{"constant":false,"id":3085,"mutability":"mutable","name":"i","nameLocation":"2261:1:16","nodeType":"VariableDeclaration","scope":3113,"src":"2253:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"2253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2265:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3087,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2269:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2265:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2278:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2265:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2253:26:16"},"loopExpression":{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2288:3:16","subExpression":{"id":3095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3085,"src":"2290:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3097,"nodeType":"ExpressionStatement","src":"2288:3:16"},"nodeType":"ForStatement","src":"2248:140:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3114,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"2401:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2401:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3123,"nodeType":"IfStatement","src":"2397:96:16","trueBody":{"id":3122,"nodeType":"Block","src":"2418:75:16","statements":[{"errorCall":{"arguments":[{"id":3118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"2468:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3119,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"2475:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"2439:28:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2439:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3121,"nodeType":"RevertStatement","src":"2432:50:16"}]}},{"expression":{"arguments":[{"id":3126,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"2516:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3124,"name":"string","nodeType":"ElementaryTypeName","src":"2509:6:16","typeDescriptions":{}}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3056,"id":3128,"nodeType":"Return","src":"2502:21:16"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"1888:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3130,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2014:11:16","nodeType":"FunctionDefinition","parameters":{"id":3053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3050,"mutability":"mutable","name":"value","nameLocation":"2034:5:16","nodeType":"VariableDeclaration","scope":3130,"src":"2026:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2026:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"length","nameLocation":"2049:6:16","nodeType":"VariableDeclaration","scope":3130,"src":"2041:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"2041:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2025:31:16"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3130,"src":"2080:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3054,"name":"string","nodeType":"ElementaryTypeName","src":"2080:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2079:15:16"},"scope":3188,"src":"2005:525:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3149,"nodeType":"Block","src":"2762:75:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3143,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"2807:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2799:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3141,"name":"uint160","nodeType":"ElementaryTypeName","src":"2799:7:16","typeDescriptions":{}}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2791:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:16","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2791:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3146,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"2815:14:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3138,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3047,3130,3150],"referencedDeclaration":3130,"src":"2779:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2779:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3137,"id":3148,"nodeType":"Return","src":"2772:58:16"}]},"documentation":{"id":3131,"nodeType":"StructuredDocumentation","src":"2536:148:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":3150,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2698:11:16","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3133,"mutability":"mutable","name":"addr","nameLocation":"2718:4:16","nodeType":"VariableDeclaration","scope":3150,"src":"2710:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"2710:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2709:14:16"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3150,"src":"2747:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3135,"name":"string","nodeType":"ElementaryTypeName","src":"2747:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2746:15:16"},"scope":3188,"src":"2689:148:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3186,"nodeType":"Block","src":"2992:104:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"3015:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3009:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3160,"name":"bytes","nodeType":"ElementaryTypeName","src":"3009:5:16","typeDescriptions":{}}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3018:6:16","memberName":"length","nodeType":"MemberAccess","src":"3009:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"3034:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3028:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3165,"name":"bytes","nodeType":"ElementaryTypeName","src":"3028:5:16","typeDescriptions":{}}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3028:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3037:6:16","memberName":"length","nodeType":"MemberAccess","src":"3028:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3009:34:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3174,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"3063:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3057:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3172,"name":"bytes","nodeType":"ElementaryTypeName","src":"3057:5:16","typeDescriptions":{}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3171,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3047:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3047:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3180,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"3086:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3178,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:16","typeDescriptions":{}}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3177,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3047:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3009:80:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3159,"id":3185,"nodeType":"Return","src":"3002:87:16"}]},"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"2843:66:16","text":" @dev Returns true if the two strings are equal."},"id":3187,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2923:5:16","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"a","nameLocation":"2943:1:16","nodeType":"VariableDeclaration","scope":3187,"src":"2929:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3152,"name":"string","nodeType":"ElementaryTypeName","src":"2929:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"b","nameLocation":"2960:1:16","nodeType":"VariableDeclaration","scope":3187,"src":"2946:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3154,"name":"string","nodeType":"ElementaryTypeName","src":"2946:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2928:34:16"},"returnParameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3187,"src":"2986:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3157,"name":"bool","nodeType":"ElementaryTypeName","src":"2986:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2985:6:16"},"scope":3188,"src":"2914:182:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3189,"src":"251:2847:16","usedErrors":[2953],"usedEvents":[]}],"src":"101:2998:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3536]},"id":3537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3190,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3191,"nodeType":"StructuredDocumentation","src":"138:205:17","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3536,"linearizedBaseContracts":[3536],"name":"ECDSA","nameLocation":"352:5:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3196,"members":[{"id":3192,"name":"NoError","nameLocation":"392:7:17","nodeType":"EnumValue","src":"392:7:17"},{"id":3193,"name":"InvalidSignature","nameLocation":"409:16:17","nodeType":"EnumValue","src":"409:16:17"},{"id":3194,"name":"InvalidSignatureLength","nameLocation":"435:22:17","nodeType":"EnumValue","src":"435:22:17"},{"id":3195,"name":"InvalidSignatureS","nameLocation":"467:17:17","nodeType":"EnumValue","src":"467:17:17"}],"name":"RecoverError","nameLocation":"369:12:17","nodeType":"EnumDefinition","src":"364:126:17"},{"documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"496:63:17","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3199,"name":"ECDSAInvalidSignature","nameLocation":"570:21:17","nodeType":"ErrorDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[],"src":"591:2:17"},"src":"564:30:17"},{"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"600:60:17","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3204,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:17","nodeType":"ErrorDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"length","nameLocation":"707:6:17","nodeType":"VariableDeclaration","scope":3204,"src":"699:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:17"},"src":"665:50:17"},{"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"721:85:17","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3209,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:17","nodeType":"ErrorDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"s","nameLocation":"848:1:17","nodeType":"VariableDeclaration","scope":3209,"src":"840:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:17"},"src":"811:40:17"},{"body":{"id":3261,"nodeType":"Block","src":"2242:653:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3224,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"2256:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2266:6:17","memberName":"length","nodeType":"MemberAccess","src":"2256:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:2:17","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2256:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3259,"nodeType":"Block","src":"2781:108:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2811:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2803:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3246,"name":"address","nodeType":"ElementaryTypeName","src":"2803:7:17","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2803:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3250,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"2815:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2828:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"2815:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3254,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"2860:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:17","memberName":"length","nodeType":"MemberAccess","src":"2860:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2852:7:17","typeDescriptions":{}}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2802:76:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3223,"id":3258,"nodeType":"Return","src":"2795:83:17"}]},"id":3260,"nodeType":"IfStatement","src":"2252:637:17","trueBody":{"id":3245,"nodeType":"Block","src":"2280:495:17","statements":[{"assignments":[3229],"declarations":[{"constant":false,"id":3229,"mutability":"mutable","name":"r","nameLocation":"2302:1:17","nodeType":"VariableDeclaration","scope":3245,"src":"2294:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2294:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3230,"nodeType":"VariableDeclarationStatement","src":"2294:9:17"},{"assignments":[3232],"declarations":[{"constant":false,"id":3232,"mutability":"mutable","name":"s","nameLocation":"2325:1:17","nodeType":"VariableDeclaration","scope":3245,"src":"2317:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2317:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3233,"nodeType":"VariableDeclarationStatement","src":"2317:9:17"},{"assignments":[3235],"declarations":[{"constant":false,"id":3235,"mutability":"mutable","name":"v","nameLocation":"2346:1:17","nodeType":"VariableDeclaration","scope":3245,"src":"2340:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3234,"name":"uint8","nodeType":"ElementaryTypeName","src":"2340:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3236,"nodeType":"VariableDeclarationStatement","src":"2340:7:17"},{"AST":{"nativeSrc":"2548:171:17","nodeType":"YulBlock","src":"2548:171:17","statements":[{"nativeSrc":"2566:32:17","nodeType":"YulAssignment","src":"2566:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2581:9:17","nodeType":"YulIdentifier","src":"2581:9:17"},{"kind":"number","nativeSrc":"2592:4:17","nodeType":"YulLiteral","src":"2592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2577:3:17","nodeType":"YulIdentifier","src":"2577:3:17"},"nativeSrc":"2577:20:17","nodeType":"YulFunctionCall","src":"2577:20:17"}],"functionName":{"name":"mload","nativeSrc":"2571:5:17","nodeType":"YulIdentifier","src":"2571:5:17"},"nativeSrc":"2571:27:17","nodeType":"YulFunctionCall","src":"2571:27:17"},"variableNames":[{"name":"r","nativeSrc":"2566:1:17","nodeType":"YulIdentifier","src":"2566:1:17"}]},{"nativeSrc":"2615:32:17","nodeType":"YulAssignment","src":"2615:32:17","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2630:9:17","nodeType":"YulIdentifier","src":"2630:9:17"},{"kind":"number","nativeSrc":"2641:4:17","nodeType":"YulLiteral","src":"2641:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2626:3:17","nodeType":"YulIdentifier","src":"2626:3:17"},"nativeSrc":"2626:20:17","nodeType":"YulFunctionCall","src":"2626:20:17"}],"functionName":{"name":"mload","nativeSrc":"2620:5:17","nodeType":"YulIdentifier","src":"2620:5:17"},"nativeSrc":"2620:27:17","nodeType":"YulFunctionCall","src":"2620:27:17"},"variableNames":[{"name":"s","nativeSrc":"2615:1:17","nodeType":"YulIdentifier","src":"2615:1:17"}]},{"nativeSrc":"2664:41:17","nodeType":"YulAssignment","src":"2664:41:17","value":{"arguments":[{"kind":"number","nativeSrc":"2674:1:17","nodeType":"YulLiteral","src":"2674:1:17","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2687:9:17","nodeType":"YulIdentifier","src":"2687:9:17"},{"kind":"number","nativeSrc":"2698:4:17","nodeType":"YulLiteral","src":"2698:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2683:3:17","nodeType":"YulIdentifier","src":"2683:3:17"},"nativeSrc":"2683:20:17","nodeType":"YulFunctionCall","src":"2683:20:17"}],"functionName":{"name":"mload","nativeSrc":"2677:5:17","nodeType":"YulIdentifier","src":"2677:5:17"},"nativeSrc":"2677:27:17","nodeType":"YulFunctionCall","src":"2677:27:17"}],"functionName":{"name":"byte","nativeSrc":"2669:4:17","nodeType":"YulIdentifier","src":"2669:4:17"},"nativeSrc":"2669:36:17","nodeType":"YulFunctionCall","src":"2669:36:17"},"variableNames":[{"name":"v","nativeSrc":"2664:1:17","nodeType":"YulIdentifier","src":"2664:1:17"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3229,"isOffset":false,"isSlot":false,"src":"2566:1:17","valueSize":1},{"declaration":3232,"isOffset":false,"isSlot":false,"src":"2615:1:17","valueSize":1},{"declaration":3214,"isOffset":false,"isSlot":false,"src":"2581:9:17","valueSize":1},{"declaration":3214,"isOffset":false,"isSlot":false,"src":"2630:9:17","valueSize":1},{"declaration":3214,"isOffset":false,"isSlot":false,"src":"2687:9:17","valueSize":1},{"declaration":3235,"isOffset":false,"isSlot":false,"src":"2664:1:17","valueSize":1}],"id":3237,"nodeType":"InlineAssembly","src":"2539:180:17"},{"expression":{"arguments":[{"id":3239,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"2750:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3240,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"2756:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3241,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"2759:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3242,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"2762:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3238,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3262,3342,3450],"referencedDeclaration":3450,"src":"2739:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2739:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3223,"id":3244,"nodeType":"Return","src":"2732:32:17"}]}}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"857:1267:17","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3262,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:17","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"hash","nameLocation":"2157:4:17","nodeType":"VariableDeclaration","scope":3262,"src":"2149:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"signature","nameLocation":"2176:9:17","nodeType":"VariableDeclaration","scope":3262,"src":"2163:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3213,"name":"bytes","nodeType":"ElementaryTypeName","src":"2163:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:38:17"},"returnParameters":{"id":3223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"2210:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3216,"name":"address","nodeType":"ElementaryTypeName","src":"2210:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"2219:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3219,"nodeType":"UserDefinedTypeName","pathNode":{"id":3218,"name":"RecoverError","nameLocations":["2219:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3196,"src":"2219:12:17"},"referencedDeclaration":3196,"src":"2219:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"2233:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2233:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2209:32:17"},"scope":3536,"src":"2129:766:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3291,"nodeType":"Block","src":"3789:168:17","statements":[{"assignments":[3273,3276,3278],"declarations":[{"constant":false,"id":3273,"mutability":"mutable","name":"recovered","nameLocation":"3808:9:17","nodeType":"VariableDeclaration","scope":3291,"src":"3800:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3272,"name":"address","nodeType":"ElementaryTypeName","src":"3800:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"error","nameLocation":"3832:5:17","nodeType":"VariableDeclaration","scope":3291,"src":"3819:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3275,"nodeType":"UserDefinedTypeName","pathNode":{"id":3274,"name":"RecoverError","nameLocations":["3819:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3196,"src":"3819:12:17"},"referencedDeclaration":3196,"src":"3819:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"errorArg","nameLocation":"3847:8:17","nodeType":"VariableDeclaration","scope":3291,"src":"3839:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3839:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3283,"initialValue":{"arguments":[{"id":3280,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"3870:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3281,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"3876:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3279,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3262,3342,3450],"referencedDeclaration":3262,"src":"3859:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3859:27:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3799:87:17"},{"expression":{"arguments":[{"id":3285,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"3908:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},{"id":3286,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"3915:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3284,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"3896:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3196_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3896:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3288,"nodeType":"ExpressionStatement","src":"3896:28:17"},{"expression":{"id":3289,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"3941:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3271,"id":3290,"nodeType":"Return","src":"3934:16:17"}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"2901:796:17","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3292,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3711:7:17","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"hash","nameLocation":"3727:4:17","nodeType":"VariableDeclaration","scope":3292,"src":"3719:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3719:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"signature","nameLocation":"3746:9:17","nodeType":"VariableDeclaration","scope":3292,"src":"3733:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3266,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3718:38:17"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3292,"src":"3780:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3269,"name":"address","nodeType":"ElementaryTypeName","src":"3780:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3779:9:17"},"scope":3536,"src":"3702:255:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3341,"nodeType":"Block","src":"4285:342:17","statements":[{"id":3340,"nodeType":"UncheckedBlock","src":"4295:326:17","statements":[{"assignments":[3310],"declarations":[{"constant":false,"id":3310,"mutability":"mutable","name":"s","nameLocation":"4327:1:17","nodeType":"VariableDeclaration","scope":3340,"src":"4319:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4319:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3317,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3311,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"4331:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4344:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4336:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4336:7:17","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4336:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4331:80:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4319:92:17"},{"assignments":[3319],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"v","nameLocation":"4528:1:17","nodeType":"VariableDeclaration","scope":3340,"src":"4522:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3318,"name":"uint8","nodeType":"ElementaryTypeName","src":"4522:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3332,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3324,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3299,"src":"4547:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4539:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4539:7:17","typeDescriptions":{}}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4539:11:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4554:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4539:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4538:20:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4561:2:17","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4538:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3320,"name":"uint8","nodeType":"ElementaryTypeName","src":"4532:5:17","typeDescriptions":{}}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4522:42:17"},{"expression":{"arguments":[{"id":3334,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"4596:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3335,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"4602:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3336,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3297,"src":"4605:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3337,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"4608:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3333,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3262,3342,3450],"referencedDeclaration":3450,"src":"4585:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4585:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3308,"id":3339,"nodeType":"Return","src":"4578:32:17"}]}]},"documentation":{"id":3293,"nodeType":"StructuredDocumentation","src":"3963:205:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"},"id":3342,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4182:10:17","nodeType":"FunctionDefinition","parameters":{"id":3300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3295,"mutability":"mutable","name":"hash","nameLocation":"4201:4:17","nodeType":"VariableDeclaration","scope":3342,"src":"4193:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3294,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4193:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3297,"mutability":"mutable","name":"r","nameLocation":"4215:1:17","nodeType":"VariableDeclaration","scope":3342,"src":"4207:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4207:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3299,"mutability":"mutable","name":"vs","nameLocation":"4226:2:17","nodeType":"VariableDeclaration","scope":3342,"src":"4218:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4192:37:17"},"returnParameters":{"id":3308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3342,"src":"4253:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3301,"name":"address","nodeType":"ElementaryTypeName","src":"4253:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3342,"src":"4262:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3304,"nodeType":"UserDefinedTypeName","pathNode":{"id":3303,"name":"RecoverError","nameLocations":["4262:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3196,"src":"4262:12:17"},"referencedDeclaration":3196,"src":"4262:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3342,"src":"4276:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3306,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4276:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4252:32:17"},"scope":3536,"src":"4173:454:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3374,"nodeType":"Block","src":"4840:164:17","statements":[{"assignments":[3355,3358,3360],"declarations":[{"constant":false,"id":3355,"mutability":"mutable","name":"recovered","nameLocation":"4859:9:17","nodeType":"VariableDeclaration","scope":3374,"src":"4851:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3354,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"error","nameLocation":"4883:5:17","nodeType":"VariableDeclaration","scope":3374,"src":"4870:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3357,"nodeType":"UserDefinedTypeName","pathNode":{"id":3356,"name":"RecoverError","nameLocations":["4870:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3196,"src":"4870:12:17"},"referencedDeclaration":3196,"src":"4870:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"errorArg","nameLocation":"4898:8:17","nodeType":"VariableDeclaration","scope":3374,"src":"4890:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4890:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3366,"initialValue":{"arguments":[{"id":3362,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3345,"src":"4921:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3363,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3347,"src":"4927:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3364,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"4930:2:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3361,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3262,3342,3450],"referencedDeclaration":3342,"src":"4910:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4910:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4850:83:17"},{"expression":{"arguments":[{"id":3368,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4955:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},{"id":3369,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"4962:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3367,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"4943:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3196_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3371,"nodeType":"ExpressionStatement","src":"4943:28:17"},{"expression":{"id":3372,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"4988:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3353,"id":3373,"nodeType":"Return","src":"4981:16:17"}]},"documentation":{"id":3343,"nodeType":"StructuredDocumentation","src":"4633:116:17","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3375,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4763:7:17","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3345,"mutability":"mutable","name":"hash","nameLocation":"4779:4:17","nodeType":"VariableDeclaration","scope":3375,"src":"4771:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4771:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3347,"mutability":"mutable","name":"r","nameLocation":"4793:1:17","nodeType":"VariableDeclaration","scope":3375,"src":"4785:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4785:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3349,"mutability":"mutable","name":"vs","nameLocation":"4804:2:17","nodeType":"VariableDeclaration","scope":3375,"src":"4796:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4796:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4770:37:17"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3375,"src":"4831:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3351,"name":"address","nodeType":"ElementaryTypeName","src":"4831:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4830:9:17"},"scope":3536,"src":"4754:250:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3449,"nodeType":"Block","src":"5298:1372:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3396,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"6194:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"6186:7:17","typeDescriptions":{}}},"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6199:66:17","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6186:79:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3410,"nodeType":"IfStatement","src":"6182:164:17","trueBody":{"id":3409,"nodeType":"Block","src":"6267:79:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6289:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3400,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:17","typeDescriptions":{}}},"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3404,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6301:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6314:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3195,"src":"6301:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},{"id":3406,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"6333:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6288:47:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3393,"id":3408,"nodeType":"Return","src":"6281:54:17"}]}},{"assignments":[3412],"declarations":[{"constant":false,"id":3412,"mutability":"mutable","name":"signer","nameLocation":"6448:6:17","nodeType":"VariableDeclaration","scope":3449,"src":"6440:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3411,"name":"address","nodeType":"ElementaryTypeName","src":"6440:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3419,"initialValue":{"arguments":[{"id":3414,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"6467:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3415,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"6473:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3416,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"6476:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3417,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3384,"src":"6479:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3413,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6457:9:17","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6457:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6440:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3420,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"6495:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6513:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6505:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"6505:7:17","typeDescriptions":{}}},"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6495:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3439,"nodeType":"IfStatement","src":"6491:113:17","trueBody":{"id":3438,"nodeType":"Block","src":"6517:87:17","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6547:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6539:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"6539:7:17","typeDescriptions":{}}},"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6539:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3430,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6551:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6564:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3193,"src":"6551:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6590:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6582:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3432,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6582:7:17","typeDescriptions":{}}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6582:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6538:55:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3393,"id":3437,"nodeType":"Return","src":"6531:62:17"}]}},{"expression":{"components":[{"id":3440,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"6622:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3441,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"6630:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6643:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3192,"src":"6630:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6652:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3443,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6652:7:17","typeDescriptions":{}}},"id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6652:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3447,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6621:42:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3393,"id":3448,"nodeType":"Return","src":"6614:49:17"}]},"documentation":{"id":3376,"nodeType":"StructuredDocumentation","src":"5010:125:17","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3450,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5149:10:17","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3378,"mutability":"mutable","name":"hash","nameLocation":"5177:4:17","nodeType":"VariableDeclaration","scope":3450,"src":"5169:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5169:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"v","nameLocation":"5197:1:17","nodeType":"VariableDeclaration","scope":3450,"src":"5191:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3379,"name":"uint8","nodeType":"ElementaryTypeName","src":"5191:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"r","nameLocation":"5216:1:17","nodeType":"VariableDeclaration","scope":3450,"src":"5208:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5208:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3384,"mutability":"mutable","name":"s","nameLocation":"5235:1:17","nodeType":"VariableDeclaration","scope":3450,"src":"5227:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3383,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5227:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5159:83:17"},"returnParameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3450,"src":"5266:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3386,"name":"address","nodeType":"ElementaryTypeName","src":"5266:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3450,"src":"5275:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3389,"nodeType":"UserDefinedTypeName","pathNode":{"id":3388,"name":"RecoverError","nameLocations":["5275:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3196,"src":"5275:12:17"},"referencedDeclaration":3196,"src":"5275:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3450,"src":"5289:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5289:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5265:32:17"},"scope":3536,"src":"5140:1530:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"6897:166:17","statements":[{"assignments":[3465,3468,3470],"declarations":[{"constant":false,"id":3465,"mutability":"mutable","name":"recovered","nameLocation":"6916:9:17","nodeType":"VariableDeclaration","scope":3485,"src":"6908:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3464,"name":"address","nodeType":"ElementaryTypeName","src":"6908:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3468,"mutability":"mutable","name":"error","nameLocation":"6940:5:17","nodeType":"VariableDeclaration","scope":3485,"src":"6927:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3467,"nodeType":"UserDefinedTypeName","pathNode":{"id":3466,"name":"RecoverError","nameLocations":["6927:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3196,"src":"6927:12:17"},"referencedDeclaration":3196,"src":"6927:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"errorArg","nameLocation":"6955:8:17","nodeType":"VariableDeclaration","scope":3485,"src":"6947:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3469,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6947:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3477,"initialValue":{"arguments":[{"id":3472,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"6978:4:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3473,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"6984:1:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3474,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"6987:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3475,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"6990:1:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3471,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3262,3342,3450],"referencedDeclaration":3450,"src":"6967:10:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3196_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6907:85:17"},{"expression":{"arguments":[{"id":3479,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"7014:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},{"id":3480,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"7021:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3478,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"7002:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3196_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7002:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3482,"nodeType":"ExpressionStatement","src":"7002:28:17"},{"expression":{"id":3483,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"7047:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3463,"id":3484,"nodeType":"Return","src":"7040:16:17"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"6676:122:17","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6812:7:17","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"hash","nameLocation":"6828:4:17","nodeType":"VariableDeclaration","scope":3486,"src":"6820:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6820:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"v","nameLocation":"6840:1:17","nodeType":"VariableDeclaration","scope":3486,"src":"6834:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3454,"name":"uint8","nodeType":"ElementaryTypeName","src":"6834:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3457,"mutability":"mutable","name":"r","nameLocation":"6851:1:17","nodeType":"VariableDeclaration","scope":3486,"src":"6843:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3456,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6843:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"s","nameLocation":"6862:1:17","nodeType":"VariableDeclaration","scope":3486,"src":"6854:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6854:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6819:45:17"},"returnParameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"6888:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3461,"name":"address","nodeType":"ElementaryTypeName","src":"6888:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6887:9:17"},"scope":3536,"src":"6803:260:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"7268:460:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3495,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"7282:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3496,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7291:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7304:7:17","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3192,"src":"7291:20:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"src":"7282:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3501,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"7378:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3502,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7387:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7400:16:17","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3193,"src":"7387:29:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"src":"7378:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"7483:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3510,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7492:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3511,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7505:22:17","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3194,"src":"7492:35:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"src":"7483:44:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3521,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3490,"src":"7617:5:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3522,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7626:12:17","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3196_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7639:17:17","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3195,"src":"7626:30:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"src":"7617:39:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3530,"nodeType":"IfStatement","src":"7613:109:17","trueBody":{"id":3529,"nodeType":"Block","src":"7658:64:17","statements":[{"errorCall":{"arguments":[{"id":3526,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7702:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3525,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"7679:22:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7679:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3528,"nodeType":"RevertStatement","src":"7672:39:17"}]}},"id":3531,"nodeType":"IfStatement","src":"7479:243:17","trueBody":{"id":3520,"nodeType":"Block","src":"7529:78:17","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3516,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7586:8:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7578:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"7578:7:17","typeDescriptions":{}}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7578:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3513,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7550:27:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7550:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3519,"nodeType":"RevertStatement","src":"7543:53:17"}]}},"id":3532,"nodeType":"IfStatement","src":"7374:348:17","trueBody":{"id":3508,"nodeType":"Block","src":"7418:55:17","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3505,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"7439:21:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7439:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3507,"nodeType":"RevertStatement","src":"7432:30:17"}]}},"id":3533,"nodeType":"IfStatement","src":"7278:444:17","trueBody":{"id":3500,"nodeType":"Block","src":"7313:55:17","statements":[{"functionReturnParameters":3494,"id":3499,"nodeType":"Return","src":"7327:7:17"}]}}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"7069:122:17","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7205:11:17","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"error","nameLocation":"7230:5:17","nodeType":"VariableDeclaration","scope":3535,"src":"7217:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3489,"nodeType":"UserDefinedTypeName","pathNode":{"id":3488,"name":"RecoverError","nameLocations":["7217:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":3196,"src":"7217:12:17"},"referencedDeclaration":3196,"src":"7217:12:17","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3196","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"errorArg","nameLocation":"7245:8:17","nodeType":"VariableDeclaration","scope":3535,"src":"7237:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7237:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7216:38:17"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[],"src":"7268:0:17"},"scope":3536,"src":"7196:532:17","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3537,"src":"344:7386:17","usedErrors":[3199,3204,3209],"usedEvents":[]}],"src":"112:7619:17"},"id":17},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3763],"IERC5267":[342],"MessageHashUtils":[3837],"ShortString":[2612],"ShortStrings":[2823]},"id":3764,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3764,"sourceUnit":3838,"src":"139:56:18","symbolAliases":[{"foreign":{"id":3539,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"147:16:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3764,"sourceUnit":2824,"src":"196:62:18","symbolAliases":[{"foreign":{"id":3541,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2823,"src":"204:12:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3542,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2612,"src":"218:11:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3764,"sourceUnit":343,"src":"259:55:18","symbolAliases":[{"foreign":{"id":3544,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"267:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3547,"name":"IERC5267","nameLocations":["1988:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":342,"src":"1988:8:18"},"id":3548,"nodeType":"InheritanceSpecifier","src":"1988:8:18"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3546,"nodeType":"StructuredDocumentation","src":"316:1643:18","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3763,"linearizedBaseContracts":[3763,342],"name":"EIP712","nameLocation":"1978:6:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3550,"libraryName":{"id":3549,"name":"ShortStrings","nameLocations":["2009:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2823,"src":"2009:12:18"},"nodeType":"UsingForDirective","src":"2003:25:18"},{"constant":true,"id":3555,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:18","nodeType":"VariableDeclaration","scope":3763,"src":"2034:140:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3552,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3557,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:18","nodeType":"VariableDeclaration","scope":3763,"src":"2373:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3559,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:18","nodeType":"VariableDeclaration","scope":3763,"src":"2427:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3561,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:18","nodeType":"VariableDeclaration","scope":3763,"src":"2473:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3563,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:18","nodeType":"VariableDeclaration","scope":3763,"src":"2517:37:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3565,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:18","nodeType":"VariableDeclaration","scope":3763,"src":"2560:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3568,"mutability":"immutable","name":"_name","nameLocation":"2637:5:18","nodeType":"VariableDeclaration","scope":3763,"src":"2607:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":3567,"nodeType":"UserDefinedTypeName","pathNode":{"id":3566,"name":"ShortString","nameLocations":["2607:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"2607:11:18"},"referencedDeclaration":2612,"src":"2607:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3571,"mutability":"immutable","name":"_version","nameLocation":"2678:8:18","nodeType":"VariableDeclaration","scope":3763,"src":"2648:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"},"typeName":{"id":3570,"nodeType":"UserDefinedTypeName","pathNode":{"id":3569,"name":"ShortString","nameLocations":["2648:11:18"],"nodeType":"IdentifierPath","referencedDeclaration":2612,"src":"2648:11:18"},"referencedDeclaration":2612,"src":"2648:11:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3573,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:18","nodeType":"VariableDeclaration","scope":3763,"src":"2692:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3572,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3575,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:18","nodeType":"VariableDeclaration","scope":3763,"src":"2726:31:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3574,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3632,"nodeType":"Block","src":"3383:376:18","statements":[{"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3583,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"3393:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3586,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"3432:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3584,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3401:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"3401:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2612_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"src":"3393:53:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"id":3589,"nodeType":"ExpressionStatement","src":"3393:53:18"},{"expression":{"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3590,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"3456:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3593,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"3501:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3591,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"3467:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:18","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2764,"src":"3467:33:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$2612_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"src":"3456:62:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"id":3596,"nodeType":"ExpressionStatement","src":"3456:62:18"},{"expression":{"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3597,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"3528:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3601,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"3558:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3599,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:18","typeDescriptions":{}}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3598,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3605,"nodeType":"ExpressionStatement","src":"3528:36:18"},{"expression":{"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3606,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"3574:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3610,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"3607:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3608,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:18","typeDescriptions":{}}},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3607,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3614,"nodeType":"ExpressionStatement","src":"3574:42:18"},{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3615,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"3627:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3616,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3619,"nodeType":"ExpressionStatement","src":"3627:30:18"},{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3620,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"3667:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3621,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"3692:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3624,"nodeType":"ExpressionStatement","src":"3667:48:18"},{"expression":{"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3625,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"3725:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3628,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}],"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3626,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:18","typeDescriptions":{}}},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3631,"nodeType":"ExpressionStatement","src":"3725:27:18"}]},"documentation":{"id":3576,"nodeType":"StructuredDocumentation","src":"2764:559:18","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3633,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3578,"mutability":"mutable","name":"name","nameLocation":"3354:4:18","nodeType":"VariableDeclaration","scope":3633,"src":"3340:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3577,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"version","nameLocation":"3374:7:18","nodeType":"VariableDeclaration","scope":3633,"src":"3360:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3579,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:18"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[],"src":"3383:0:18"},"scope":3763,"src":"3328:431:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3658,"nodeType":"Block","src":"3907:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3641,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}],"id":3640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3639,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:18","typeDescriptions":{}}},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3643,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"3938:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3645,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3647,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"3970:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3656,"nodeType":"Block","src":"4046:55:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3653,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"4067:21:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3638,"id":3655,"nodeType":"Return","src":"4060:30:18"}]},"id":3657,"nodeType":"IfStatement","src":"3917:184:18","trueBody":{"id":3652,"nodeType":"Block","src":"3986:54:18","statements":[{"expression":{"id":3650,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"4007:22:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3638,"id":3651,"nodeType":"Return","src":"4000:29:18"}]}}]},"documentation":{"id":3634,"nodeType":"StructuredDocumentation","src":"3765:75:18","text":" @dev Returns the domain separator for the current chain."},"id":3659,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:18","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[],"src":"3872:2:18"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3659,"src":"3898:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3636,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:18"},"scope":3763,"src":"3845:262:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3679,"nodeType":"Block","src":"4177:115:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":3667,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"4215:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3668,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"4226:11:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3669,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"4239:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3670,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3674,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}],"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3672,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:18","typeDescriptions":{}}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3665,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:18","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3664,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3663,"id":3678,"nodeType":"Return","src":"4187:98:18"}]},"id":3680,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:18","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[],"src":"4143:2:18"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3680,"src":"4168:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:18"},"scope":3763,"src":"4113:179:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3695,"nodeType":"Block","src":"5003:90:18","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3690,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"5053:18:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3692,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"5075:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3688,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"5020:16:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3837_$","typeString":"type(library MessageHashUtils)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:18","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3836,"src":"5020:32:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3687,"id":3694,"nodeType":"Return","src":"5013:73:18"}]},"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"4298:614:18","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3696,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:18","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:18","nodeType":"VariableDeclaration","scope":3696,"src":"4943:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:18"},"returnParameters":{"id":3687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"4994:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:18"},"scope":3763,"src":"4917:176:18","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[341],"body":{"id":3737,"nodeType":"Block","src":"5472:229:18","statements":[{"expression":{"components":[{"hexValue":"0f","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3716,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"5533:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3718,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"5560:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3720,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:18","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3724,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3763","typeString":"contract EIP712"}],"id":3723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3722,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:18","typeDescriptions":{}}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:18","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3730,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3731,"nodeType":"ArrayTypeName","src":"5672:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3714,"id":3736,"nodeType":"Return","src":"5482:212:18"}]},"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"5099:40:18","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:18","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[],"src":"5165:2:18"},"returnParameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"fields","nameLocation":"5249:6:18","nodeType":"VariableDeclaration","scope":3738,"src":"5242:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3699,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"name","nameLocation":"5283:4:18","nodeType":"VariableDeclaration","scope":3738,"src":"5269:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3701,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"version","nameLocation":"5315:7:18","nodeType":"VariableDeclaration","scope":3738,"src":"5301:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3703,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3706,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:18","nodeType":"VariableDeclaration","scope":3738,"src":"5336:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3708,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:18","nodeType":"VariableDeclaration","scope":3738,"src":"5365:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3707,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3710,"mutability":"mutable","name":"salt","nameLocation":"5412:4:18","nodeType":"VariableDeclaration","scope":3738,"src":"5404:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3713,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:18","nodeType":"VariableDeclaration","scope":3738,"src":"5430:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3712,"nodeType":"ArrayTypeName","src":"5430:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:18"},"scope":3763,"src":"5144:557:18","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3749,"nodeType":"Block","src":"6082:65:18","statements":[{"expression":{"arguments":[{"id":3746,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"6126:13:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3744,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"6099:5:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"6099:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2612_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3743,"id":3748,"nodeType":"Return","src":"6092:48:18"}]},"documentation":{"id":3739,"nodeType":"StructuredDocumentation","src":"5707:256:18","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3750,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:18","nodeType":"FunctionDefinition","parameters":{"id":3740,"nodeType":"ParameterList","parameters":[],"src":"6041:2:18"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3750,"src":"6067:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3741,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:18"},"scope":3763,"src":"6021:126:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3761,"nodeType":"Block","src":"6537:71:18","statements":[{"expression":{"arguments":[{"id":3758,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"6584:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3756,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"6554:8:18","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$2612","typeString":"ShortString"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:18","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"6554:29:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$2612_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$2612_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3755,"id":3760,"nodeType":"Return","src":"6547:54:18"}]},"documentation":{"id":3751,"nodeType":"StructuredDocumentation","src":"6153:262:18","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3762,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:18","nodeType":"FunctionDefinition","parameters":{"id":3752,"nodeType":"ParameterList","parameters":[],"src":"6496:2:18"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3762,"src":"6522:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3753,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:18"},"scope":3763,"src":"6473:135:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3764,"src":"1960:4650:18","usedErrors":[2620,2622],"usedEvents":[322]}],"src":"113:6498:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3837],"Strings":[3188]},"id":3838,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3765,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3767,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3838,"sourceUnit":3189,"src":"149:39:19","symbolAliases":[{"foreign":{"id":3766,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"157:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3768,"nodeType":"StructuredDocumentation","src":"190:330:19","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3837,"linearizedBaseContracts":[3837],"name":"MessageHashUtils","nameLocation":"529:16:19","nodeType":"ContractDefinition","nodes":[{"body":{"id":3777,"nodeType":"Block","src":"1314:368:19","statements":[{"AST":{"nativeSrc":"1376:300:19","nodeType":"YulBlock","src":"1376:300:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:19","nodeType":"YulLiteral","src":"1397:4:19","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:19","nodeType":"YulLiteral","src":"1403:34:19","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:19","nodeType":"YulIdentifier","src":"1390:6:19"},"nativeSrc":"1390:48:19","nodeType":"YulFunctionCall","src":"1390:48:19"},"nativeSrc":"1390:48:19","nodeType":"YulExpressionStatement","src":"1390:48:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:19","nodeType":"YulLiteral","src":"1499:4:19","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:19","nodeType":"YulIdentifier","src":"1505:11:19"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:19","nodeType":"YulIdentifier","src":"1492:6:19"},"nativeSrc":"1492:25:19","nodeType":"YulFunctionCall","src":"1492:25:19"},"nativeSrc":"1492:25:19","nodeType":"YulExpressionStatement","src":"1492:25:19"},{"nativeSrc":"1571:31:19","nodeType":"YulAssignment","src":"1571:31:19","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:19","nodeType":"YulLiteral","src":"1591:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:19","nodeType":"YulLiteral","src":"1597:4:19","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:19","nodeType":"YulIdentifier","src":"1581:9:19"},"nativeSrc":"1581:21:19","nodeType":"YulFunctionCall","src":"1581:21:19"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:19","nodeType":"YulIdentifier","src":"1571:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3774,"isOffset":false,"isSlot":false,"src":"1571:6:19","valueSize":1},{"declaration":3771,"isOffset":false,"isSlot":false,"src":"1505:11:19","valueSize":1}],"id":3776,"nodeType":"InlineAssembly","src":"1367:309:19"}]},"documentation":{"id":3769,"nodeType":"StructuredDocumentation","src":"552:665:19","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3778,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:19","nodeType":"FunctionDefinition","parameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:19","nodeType":"VariableDeclaration","scope":3778,"src":"1254:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:19"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"digest","nameLocation":"1306:6:19","nodeType":"VariableDeclaration","scope":3778,"src":"1298:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:19"},"scope":3837,"src":"1222:460:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3803,"nodeType":"Block","src":"2234:143:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3795,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"2343:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:19","memberName":"length","nodeType":"MemberAccess","src":"2343:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3793,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"2326:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3188_$","typeString":"type(library Strings)"}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:19","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":3001,"src":"2326:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3791,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:19","typeDescriptions":{}}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3799,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3781,"src":"2361:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3787,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:19","typeDescriptions":{}}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:19","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:19","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3786,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3785,"id":3802,"nodeType":"Return","src":"2244:126:19"}]},"documentation":{"id":3779,"nodeType":"StructuredDocumentation","src":"1688:455:19","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:19","nodeType":"FunctionDefinition","parameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"message","nameLocation":"2193:7:19","nodeType":"VariableDeclaration","scope":3804,"src":"2180:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3780,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:19"},"returnParameters":{"id":3785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3804,"src":"2225:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:19"},"scope":3837,"src":"2148:229:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3823,"nodeType":"Block","src":"2831:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3818,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"2887:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3819,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"2898:4:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3815,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3814,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:19","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3813,"id":3822,"nodeType":"Return","src":"2841:63:19"}]},"documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"2383:332:19","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3824,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:19","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"validator","nameLocation":"2769:9:19","nodeType":"VariableDeclaration","scope":3824,"src":"2761:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3806,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"data","nameLocation":"2793:4:19","nodeType":"VariableDeclaration","scope":3824,"src":"2780:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3808,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:19"},"returnParameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3824,"src":"2822:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:19"},"scope":3837,"src":"2720:191:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3835,"nodeType":"Block","src":"3462:292:19","statements":[{"AST":{"nativeSrc":"3524:224:19","nodeType":"YulBlock","src":"3524:224:19","statements":[{"nativeSrc":"3538:22:19","nodeType":"YulVariableDeclaration","src":"3538:22:19","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:19","nodeType":"YulLiteral","src":"3555:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:19","nodeType":"YulIdentifier","src":"3549:5:19"},"nativeSrc":"3549:11:19","nodeType":"YulFunctionCall","src":"3549:11:19"},"variables":[{"name":"ptr","nativeSrc":"3542:3:19","nodeType":"YulTypedName","src":"3542:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:19","nodeType":"YulIdentifier","src":"3580:3:19"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:19","nodeType":"YulLiteral","src":"3585:10:19","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:19","nodeType":"YulIdentifier","src":"3573:6:19"},"nativeSrc":"3573:23:19","nodeType":"YulFunctionCall","src":"3573:23:19"},"nativeSrc":"3573:23:19","nodeType":"YulExpressionStatement","src":"3573:23:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:19","nodeType":"YulIdentifier","src":"3620:3:19"},{"kind":"number","nativeSrc":"3625:4:19","nodeType":"YulLiteral","src":"3625:4:19","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:19","nodeType":"YulIdentifier","src":"3616:3:19"},"nativeSrc":"3616:14:19","nodeType":"YulFunctionCall","src":"3616:14:19"},{"name":"domainSeparator","nativeSrc":"3632:15:19","nodeType":"YulIdentifier","src":"3632:15:19"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:19","nodeType":"YulIdentifier","src":"3609:6:19"},"nativeSrc":"3609:39:19","nodeType":"YulFunctionCall","src":"3609:39:19"},"nativeSrc":"3609:39:19","nodeType":"YulExpressionStatement","src":"3609:39:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:19","nodeType":"YulIdentifier","src":"3672:3:19"},{"kind":"number","nativeSrc":"3677:4:19","nodeType":"YulLiteral","src":"3677:4:19","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:19","nodeType":"YulIdentifier","src":"3668:3:19"},"nativeSrc":"3668:14:19","nodeType":"YulFunctionCall","src":"3668:14:19"},{"name":"structHash","nativeSrc":"3684:10:19","nodeType":"YulIdentifier","src":"3684:10:19"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:19","nodeType":"YulIdentifier","src":"3661:6:19"},"nativeSrc":"3661:34:19","nodeType":"YulFunctionCall","src":"3661:34:19"},"nativeSrc":"3661:34:19","nodeType":"YulExpressionStatement","src":"3661:34:19"},{"nativeSrc":"3708:30:19","nodeType":"YulAssignment","src":"3708:30:19","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:19","nodeType":"YulIdentifier","src":"3728:3:19"},{"kind":"number","nativeSrc":"3733:4:19","nodeType":"YulLiteral","src":"3733:4:19","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:19","nodeType":"YulIdentifier","src":"3718:9:19"},"nativeSrc":"3718:20:19","nodeType":"YulFunctionCall","src":"3718:20:19"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:19","nodeType":"YulIdentifier","src":"3708:6:19"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":3832,"isOffset":false,"isSlot":false,"src":"3708:6:19","valueSize":1},{"declaration":3827,"isOffset":false,"isSlot":false,"src":"3632:15:19","valueSize":1},{"declaration":3829,"isOffset":false,"isSlot":false,"src":"3684:10:19","valueSize":1}],"id":3834,"nodeType":"InlineAssembly","src":"3515:233:19"}]},"documentation":{"id":3825,"nodeType":"StructuredDocumentation","src":"2917:431:19","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3836,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:19","nodeType":"FunctionDefinition","parameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:19","nodeType":"VariableDeclaration","scope":3836,"src":"3378:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3829,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:19","nodeType":"VariableDeclaration","scope":3836,"src":"3403:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:19"},"returnParameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3832,"mutability":"mutable","name":"digest","nameLocation":"3454:6:19","nodeType":"VariableDeclaration","scope":3836,"src":"3446:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3831,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:19"},"scope":3837,"src":"3353:401:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3838,"src":"521:3235:19","usedErrors":[],"usedEvents":[]}],"src":"123:3634:19"},"id":19},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4891]},"id":4892,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3839,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"129:73:20","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4891,"linearizedBaseContracts":[4891],"name":"Math","nameLocation":"211:4:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3841,"nodeType":"StructuredDocumentation","src":"222:50:20","text":" @dev Muldiv operation overflow."},"errorSelector":"227bc153","id":3843,"name":"MathOverflowedMulDiv","nameLocation":"283:20:20","nodeType":"ErrorDefinition","parameters":{"id":3842,"nodeType":"ParameterList","parameters":[],"src":"303:2:20"},"src":"277:29:20"},{"canonicalName":"Math.Rounding","id":3848,"members":[{"id":3844,"name":"Floor","nameLocation":"336:5:20","nodeType":"EnumValue","src":"336:5:20"},{"id":3845,"name":"Ceil","nameLocation":"379:4:20","nodeType":"EnumValue","src":"379:4:20"},{"id":3846,"name":"Trunc","nameLocation":"421:5:20","nodeType":"EnumValue","src":"421:5:20"},{"id":3847,"name":"Expand","nameLocation":"451:6:20","nodeType":"EnumValue","src":"451:6:20"}],"name":"Rounding","nameLocation":"317:8:20","nodeType":"EnumDefinition","src":"312:169:20"},{"body":{"id":3879,"nodeType":"Block","src":"661:140:20","statements":[{"id":3878,"nodeType":"UncheckedBlock","src":"671:124:20","statements":[{"assignments":[3861],"declarations":[{"constant":false,"id":3861,"mutability":"mutable","name":"c","nameLocation":"703:1:20","nodeType":"VariableDeclaration","scope":3878,"src":"695:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3860,"name":"uint256","nodeType":"ElementaryTypeName","src":"695:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3865,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"707:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3863,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"711:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"707:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"695:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"730:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3867,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"734:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"730:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3873,"nodeType":"IfStatement","src":"726:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"745:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"752:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3871,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"744:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3859,"id":3872,"nodeType":"Return","src":"737:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"776:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3875,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"782:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3876,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"775:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3859,"id":3877,"nodeType":"Return","src":"768:16:20"}]}]},"documentation":{"id":3849,"nodeType":"StructuredDocumentation","src":"487:93:20","text":" @dev Returns the addition of two unsigned integers, with an overflow flag."},"id":3880,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"594:6:20","nodeType":"FunctionDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"a","nameLocation":"609:1:20","nodeType":"VariableDeclaration","scope":3880,"src":"601:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3850,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3853,"mutability":"mutable","name":"b","nameLocation":"620:1:20","nodeType":"VariableDeclaration","scope":3880,"src":"612:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3852,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:20"},"returnParameters":{"id":3859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"646:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3855,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3880,"src":"652:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3857,"name":"uint256","nodeType":"ElementaryTypeName","src":"652:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:15:20"},"scope":4891,"src":"585:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3907,"nodeType":"Block","src":"984:113:20","statements":[{"id":3906,"nodeType":"UncheckedBlock","src":"994:97:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3892,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"1022:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3893,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"1026:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1022:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3899,"nodeType":"IfStatement","src":"1018:28:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1037:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1036:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3891,"id":3898,"nodeType":"Return","src":"1029:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1068:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3883,"src":"1074:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"1078:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1074:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1067:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3891,"id":3905,"nodeType":"Return","src":"1060:20:20"}]}]},"documentation":{"id":3881,"nodeType":"StructuredDocumentation","src":"807:96:20","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag."},"id":3908,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"917:6:20","nodeType":"FunctionDefinition","parameters":{"id":3886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"a","nameLocation":"932:1:20","nodeType":"VariableDeclaration","scope":3908,"src":"924:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"924:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3885,"mutability":"mutable","name":"b","nameLocation":"943:1:20","nodeType":"VariableDeclaration","scope":3908,"src":"935:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3884,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"923:22:20"},"returnParameters":{"id":3891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3908,"src":"969:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3887,"name":"bool","nodeType":"ElementaryTypeName","src":"969:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3908,"src":"975:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3889,"name":"uint256","nodeType":"ElementaryTypeName","src":"975:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"968:15:20"},"scope":4891,"src":"908:189:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3949,"nodeType":"Block","src":"1283:417:20","statements":[{"id":3948,"nodeType":"UncheckedBlock","src":"1293:401:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"1551:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1556:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1551:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3927,"nodeType":"IfStatement","src":"1547:28:20","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1567:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1573:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1566:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3919,"id":3926,"nodeType":"Return","src":"1559:16:20"}},{"assignments":[3929],"declarations":[{"constant":false,"id":3929,"mutability":"mutable","name":"c","nameLocation":"1597:1:20","nodeType":"VariableDeclaration","scope":3948,"src":"1589:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1589:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3933,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"1601:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3931,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"1605:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1601:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1589:17:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1624:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3935,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"1628:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3937,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"1633:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1624:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3943,"nodeType":"IfStatement","src":"1620:33:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1644:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1651:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1643:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3919,"id":3942,"nodeType":"Return","src":"1636:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1675:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3945,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"1681:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3946,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1674:9:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3919,"id":3947,"nodeType":"Return","src":"1667:16:20"}]}]},"documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"1103:99:20","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag."},"id":3950,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1216:6:20","nodeType":"FunctionDefinition","parameters":{"id":3914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"a","nameLocation":"1231:1:20","nodeType":"VariableDeclaration","scope":3950,"src":"1223:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3913,"mutability":"mutable","name":"b","nameLocation":"1242:1:20","nodeType":"VariableDeclaration","scope":3950,"src":"1234:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3912,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:22:20"},"returnParameters":{"id":3919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3950,"src":"1268:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3915,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3950,"src":"1274:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1274:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:15:20"},"scope":4891,"src":"1207:493:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3977,"nodeType":"Block","src":"1887:114:20","statements":[{"id":3976,"nodeType":"UncheckedBlock","src":"1897:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"1925:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1930:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1925:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3969,"nodeType":"IfStatement","src":"1921:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1941:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1948:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1940:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3961,"id":3968,"nodeType":"Return","src":"1933:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1972:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3953,"src":"1978:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3972,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"1982:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3961,"id":3975,"nodeType":"Return","src":"1964:20:20"}]}]},"documentation":{"id":3951,"nodeType":"StructuredDocumentation","src":"1706:100:20","text":" @dev Returns the division of two unsigned integers, with a division by zero flag."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1820:6:20","nodeType":"FunctionDefinition","parameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"a","nameLocation":"1835:1:20","nodeType":"VariableDeclaration","scope":3978,"src":"1827:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1827:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3955,"mutability":"mutable","name":"b","nameLocation":"1846:1:20","nodeType":"VariableDeclaration","scope":3978,"src":"1838:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1826:22:20"},"returnParameters":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"1872:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3957,"name":"bool","nodeType":"ElementaryTypeName","src":"1872:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3978,"src":"1878:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1878:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1871:15:20"},"scope":4891,"src":"1811:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4005,"nodeType":"Block","src":"2198:114:20","statements":[{"id":4004,"nodeType":"UncheckedBlock","src":"2208:98:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2236:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2236:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3997,"nodeType":"IfStatement","src":"2232:29:20","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2252:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2259:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2251:10:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3989,"id":3996,"nodeType":"Return","src":"2244:17:20"}},{"expression":{"components":[{"hexValue":"74727565","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2283:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3999,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"2289:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4000,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"2293:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2289:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2282:13:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3989,"id":4003,"nodeType":"Return","src":"2275:20:20"}]}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"2007:110:20","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."},"id":4006,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2131:6:20","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"a","nameLocation":"2146:1:20","nodeType":"VariableDeclaration","scope":4006,"src":"2138:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"b","nameLocation":"2157:1:20","nodeType":"VariableDeclaration","scope":4006,"src":"2149:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3982,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2137:22:20"},"returnParameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4006,"src":"2183:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3985,"name":"bool","nodeType":"ElementaryTypeName","src":"2183:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4006,"src":"2189:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"2189:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2182:15:20"},"scope":4891,"src":"2122:190:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4023,"nodeType":"Block","src":"2449:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"2466:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4017,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"2470:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2466:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4020,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"2478:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2466:13:20","trueExpression":{"id":4019,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"2474:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4015,"id":4022,"nodeType":"Return","src":"2459:20:20"}]},"documentation":{"id":4007,"nodeType":"StructuredDocumentation","src":"2318:59:20","text":" @dev Returns the largest of two numbers."},"id":4024,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"2391:3:20","nodeType":"FunctionDefinition","parameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"a","nameLocation":"2403:1:20","nodeType":"VariableDeclaration","scope":4024,"src":"2395:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"2395:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"b","nameLocation":"2414:1:20","nodeType":"VariableDeclaration","scope":4024,"src":"2406:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"2406:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2394:22:20"},"returnParameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4024,"src":"2440:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"2440:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2439:9:20"},"scope":4891,"src":"2382:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4041,"nodeType":"Block","src":"2624:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"2641:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2645:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2641:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4029,"src":"2653:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2641:13:20","trueExpression":{"id":4037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4027,"src":"2649:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4033,"id":4040,"nodeType":"Return","src":"2634:20:20"}]},"documentation":{"id":4025,"nodeType":"StructuredDocumentation","src":"2492:60:20","text":" @dev Returns the smallest of two numbers."},"id":4042,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"2566:3:20","nodeType":"FunctionDefinition","parameters":{"id":4030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4027,"mutability":"mutable","name":"a","nameLocation":"2578:1:20","nodeType":"VariableDeclaration","scope":4042,"src":"2570:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"2570:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4029,"mutability":"mutable","name":"b","nameLocation":"2589:1:20","nodeType":"VariableDeclaration","scope":4042,"src":"2581:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4028,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2569:22:20"},"returnParameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4042,"src":"2615:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2615:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2614:9:20"},"scope":4891,"src":"2557:104:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4064,"nodeType":"Block","src":"2845:82:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"2900:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4053,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"2904:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2900:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2899:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"2910:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"2914:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2910:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2909:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2919:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2909:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2899:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4051,"id":4063,"nodeType":"Return","src":"2892:28:20"}]},"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"2667:102:20","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4065,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"2783:7:20","nodeType":"FunctionDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4045,"mutability":"mutable","name":"a","nameLocation":"2799:1:20","nodeType":"VariableDeclaration","scope":4065,"src":"2791:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"2791:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"b","nameLocation":"2810:1:20","nodeType":"VariableDeclaration","scope":4065,"src":"2802:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2790:22:20"},"returnParameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4065,"src":"2836:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2836:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2835:9:20"},"scope":4891,"src":"2774:153:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4098,"nodeType":"Block","src":"3219:260:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"3233:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3233:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4083,"nodeType":"IfStatement","src":"3229:127:20","trueBody":{"id":4082,"nodeType":"Block","src":"3241:115:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3340:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"3344:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3340:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4074,"id":4081,"nodeType":"Return","src":"3333:12:20"}]}},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3444:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3449:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3444:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4068,"src":"3458:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3462:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3458:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3457:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4092,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"3467:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3457:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3471:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3457:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3444:28:20","trueExpression":{"hexValue":"30","id":4087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3453:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4074,"id":4097,"nodeType":"Return","src":"3437:35:20"}]},"documentation":{"id":4066,"nodeType":"StructuredDocumentation","src":"2933:210:20","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4099,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3157:7:20","nodeType":"FunctionDefinition","parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4068,"mutability":"mutable","name":"a","nameLocation":"3173:1:20","nodeType":"VariableDeclaration","scope":4099,"src":"3165:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4067,"name":"uint256","nodeType":"ElementaryTypeName","src":"3165:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4070,"mutability":"mutable","name":"b","nameLocation":"3184:1:20","nodeType":"VariableDeclaration","scope":4099,"src":"3176:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3164:22:20"},"returnParameters":{"id":4074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4099,"src":"3210:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4072,"name":"uint256","nodeType":"ElementaryTypeName","src":"3210:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3209:9:20"},"scope":4891,"src":"3148:331:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4224,"nodeType":"Block","src":"3901:4018:20","statements":[{"id":4223,"nodeType":"UncheckedBlock","src":"3911:4002:20","statements":[{"assignments":[4112],"declarations":[{"constant":false,"id":4112,"mutability":"mutable","name":"prod0","nameLocation":"4240:5:20","nodeType":"VariableDeclaration","scope":4223,"src":"4232:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4111,"name":"uint256","nodeType":"ElementaryTypeName","src":"4232:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4116,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4113,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4102,"src":"4248:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4114,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"4252:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4248:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4232:21:20"},{"assignments":[4118],"declarations":[{"constant":false,"id":4118,"mutability":"mutable","name":"prod1","nameLocation":"4320:5:20","nodeType":"VariableDeclaration","scope":4223,"src":"4312:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4312:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4119,"nodeType":"VariableDeclarationStatement","src":"4312:13:20"},{"AST":{"nativeSrc":"4392:122:20","nodeType":"YulBlock","src":"4392:122:20","statements":[{"nativeSrc":"4410:30:20","nodeType":"YulVariableDeclaration","src":"4410:30:20","value":{"arguments":[{"name":"x","nativeSrc":"4427:1:20","nodeType":"YulIdentifier","src":"4427:1:20"},{"name":"y","nativeSrc":"4430:1:20","nodeType":"YulIdentifier","src":"4430:1:20"},{"arguments":[{"kind":"number","nativeSrc":"4437:1:20","nodeType":"YulLiteral","src":"4437:1:20","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"4433:3:20","nodeType":"YulIdentifier","src":"4433:3:20"},"nativeSrc":"4433:6:20","nodeType":"YulFunctionCall","src":"4433:6:20"}],"functionName":{"name":"mulmod","nativeSrc":"4420:6:20","nodeType":"YulIdentifier","src":"4420:6:20"},"nativeSrc":"4420:20:20","nodeType":"YulFunctionCall","src":"4420:20:20"},"variables":[{"name":"mm","nativeSrc":"4414:2:20","nodeType":"YulTypedName","src":"4414:2:20","type":""}]},{"nativeSrc":"4457:43:20","nodeType":"YulAssignment","src":"4457:43:20","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"4474:2:20","nodeType":"YulIdentifier","src":"4474:2:20"},{"name":"prod0","nativeSrc":"4478:5:20","nodeType":"YulIdentifier","src":"4478:5:20"}],"functionName":{"name":"sub","nativeSrc":"4470:3:20","nodeType":"YulIdentifier","src":"4470:3:20"},"nativeSrc":"4470:14:20","nodeType":"YulFunctionCall","src":"4470:14:20"},{"arguments":[{"name":"mm","nativeSrc":"4489:2:20","nodeType":"YulIdentifier","src":"4489:2:20"},{"name":"prod0","nativeSrc":"4493:5:20","nodeType":"YulIdentifier","src":"4493:5:20"}],"functionName":{"name":"lt","nativeSrc":"4486:2:20","nodeType":"YulIdentifier","src":"4486:2:20"},"nativeSrc":"4486:13:20","nodeType":"YulFunctionCall","src":"4486:13:20"}],"functionName":{"name":"sub","nativeSrc":"4466:3:20","nodeType":"YulIdentifier","src":"4466:3:20"},"nativeSrc":"4466:34:20","nodeType":"YulFunctionCall","src":"4466:34:20"},"variableNames":[{"name":"prod1","nativeSrc":"4457:5:20","nodeType":"YulIdentifier","src":"4457:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4112,"isOffset":false,"isSlot":false,"src":"4478:5:20","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"4493:5:20","valueSize":1},{"declaration":4118,"isOffset":false,"isSlot":false,"src":"4457:5:20","valueSize":1},{"declaration":4102,"isOffset":false,"isSlot":false,"src":"4427:1:20","valueSize":1},{"declaration":4104,"isOffset":false,"isSlot":false,"src":"4430:1:20","valueSize":1}],"id":4120,"nodeType":"InlineAssembly","src":"4383:131:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"4595:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4604:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4595:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4129,"nodeType":"IfStatement","src":"4591:368:20","trueBody":{"id":4128,"nodeType":"Block","src":"4607:352:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"4925:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4125,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"4933:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4925:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4110,"id":4127,"nodeType":"Return","src":"4918:26:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4130,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"5065:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4131,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"5080:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4137,"nodeType":"IfStatement","src":"5061:88:20","trueBody":{"id":4136,"nodeType":"Block","src":"5087:62:20","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4133,"name":"MathOverflowedMulDiv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3843,"src":"5112:20:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5112:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4135,"nodeType":"RevertStatement","src":"5105:29:20"}]}},{"assignments":[4139],"declarations":[{"constant":false,"id":4139,"mutability":"mutable","name":"remainder","nameLocation":"5412:9:20","nodeType":"VariableDeclaration","scope":4223,"src":"5404:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5404:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4140,"nodeType":"VariableDeclarationStatement","src":"5404:17:20"},{"AST":{"nativeSrc":"5444:291:20","nodeType":"YulBlock","src":"5444:291:20","statements":[{"nativeSrc":"5513:38:20","nodeType":"YulAssignment","src":"5513:38:20","value":{"arguments":[{"name":"x","nativeSrc":"5533:1:20","nodeType":"YulIdentifier","src":"5533:1:20"},{"name":"y","nativeSrc":"5536:1:20","nodeType":"YulIdentifier","src":"5536:1:20"},{"name":"denominator","nativeSrc":"5539:11:20","nodeType":"YulIdentifier","src":"5539:11:20"}],"functionName":{"name":"mulmod","nativeSrc":"5526:6:20","nodeType":"YulIdentifier","src":"5526:6:20"},"nativeSrc":"5526:25:20","nodeType":"YulFunctionCall","src":"5526:25:20"},"variableNames":[{"name":"remainder","nativeSrc":"5513:9:20","nodeType":"YulIdentifier","src":"5513:9:20"}]},{"nativeSrc":"5633:41:20","nodeType":"YulAssignment","src":"5633:41:20","value":{"arguments":[{"name":"prod1","nativeSrc":"5646:5:20","nodeType":"YulIdentifier","src":"5646:5:20"},{"arguments":[{"name":"remainder","nativeSrc":"5656:9:20","nodeType":"YulIdentifier","src":"5656:9:20"},{"name":"prod0","nativeSrc":"5667:5:20","nodeType":"YulIdentifier","src":"5667:5:20"}],"functionName":{"name":"gt","nativeSrc":"5653:2:20","nodeType":"YulIdentifier","src":"5653:2:20"},"nativeSrc":"5653:20:20","nodeType":"YulFunctionCall","src":"5653:20:20"}],"functionName":{"name":"sub","nativeSrc":"5642:3:20","nodeType":"YulIdentifier","src":"5642:3:20"},"nativeSrc":"5642:32:20","nodeType":"YulFunctionCall","src":"5642:32:20"},"variableNames":[{"name":"prod1","nativeSrc":"5633:5:20","nodeType":"YulIdentifier","src":"5633:5:20"}]},{"nativeSrc":"5691:30:20","nodeType":"YulAssignment","src":"5691:30:20","value":{"arguments":[{"name":"prod0","nativeSrc":"5704:5:20","nodeType":"YulIdentifier","src":"5704:5:20"},{"name":"remainder","nativeSrc":"5711:9:20","nodeType":"YulIdentifier","src":"5711:9:20"}],"functionName":{"name":"sub","nativeSrc":"5700:3:20","nodeType":"YulIdentifier","src":"5700:3:20"},"nativeSrc":"5700:21:20","nodeType":"YulFunctionCall","src":"5700:21:20"},"variableNames":[{"name":"prod0","nativeSrc":"5691:5:20","nodeType":"YulIdentifier","src":"5691:5:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4106,"isOffset":false,"isSlot":false,"src":"5539:11:20","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"5667:5:20","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"5691:5:20","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"5704:5:20","valueSize":1},{"declaration":4118,"isOffset":false,"isSlot":false,"src":"5633:5:20","valueSize":1},{"declaration":4118,"isOffset":false,"isSlot":false,"src":"5646:5:20","valueSize":1},{"declaration":4139,"isOffset":false,"isSlot":false,"src":"5513:9:20","valueSize":1},{"declaration":4139,"isOffset":false,"isSlot":false,"src":"5656:9:20","valueSize":1},{"declaration":4139,"isOffset":false,"isSlot":false,"src":"5711:9:20","valueSize":1},{"declaration":4102,"isOffset":false,"isSlot":false,"src":"5533:1:20","valueSize":1},{"declaration":4104,"isOffset":false,"isSlot":false,"src":"5536:1:20","valueSize":1}],"id":4141,"nodeType":"InlineAssembly","src":"5435:300:20"},{"assignments":[4143],"declarations":[{"constant":false,"id":4143,"mutability":"mutable","name":"twos","nameLocation":"5947:4:20","nodeType":"VariableDeclaration","scope":4223,"src":"5939:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4142,"name":"uint256","nodeType":"ElementaryTypeName","src":"5939:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4150,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"5954:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5969:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4146,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"5973:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5969:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5968:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5954:31:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5939:46:20"},{"AST":{"nativeSrc":"6008:362:20","nodeType":"YulBlock","src":"6008:362:20","statements":[{"nativeSrc":"6073:37:20","nodeType":"YulAssignment","src":"6073:37:20","value":{"arguments":[{"name":"denominator","nativeSrc":"6092:11:20","nodeType":"YulIdentifier","src":"6092:11:20"},{"name":"twos","nativeSrc":"6105:4:20","nodeType":"YulIdentifier","src":"6105:4:20"}],"functionName":{"name":"div","nativeSrc":"6088:3:20","nodeType":"YulIdentifier","src":"6088:3:20"},"nativeSrc":"6088:22:20","nodeType":"YulFunctionCall","src":"6088:22:20"},"variableNames":[{"name":"denominator","nativeSrc":"6073:11:20","nodeType":"YulIdentifier","src":"6073:11:20"}]},{"nativeSrc":"6177:25:20","nodeType":"YulAssignment","src":"6177:25:20","value":{"arguments":[{"name":"prod0","nativeSrc":"6190:5:20","nodeType":"YulIdentifier","src":"6190:5:20"},{"name":"twos","nativeSrc":"6197:4:20","nodeType":"YulIdentifier","src":"6197:4:20"}],"functionName":{"name":"div","nativeSrc":"6186:3:20","nodeType":"YulIdentifier","src":"6186:3:20"},"nativeSrc":"6186:16:20","nodeType":"YulFunctionCall","src":"6186:16:20"},"variableNames":[{"name":"prod0","nativeSrc":"6177:5:20","nodeType":"YulIdentifier","src":"6177:5:20"}]},{"nativeSrc":"6317:39:20","nodeType":"YulAssignment","src":"6317:39:20","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6337:1:20","nodeType":"YulLiteral","src":"6337:1:20","type":"","value":"0"},{"name":"twos","nativeSrc":"6340:4:20","nodeType":"YulIdentifier","src":"6340:4:20"}],"functionName":{"name":"sub","nativeSrc":"6333:3:20","nodeType":"YulIdentifier","src":"6333:3:20"},"nativeSrc":"6333:12:20","nodeType":"YulFunctionCall","src":"6333:12:20"},{"name":"twos","nativeSrc":"6347:4:20","nodeType":"YulIdentifier","src":"6347:4:20"}],"functionName":{"name":"div","nativeSrc":"6329:3:20","nodeType":"YulIdentifier","src":"6329:3:20"},"nativeSrc":"6329:23:20","nodeType":"YulFunctionCall","src":"6329:23:20"},{"kind":"number","nativeSrc":"6354:1:20","nodeType":"YulLiteral","src":"6354:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"6325:3:20","nodeType":"YulIdentifier","src":"6325:3:20"},"nativeSrc":"6325:31:20","nodeType":"YulFunctionCall","src":"6325:31:20"},"variableNames":[{"name":"twos","nativeSrc":"6317:4:20","nodeType":"YulIdentifier","src":"6317:4:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4106,"isOffset":false,"isSlot":false,"src":"6073:11:20","valueSize":1},{"declaration":4106,"isOffset":false,"isSlot":false,"src":"6092:11:20","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"6177:5:20","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"6190:5:20","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"6105:4:20","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"6197:4:20","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"6317:4:20","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"6340:4:20","valueSize":1},{"declaration":4143,"isOffset":false,"isSlot":false,"src":"6347:4:20","valueSize":1}],"id":4151,"nodeType":"InlineAssembly","src":"5999:371:20"},{"expression":{"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4152,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"6436:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"6445:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4154,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4143,"src":"6453:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6445:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6436:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4157,"nodeType":"ExpressionStatement","src":"6436:21:20"},{"assignments":[4159],"declarations":[{"constant":false,"id":4159,"mutability":"mutable","name":"inverse","nameLocation":"6783:7:20","nodeType":"VariableDeclaration","scope":4223,"src":"6775:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"6775:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4166,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6794:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4161,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"6798:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6794:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6793:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6813:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6793:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6775:39:20"},{"expression":{"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7042:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"7046:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4170,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7060:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7046:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7042:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7031:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4174,"nodeType":"ExpressionStatement","src":"7031:36:20"},{"expression":{"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4175,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7100:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7111:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"7115:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4178,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7129:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7115:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7111:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7100:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4182,"nodeType":"ExpressionStatement","src":"7100:36:20"},{"expression":{"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4183,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7170:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7181:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"7185:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4186,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7199:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7185:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7181:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7170:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4190,"nodeType":"ExpressionStatement","src":"7170:36:20"},{"expression":{"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4191,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7240:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4193,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"7255:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4194,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7269:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7255:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7240:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4198,"nodeType":"ExpressionStatement","src":"7240:36:20"},{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4199,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7310:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7321:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4201,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"7325:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4202,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7339:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7325:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7321:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7310:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"7310:36:20"},{"expression":{"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4207,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7381:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7392:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4106,"src":"7396:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4210,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7410:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7396:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7392:25:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7381:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4214,"nodeType":"ExpressionStatement","src":"7381:36:20"},{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4215,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"7851:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4216,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"7860:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4217,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"7868:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7860:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7851:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"7851:24:20"},{"expression":{"id":4221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"7896:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4110,"id":4222,"nodeType":"Return","src":"7889:13:20"}]}]},"documentation":{"id":4100,"nodeType":"StructuredDocumentation","src":"3485:313:20","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4225,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"3812:6:20","nodeType":"FunctionDefinition","parameters":{"id":4107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"x","nameLocation":"3827:1:20","nodeType":"VariableDeclaration","scope":4225,"src":"3819:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4101,"name":"uint256","nodeType":"ElementaryTypeName","src":"3819:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4104,"mutability":"mutable","name":"y","nameLocation":"3838:1:20","nodeType":"VariableDeclaration","scope":4225,"src":"3830:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3830:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4106,"mutability":"mutable","name":"denominator","nameLocation":"3849:11:20","nodeType":"VariableDeclaration","scope":4225,"src":"3841:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:43:20"},"returnParameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4109,"mutability":"mutable","name":"result","nameLocation":"3893:6:20","nodeType":"VariableDeclaration","scope":4225,"src":"3885:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3885:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3884:16:20"},"scope":4891,"src":"3803:4116:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"8161:192:20","statements":[{"assignments":[4241],"declarations":[{"constant":false,"id":4241,"mutability":"mutable","name":"result","nameLocation":"8179:6:20","nodeType":"VariableDeclaration","scope":4267,"src":"8171:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4240,"name":"uint256","nodeType":"ElementaryTypeName","src":"8171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4247,"initialValue":{"arguments":[{"id":4243,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"8195:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4244,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"8198:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4245,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"8201:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4242,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4225,4268],"referencedDeclaration":4225,"src":"8188:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8188:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8171:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4249,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4235,"src":"8244:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":4248,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"8227:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3848_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4252,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"8264:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4253,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4230,"src":"8267:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4254,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"8270:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4251,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"8257:6:20","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8257:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8257:29:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8227:59:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4264,"nodeType":"IfStatement","src":"8223:101:20","trueBody":{"id":4263,"nodeType":"Block","src":"8288:36:20","statements":[{"expression":{"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"8302:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8312:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8302:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4262,"nodeType":"ExpressionStatement","src":"8302:11:20"}]}},{"expression":{"id":4265,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"8340:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4239,"id":4266,"nodeType":"Return","src":"8333:13:20"}]},"documentation":{"id":4226,"nodeType":"StructuredDocumentation","src":"7925:121:20","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"8060:6:20","nodeType":"FunctionDefinition","parameters":{"id":4236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"x","nameLocation":"8075:1:20","nodeType":"VariableDeclaration","scope":4268,"src":"8067:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"8067:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4230,"mutability":"mutable","name":"y","nameLocation":"8086:1:20","nodeType":"VariableDeclaration","scope":4268,"src":"8078:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4229,"name":"uint256","nodeType":"ElementaryTypeName","src":"8078:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4232,"mutability":"mutable","name":"denominator","nameLocation":"8097:11:20","nodeType":"VariableDeclaration","scope":4268,"src":"8089:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4235,"mutability":"mutable","name":"rounding","nameLocation":"8119:8:20","nodeType":"VariableDeclaration","scope":4268,"src":"8110:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":4234,"nodeType":"UserDefinedTypeName","pathNode":{"id":4233,"name":"Rounding","nameLocations":["8110:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"8110:8:20"},"referencedDeclaration":3848,"src":"8110:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8066:62:20"},"returnParameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4268,"src":"8152:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"8152:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8151:9:20"},"scope":4891,"src":"8051:302:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4379,"nodeType":"Block","src":"8644:1585:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"8658:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8658:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4282,"nodeType":"IfStatement","src":"8654:45:20","trueBody":{"id":4281,"nodeType":"Block","src":"8666:33:20","statements":[{"expression":{"hexValue":"30","id":4279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8687:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4275,"id":4280,"nodeType":"Return","src":"8680:8:20"}]}},{"assignments":[4284],"declarations":[{"constant":false,"id":4284,"mutability":"mutable","name":"result","nameLocation":"9386:6:20","nodeType":"VariableDeclaration","scope":4379,"src":"9378:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4293,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9395:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"9406:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4286,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4547,4582],"referencedDeclaration":4547,"src":"9401:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9412:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9401:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9400:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9395:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9378:36:20"},{"id":4378,"nodeType":"UncheckedBlock","src":"9815:408:20","statements":[{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9839:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9849:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"9858:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9862:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9849:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9848:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9873:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9848:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4304,"nodeType":"ExpressionStatement","src":"9839:35:20"},{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4305,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9888:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9898:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"9907:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9911:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9907:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9898:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9897:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9922:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9897:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4315,"nodeType":"ExpressionStatement","src":"9888:35:20"},{"expression":{"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4316,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9937:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4317,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9947:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"9956:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4319,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9960:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9956:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9947:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9946:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9971:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4326,"nodeType":"ExpressionStatement","src":"9937:35:20"},{"expression":{"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9986:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4328,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"9996:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4329,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10005:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4330,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10009:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10005:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9996:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4333,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9995:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10020:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9995:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9986:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4337,"nodeType":"ExpressionStatement","src":"9986:35:20"},{"expression":{"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4338,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10035:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10045:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4340,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10054:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4341,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10058:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10054:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10045:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10044:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10069:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10044:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10035:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4348,"nodeType":"ExpressionStatement","src":"10035:35:20"},{"expression":{"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10084:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4350,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10094:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4351,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10103:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10107:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10094:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10093:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10118:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10093:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10084:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4359,"nodeType":"ExpressionStatement","src":"10084:35:20"},{"expression":{"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10133:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4361,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10143:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10152:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10156:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10152:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10143:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4366,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10142:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10167:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10142:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10133:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4370,"nodeType":"ExpressionStatement","src":"10133:35:20"},{"expression":{"arguments":[{"id":4372,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10193:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"10201:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"10205:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10201:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4371,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"10189:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10189:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4275,"id":4377,"nodeType":"Return","src":"10182:30:20"}]}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"8359:223:20","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":4380,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8596:4:20","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"a","nameLocation":"8609:1:20","nodeType":"VariableDeclaration","scope":4380,"src":"8601:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8600:11:20"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4380,"src":"8635:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"8635:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8634:9:20"},"scope":4891,"src":"8587:1642:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4414,"nodeType":"Block","src":"10405:164:20","statements":[{"id":4413,"nodeType":"UncheckedBlock","src":"10415:148:20","statements":[{"assignments":[4392],"declarations":[{"constant":false,"id":4392,"mutability":"mutable","name":"result","nameLocation":"10447:6:20","nodeType":"VariableDeclaration","scope":4413,"src":"10439:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"10439:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4396,"initialValue":{"arguments":[{"id":4394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10461:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4393,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4380,4415],"referencedDeclaration":4380,"src":"10456:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10456:7:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10439:24:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"10484:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4399,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"10511:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":4398,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"10494:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3848_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10494:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4401,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"10524:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4402,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"10533:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4404,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"10542:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10524:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10494:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10550:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10494:57:20","trueExpression":{"hexValue":"31","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10546:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:59:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10484:68:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4390,"id":4412,"nodeType":"Return","src":"10477:75:20"}]}]},"documentation":{"id":4381,"nodeType":"StructuredDocumentation","src":"10235:89:20","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":4415,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"10338:4:20","nodeType":"FunctionDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4383,"mutability":"mutable","name":"a","nameLocation":"10351:1:20","nodeType":"VariableDeclaration","scope":4415,"src":"10343:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"10343:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4386,"mutability":"mutable","name":"rounding","nameLocation":"10363:8:20","nodeType":"VariableDeclaration","scope":4415,"src":"10354:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":4385,"nodeType":"UserDefinedTypeName","pathNode":{"id":4384,"name":"Rounding","nameLocations":["10354:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"10354:8:20"},"referencedDeclaration":3848,"src":"10354:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10342:30:20"},"returnParameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4415,"src":"10396:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"10396:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10395:9:20"},"scope":4891,"src":"10329:240:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4546,"nodeType":"Block","src":"10760:922:20","statements":[{"assignments":[4424],"declarations":[{"constant":false,"id":4424,"mutability":"mutable","name":"result","nameLocation":"10778:6:20","nodeType":"VariableDeclaration","scope":4546,"src":"10770:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4423,"name":"uint256","nodeType":"ElementaryTypeName","src":"10770:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4426,"initialValue":{"hexValue":"30","id":4425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10787:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10770:18:20"},{"id":4543,"nodeType":"UncheckedBlock","src":"10798:855:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"10826:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10835:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10826:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10826:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4441,"nodeType":"IfStatement","src":"10822:99:20","trueBody":{"id":4440,"nodeType":"Block","src":"10844:77:20","statements":[{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"10862:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10872:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10862:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"10862:13:20"},{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"10893:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10903:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"10893:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4439,"nodeType":"ExpressionStatement","src":"10893:13:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"10938:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10947:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10938:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10952:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10938:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4456,"nodeType":"IfStatement","src":"10934:96:20","trueBody":{"id":4455,"nodeType":"Block","src":"10955:75:20","statements":[{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"10973:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10983:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10973:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"nodeType":"ExpressionStatement","src":"10973:12:20"},{"expression":{"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11003:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11013:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11003:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4454,"nodeType":"ExpressionStatement","src":"11003:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11047:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11056:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11047:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11061:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11047:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4471,"nodeType":"IfStatement","src":"11043:96:20","trueBody":{"id":4470,"nodeType":"Block","src":"11064:75:20","statements":[{"expression":{"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4462,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11082:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11082:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4465,"nodeType":"ExpressionStatement","src":"11082:12:20"},{"expression":{"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11112:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11122:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11112:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4469,"nodeType":"ExpressionStatement","src":"11112:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11156:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11165:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11156:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11170:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11156:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4486,"nodeType":"IfStatement","src":"11152:96:20","trueBody":{"id":4485,"nodeType":"Block","src":"11173:75:20","statements":[{"expression":{"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11191:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11201:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11191:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4480,"nodeType":"ExpressionStatement","src":"11191:12:20"},{"expression":{"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11221:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11231:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11221:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4484,"nodeType":"ExpressionStatement","src":"11221:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11265:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11274:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11265:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11278:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4501,"nodeType":"IfStatement","src":"11261:93:20","trueBody":{"id":4500,"nodeType":"Block","src":"11281:73:20","statements":[{"expression":{"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11299:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11309:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11299:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4495,"nodeType":"ExpressionStatement","src":"11299:11:20"},{"expression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11328:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11338:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11328:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"nodeType":"ExpressionStatement","src":"11328:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11371:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11380:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11371:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11384:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11371:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4516,"nodeType":"IfStatement","src":"11367:93:20","trueBody":{"id":4515,"nodeType":"Block","src":"11387:73:20","statements":[{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11405:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11415:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11405:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"nodeType":"ExpressionStatement","src":"11405:11:20"},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11434:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11444:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11434:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"11434:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11477:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11486:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11477:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11490:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11477:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4531,"nodeType":"IfStatement","src":"11473:93:20","trueBody":{"id":4530,"nodeType":"Block","src":"11493:73:20","statements":[{"expression":{"id":4524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11511:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":4523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11521:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11511:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4525,"nodeType":"ExpressionStatement","src":"11511:11:20"},{"expression":{"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4526,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11540:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11550:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11540:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4529,"nodeType":"ExpressionStatement","src":"11540:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"11583:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11592:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11583:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11596:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11583:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4542,"nodeType":"IfStatement","src":"11579:64:20","trueBody":{"id":4541,"nodeType":"Block","src":"11599:44:20","statements":[{"expression":{"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4537,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11617:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11627:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11617:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4540,"nodeType":"ExpressionStatement","src":"11617:11:20"}]}}]},{"expression":{"id":4544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4424,"src":"11669:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4422,"id":4545,"nodeType":"Return","src":"11662:13:20"}]},"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"10575:119:20","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4547,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"10708:4:20","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"value","nameLocation":"10721:5:20","nodeType":"VariableDeclaration","scope":4547,"src":"10713:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"10713:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10712:15:20"},"returnParameters":{"id":4422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4547,"src":"10751:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4420,"name":"uint256","nodeType":"ElementaryTypeName","src":"10751:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10750:9:20"},"scope":4891,"src":"10699:983:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4581,"nodeType":"Block","src":"11915:168:20","statements":[{"id":4580,"nodeType":"UncheckedBlock","src":"11925:152:20","statements":[{"assignments":[4559],"declarations":[{"constant":false,"id":4559,"mutability":"mutable","name":"result","nameLocation":"11957:6:20","nodeType":"VariableDeclaration","scope":4580,"src":"11949:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11949:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4563,"initialValue":{"arguments":[{"id":4561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"11971:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4560,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4547,4582],"referencedDeclaration":4547,"src":"11966:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11966:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11949:28:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4564,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"11998:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4566,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4553,"src":"12025:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":4565,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"12008:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3848_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12008:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4569,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"12043:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"12052:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12008:49:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12008:57:20","trueExpression":{"hexValue":"31","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12060:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12007:59:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11998:68:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4557,"id":4579,"nodeType":"Return","src":"11991:75:20"}]}]},"documentation":{"id":4548,"nodeType":"StructuredDocumentation","src":"11688:142:20","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4582,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"11844:4:20","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4550,"mutability":"mutable","name":"value","nameLocation":"11857:5:20","nodeType":"VariableDeclaration","scope":4582,"src":"11849:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"11849:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4553,"mutability":"mutable","name":"rounding","nameLocation":"11873:8:20","nodeType":"VariableDeclaration","scope":4582,"src":"11864:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":4552,"nodeType":"UserDefinedTypeName","pathNode":{"id":4551,"name":"Rounding","nameLocations":["11864:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"11864:8:20"},"referencedDeclaration":3848,"src":"11864:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11848:34:20"},"returnParameters":{"id":4557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4582,"src":"11906:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4555,"name":"uint256","nodeType":"ElementaryTypeName","src":"11906:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11905:9:20"},"scope":4891,"src":"11835:248:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4710,"nodeType":"Block","src":"12276:854:20","statements":[{"assignments":[4591],"declarations":[{"constant":false,"id":4591,"mutability":"mutable","name":"result","nameLocation":"12294:6:20","nodeType":"VariableDeclaration","scope":4710,"src":"12286:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"12286:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4593,"initialValue":{"hexValue":"30","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12303:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12286:18:20"},{"id":4707,"nodeType":"UncheckedBlock","src":"12314:787:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12342:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12351:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12357:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12351:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12342:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"12338:103:20","trueBody":{"id":4609,"nodeType":"Block","src":"12361:80:20","statements":[{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12388:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12394:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12388:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"12379:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4604,"nodeType":"ExpressionStatement","src":"12379:17:20"},{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12414:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12424:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"12414:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4608,"nodeType":"ExpressionStatement","src":"12414:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12458:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12467:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12473:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12467:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12458:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"12454:103:20","trueBody":{"id":4626,"nodeType":"Block","src":"12477:80:20","statements":[{"expression":{"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12495:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12504:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12510:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12504:8:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"12495:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4621,"nodeType":"ExpressionStatement","src":"12495:17:20"},{"expression":{"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4622,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12530:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12540:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12530:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4625,"nodeType":"ExpressionStatement","src":"12530:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12574:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12583:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12583:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12574:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4644,"nodeType":"IfStatement","src":"12570:103:20","trueBody":{"id":4643,"nodeType":"Block","src":"12593:80:20","statements":[{"expression":{"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12611:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12626:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12620:8:20","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"12611:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4638,"nodeType":"ExpressionStatement","src":"12611:17:20"},{"expression":{"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4639,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12646:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12656:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12646:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4642,"nodeType":"ExpressionStatement","src":"12646:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12690:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12699:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12705:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12699:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12690:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4661,"nodeType":"IfStatement","src":"12686:100:20","trueBody":{"id":4660,"nodeType":"Block","src":"12708:78:20","statements":[{"expression":{"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12726:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12735:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12741:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12735:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"12726:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4655,"nodeType":"ExpressionStatement","src":"12726:16:20"},{"expression":{"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12760:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12770:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12760:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4659,"nodeType":"ExpressionStatement","src":"12760:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12803:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12812:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12818:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12812:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12803:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4678,"nodeType":"IfStatement","src":"12799:100:20","trueBody":{"id":4677,"nodeType":"Block","src":"12821:78:20","statements":[{"expression":{"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12839:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12848:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12854:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12848:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"12839:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4672,"nodeType":"ExpressionStatement","src":"12839:16:20"},{"expression":{"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4673,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12873:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12883:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12873:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4676,"nodeType":"ExpressionStatement","src":"12873:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12916:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12925:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12931:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12925:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12916:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4695,"nodeType":"IfStatement","src":"12912:100:20","trueBody":{"id":4694,"nodeType":"Block","src":"12934:78:20","statements":[{"expression":{"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12952:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12961:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12967:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12961:7:20","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"12952:16:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4689,"nodeType":"ExpressionStatement","src":"12952:16:20"},{"expression":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4690,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"12986:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12996:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12986:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4693,"nodeType":"ExpressionStatement","src":"12986:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"13029:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13038:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13044:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13038:7:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"13029:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4706,"nodeType":"IfStatement","src":"13025:66:20","trueBody":{"id":4705,"nodeType":"Block","src":"13047:44:20","statements":[{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4701,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"13065:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13075:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13065:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4704,"nodeType":"ExpressionStatement","src":"13065:11:20"}]}}]},{"expression":{"id":4708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"13117:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4589,"id":4709,"nodeType":"Return","src":"13110:13:20"}]},"documentation":{"id":4583,"nodeType":"StructuredDocumentation","src":"12089:120:20","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4711,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"12223:5:20","nodeType":"FunctionDefinition","parameters":{"id":4586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4585,"mutability":"mutable","name":"value","nameLocation":"12237:5:20","nodeType":"VariableDeclaration","scope":4711,"src":"12229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4584,"name":"uint256","nodeType":"ElementaryTypeName","src":"12229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12228:15:20"},"returnParameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4711,"src":"12267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"12267:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12266:9:20"},"scope":4891,"src":"12214:916:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4745,"nodeType":"Block","src":"13365:170:20","statements":[{"id":4744,"nodeType":"UncheckedBlock","src":"13375:154:20","statements":[{"assignments":[4723],"declarations":[{"constant":false,"id":4723,"mutability":"mutable","name":"result","nameLocation":"13407:6:20","nodeType":"VariableDeclaration","scope":4744,"src":"13399:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"13399:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4727,"initialValue":{"arguments":[{"id":4725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"13422:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4724,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4711,4746],"referencedDeclaration":4711,"src":"13416:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13416:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13399:29:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"13449:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4730,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"13476:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":4729,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"13459:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3848_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13459:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13489:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"13495:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4714,"src":"13504:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:20:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13459:50:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13516:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13459:58:20","trueExpression":{"hexValue":"31","id":4738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13512:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13458:60:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13449:69:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4721,"id":4743,"nodeType":"Return","src":"13442:76:20"}]}]},"documentation":{"id":4712,"nodeType":"StructuredDocumentation","src":"13136:143:20","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4746,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"13293:5:20","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4714,"mutability":"mutable","name":"value","nameLocation":"13307:5:20","nodeType":"VariableDeclaration","scope":4746,"src":"13299:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"13299:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4717,"mutability":"mutable","name":"rounding","nameLocation":"13323:8:20","nodeType":"VariableDeclaration","scope":4746,"src":"13314:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":4716,"nodeType":"UserDefinedTypeName","pathNode":{"id":4715,"name":"Rounding","nameLocations":["13314:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"13314:8:20"},"referencedDeclaration":3848,"src":"13314:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"13298:34:20"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4746,"src":"13356:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"13356:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13355:9:20"},"scope":4891,"src":"13284:251:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4832,"nodeType":"Block","src":"13855:600:20","statements":[{"assignments":[4755],"declarations":[{"constant":false,"id":4755,"mutability":"mutable","name":"result","nameLocation":"13873:6:20","nodeType":"VariableDeclaration","scope":4832,"src":"13865:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4754,"name":"uint256","nodeType":"ElementaryTypeName","src":"13865:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4757,"initialValue":{"hexValue":"30","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13882:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13865:18:20"},{"id":4829,"nodeType":"UncheckedBlock","src":"13893:533:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"13921:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":4759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13930:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13921:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13936:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13921:16:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4772,"nodeType":"IfStatement","src":"13917:98:20","trueBody":{"id":4771,"nodeType":"Block","src":"13939:76:20","statements":[{"expression":{"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"13957:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13967:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"13957:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4766,"nodeType":"ExpressionStatement","src":"13957:13:20"},{"expression":{"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"13988:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13998:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13988:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4770,"nodeType":"ExpressionStatement","src":"13988:12:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14032:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14041:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14032:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14046:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14032:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4787,"nodeType":"IfStatement","src":"14028:95:20","trueBody":{"id":4786,"nodeType":"Block","src":"14049:74:20","statements":[{"expression":{"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14067:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14077:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"14067:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4781,"nodeType":"ExpressionStatement","src":"14067:12:20"},{"expression":{"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"14097:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14107:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14097:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4785,"nodeType":"ExpressionStatement","src":"14097:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14140:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":4789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14149:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14140:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14154:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14140:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4802,"nodeType":"IfStatement","src":"14136:95:20","trueBody":{"id":4801,"nodeType":"Block","src":"14157:74:20","statements":[{"expression":{"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14175:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14185:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"14175:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4796,"nodeType":"ExpressionStatement","src":"14175:12:20"},{"expression":{"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4797,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"14205:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14215:1:20","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"14205:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4800,"nodeType":"ExpressionStatement","src":"14205:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14248:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14257:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14248:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14262:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14248:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4817,"nodeType":"IfStatement","src":"14244:95:20","trueBody":{"id":4816,"nodeType":"Block","src":"14265:74:20","statements":[{"expression":{"id":4810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14283:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14293:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"14283:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4811,"nodeType":"ExpressionStatement","src":"14283:12:20"},{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4812,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"14313:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14323:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"14313:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"14313:11:20"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"14356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":4819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14365:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"14356:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14369:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14356:14:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4828,"nodeType":"IfStatement","src":"14352:64:20","trueBody":{"id":4827,"nodeType":"Block","src":"14372:44:20","statements":[{"expression":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4823,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"14390:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14400:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14390:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4826,"nodeType":"ExpressionStatement","src":"14390:11:20"}]}}]},{"expression":{"id":4830,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"14442:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4753,"id":4831,"nodeType":"Return","src":"14435:13:20"}]},"documentation":{"id":4747,"nodeType":"StructuredDocumentation","src":"13541:246:20","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4833,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"13801:6:20","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4749,"mutability":"mutable","name":"value","nameLocation":"13816:5:20","nodeType":"VariableDeclaration","scope":4833,"src":"13808:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"13808:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13807:15:20"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4833,"src":"13846:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"13846:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13845:9:20"},"scope":4891,"src":"13792:663:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4870,"nodeType":"Block","src":"14692:177:20","statements":[{"id":4869,"nodeType":"UncheckedBlock","src":"14702:161:20","statements":[{"assignments":[4845],"declarations":[{"constant":false,"id":4845,"mutability":"mutable","name":"result","nameLocation":"14734:6:20","nodeType":"VariableDeclaration","scope":4869,"src":"14726:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4844,"name":"uint256","nodeType":"ElementaryTypeName","src":"14726:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4849,"initialValue":{"arguments":[{"id":4847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"14750:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4846,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4833,4871],"referencedDeclaration":4833,"src":"14743:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14743:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14726:30:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"14777:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4852,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"14804:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":4851,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4890,"src":"14787:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3848_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14787:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"14823:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14833:1:20","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"14823:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14822:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"14838:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14817:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14787:56:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14850:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"14787:64:20","trueExpression":{"hexValue":"31","id":4863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14846:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4866,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14786:66:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"14777:75:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4843,"id":4868,"nodeType":"Return","src":"14770:82:20"}]}]},"documentation":{"id":4834,"nodeType":"StructuredDocumentation","src":"14461:144:20","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4871,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"14619:6:20","nodeType":"FunctionDefinition","parameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4836,"mutability":"mutable","name":"value","nameLocation":"14634:5:20","nodeType":"VariableDeclaration","scope":4871,"src":"14626:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4835,"name":"uint256","nodeType":"ElementaryTypeName","src":"14626:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4839,"mutability":"mutable","name":"rounding","nameLocation":"14650:8:20","nodeType":"VariableDeclaration","scope":4871,"src":"14641:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":4838,"nodeType":"UserDefinedTypeName","pathNode":{"id":4837,"name":"Rounding","nameLocations":["14641:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"14641:8:20"},"referencedDeclaration":3848,"src":"14641:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"14625:34:20"},"returnParameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4871,"src":"14683:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"14683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14682:9:20"},"scope":4891,"src":"14610:259:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4889,"nodeType":"Block","src":"15067:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4882,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"15090:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15084:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4880,"name":"uint8","nodeType":"ElementaryTypeName","src":"15084:5:20","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15084:15:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15102:1:20","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15084:19:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15107:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15084:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4879,"id":4888,"nodeType":"Return","src":"15077:31:20"}]},"documentation":{"id":4872,"nodeType":"StructuredDocumentation","src":"14875:113:20","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4890,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"15002:16:20","nodeType":"FunctionDefinition","parameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"rounding","nameLocation":"15028:8:20","nodeType":"VariableDeclaration","scope":4890,"src":"15019:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"},"typeName":{"id":4874,"nodeType":"UserDefinedTypeName","pathNode":{"id":4873,"name":"Rounding","nameLocations":["15019:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":3848,"src":"15019:8:20"},"referencedDeclaration":3848,"src":"15019:8:20","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"15018:19:20"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4890,"src":"15061:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4877,"name":"bool","nodeType":"ElementaryTypeName","src":"15061:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15060:6:20"},"scope":4891,"src":"14993:122:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4892,"src":"203:14914:20","usedErrors":[3843],"usedEvents":[]}],"src":"103:15015:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4996]},"id":4997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4893,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":4894,"nodeType":"StructuredDocumentation","src":"135:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4996,"linearizedBaseContracts":[4996],"name":"SignedMath","nameLocation":"224:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4911,"nodeType":"Block","src":"376:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"393:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"397:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"393:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"405:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"393:13:21","trueExpression":{"id":4907,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"401:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4903,"id":4910,"nodeType":"Return","src":"386:20:21"}]},"documentation":{"id":4895,"nodeType":"StructuredDocumentation","src":"241:66:21","text":" @dev Returns the largest of two signed numbers."},"id":4912,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"321:3:21","nodeType":"FunctionDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4897,"mutability":"mutable","name":"a","nameLocation":"332:1:21","nodeType":"VariableDeclaration","scope":4912,"src":"325:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4896,"name":"int256","nodeType":"ElementaryTypeName","src":"325:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"b","nameLocation":"342:1:21","nodeType":"VariableDeclaration","scope":4912,"src":"335:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4898,"name":"int256","nodeType":"ElementaryTypeName","src":"335:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"324:20:21"},"returnParameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4912,"src":"368:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4901,"name":"int256","nodeType":"ElementaryTypeName","src":"368:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"367:8:21"},"scope":4996,"src":"312:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4929,"nodeType":"Block","src":"555:37:21","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4922,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"572:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4923,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"572:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4926,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"584:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"572:13:21","trueExpression":{"id":4925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"580:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4921,"id":4928,"nodeType":"Return","src":"565:20:21"}]},"documentation":{"id":4913,"nodeType":"StructuredDocumentation","src":"419:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":4930,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"500:3:21","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"a","nameLocation":"511:1:21","nodeType":"VariableDeclaration","scope":4930,"src":"504:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4914,"name":"int256","nodeType":"ElementaryTypeName","src":"504:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4917,"mutability":"mutable","name":"b","nameLocation":"521:1:21","nodeType":"VariableDeclaration","scope":4930,"src":"514:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4916,"name":"int256","nodeType":"ElementaryTypeName","src":"514:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"503:20:21"},"returnParameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4930,"src":"547:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4919,"name":"int256","nodeType":"ElementaryTypeName","src":"547:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"546:8:21"},"scope":4996,"src":"491:101:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4973,"nodeType":"Block","src":"797:162:21","statements":[{"assignments":[4941],"declarations":[{"constant":false,"id":4941,"mutability":"mutable","name":"x","nameLocation":"866:1:21","nodeType":"VariableDeclaration","scope":4973,"src":"859:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4940,"name":"int256","nodeType":"ElementaryTypeName","src":"859:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4954,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"871:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"875:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"871:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"870:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"882:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4947,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"886:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"882:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"881:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"892:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"881:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"859:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"911:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4960,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"931:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"923:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"923:7:21","typeDescriptions":{}}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"923:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"937:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"923:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"916:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4956,"name":"int256","nodeType":"ElementaryTypeName","src":"916:6:21","typeDescriptions":{}}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"945:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4966,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"949:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"945:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"944:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"916:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"915:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"911:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4939,"id":4972,"nodeType":"Return","src":"904:48:21"}]},"documentation":{"id":4931,"nodeType":"StructuredDocumentation","src":"598:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4974,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"738:7:21","nodeType":"FunctionDefinition","parameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4933,"mutability":"mutable","name":"a","nameLocation":"753:1:21","nodeType":"VariableDeclaration","scope":4974,"src":"746:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4932,"name":"int256","nodeType":"ElementaryTypeName","src":"746:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4935,"mutability":"mutable","name":"b","nameLocation":"763:1:21","nodeType":"VariableDeclaration","scope":4974,"src":"756:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4934,"name":"int256","nodeType":"ElementaryTypeName","src":"756:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"745:20:21"},"returnParameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4974,"src":"789:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4937,"name":"int256","nodeType":"ElementaryTypeName","src":"789:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"788:8:21"},"scope":4996,"src":"729:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"1103:158:21","statements":[{"id":4993,"nodeType":"UncheckedBlock","src":"1113:142:21","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"1228:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1228:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1241:2:21","subExpression":{"id":4988,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"1242:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1228:15:21","trueExpression":{"id":4987,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4977,"src":"1237:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1220:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1220:7:21","typeDescriptions":{}}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1220:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4981,"id":4992,"nodeType":"Return","src":"1213:31:21"}]}]},"documentation":{"id":4975,"nodeType":"StructuredDocumentation","src":"965:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1057:3:21","nodeType":"FunctionDefinition","parameters":{"id":4978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4977,"mutability":"mutable","name":"n","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":4995,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4976,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1060:10:21"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"1094:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4979,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:9:21"},"scope":4996,"src":"1048:213:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4997,"src":"216:1047:21","usedErrors":[],"usedEvents":[]}],"src":"109:1155:21"},"id":21},"contracts/ERC4626Fees.sol":{"ast":{"absolutePath":"contracts/ERC4626Fees.sol","exportedSymbols":{"Context":[2538],"ERC20":[994],"ERC4626":[1911],"ERC4626Fees":[5337],"IERC20":[1072],"IERC20Metadata":[1937],"IERC4626":[317],"Math":[4891],"Ownable":[147],"SafeERC20":[2263]},"id":5338,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4998,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"35:23:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol","id":4999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5338,"sourceUnit":1912,"src":"62:68:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5338,"sourceUnit":148,"src":"132:52:22","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5002,"name":"ERC4626","nameLocations":["344:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"344:7:22"},"id":5003,"nodeType":"InheritanceSpecifier","src":"344:7:22"},{"baseName":{"id":5004,"name":"Ownable","nameLocations":["353:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"353:7:22"},"id":5005,"nodeType":"InheritanceSpecifier","src":"353:7:22"}],"canonicalName":"ERC4626Fees","contractDependencies":[],"contractKind":"contract","documentation":{"id":5001,"nodeType":"StructuredDocumentation","src":"192:119:22","text":"@dev ERC4626 vault with entry/exit fees expressed in https://en.wikipedia.org/wiki/Basis_point[basis point (bp)]."},"fullyImplemented":true,"id":5337,"linearizedBaseContracts":[5337,147,1911,317,994,384,1937,1072,2538],"name":"ERC4626Fees","nameLocation":"329:11:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"ba0af7a9","id":5007,"mutability":"mutable","name":"entryFeeBasisPoints","nameLocation":"383:19:22","nodeType":"VariableDeclaration","scope":5337,"src":"368:34:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"86915573","id":5009,"mutability":"mutable","name":"exitFeeBasisPoints","nameLocation":"424:18:22","nodeType":"VariableDeclaration","scope":5337,"src":"409:33:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5008,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":5028,"nodeType":"Block","src":"538:106:22","statements":[{"expression":{"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5020,"name":"entryFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"549:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5021,"name":"_entryBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5011,"src":"571:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"549:39:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5023,"nodeType":"ExpressionStatement","src":"549:39:22"},{"expression":{"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5024,"name":"exitFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"599:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5025,"name":"_exitBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5013,"src":"620:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"599:37:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5027,"nodeType":"ExpressionStatement","src":"599:37:22"}]},"id":5029,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":5016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"527:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"531:6:22","memberName":"sender","nodeType":"MemberAccess","src":"527:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5018,"kind":"baseConstructorSpecifier","modifierName":{"id":5015,"name":"Ownable","nameLocations":["519:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"519:7:22"},"nodeType":"ModifierInvocation","src":"519:19:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5011,"mutability":"mutable","name":"_entryBasisPoints","nameLocation":"475:17:22","nodeType":"VariableDeclaration","scope":5029,"src":"467:25:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5010,"name":"uint256","nodeType":"ElementaryTypeName","src":"467:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5013,"mutability":"mutable","name":"_exitBasisPoints","nameLocation":"502:16:22","nodeType":"VariableDeclaration","scope":5029,"src":"494:24:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5012,"name":"uint256","nodeType":"ElementaryTypeName","src":"494:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"466:53:22"},"returnParameters":{"id":5019,"nodeType":"ParameterList","parameters":[],"src":"538:0:22"},"scope":5337,"src":"455:189:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"global":false,"id":5032,"libraryName":{"id":5030,"name":"Math","nameLocations":["662:4:22"],"nodeType":"IdentifierPath","referencedDeclaration":4891,"src":"662:4:22"},"nodeType":"UsingForDirective","src":"656:23:22","typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"671:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"id":5035,"mutability":"constant","name":"_BASIS_POINT_SCALE","nameLocation":"712:18:22","nodeType":"VariableDeclaration","scope":5337,"src":"687:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5033,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"316534","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:3:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"1e4"},"visibility":"private"},{"baseFunctions":[1532],"body":{"id":5059,"nodeType":"Block","src":"948:128:22","statements":[{"assignments":[5045],"declarations":[{"constant":false,"id":5045,"mutability":"mutable","name":"fee","nameLocation":"967:3:22","nodeType":"VariableDeclaration","scope":5059,"src":"959:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"959:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5051,"initialValue":{"arguments":[{"id":5047,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"985:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5048,"name":"_entryFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"993:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"993:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5046,"name":"_feeOnTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"973:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"973:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"959:57:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5054,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"1055:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5055,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"1064:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1055:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5052,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1034:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC4626Fees_$5337_$","typeString":"type(contract super ERC4626Fees)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1040:14:22","memberName":"previewDeposit","nodeType":"MemberAccess","referencedDeclaration":1532,"src":"1034:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1034:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5043,"id":5058,"nodeType":"Return","src":"1027:41:22"}]},"documentation":{"id":5036,"nodeType":"StructuredDocumentation","src":"776:79:22","text":"@dev Preview taking an entry fee on deposit. See {IERC4626-previewDeposit}."},"functionSelector":"ef8b30f7","id":5060,"implemented":true,"kind":"function","modifiers":[],"name":"previewDeposit","nameLocation":"870:14:22","nodeType":"FunctionDefinition","overrides":{"id":5040,"nodeType":"OverrideSpecifier","overrides":[],"src":"921:8:22"},"parameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"assets","nameLocation":"893:6:22","nodeType":"VariableDeclaration","scope":5060,"src":"885:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"884:16:22"},"returnParameters":{"id":5043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5060,"src":"939:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"938:9:22"},"scope":5337,"src":"861:215:22","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1548],"body":{"id":5084,"nodeType":"Block","src":"1247:129:22","statements":[{"assignments":[5070],"declarations":[{"constant":false,"id":5070,"mutability":"mutable","name":"assets","nameLocation":"1266:6:22","nodeType":"VariableDeclaration","scope":5084,"src":"1258:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1258:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5075,"initialValue":{"arguments":[{"id":5073,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5063,"src":"1293:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5071,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1275:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC4626Fees_$5337_$","typeString":"type(contract super ERC4626Fees)"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1281:11:22","memberName":"previewMint","nodeType":"MemberAccess","referencedDeclaration":1548,"src":"1275:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1275:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1258:42:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5076,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"1318:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"id":5078,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"1337:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5079,"name":"_entryFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"1345:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1345:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5077,"name":"_feeOnRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"1327:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1327:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1318:50:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5068,"id":5083,"nodeType":"Return","src":"1311:57:22"}]},"documentation":{"id":5061,"nodeType":"StructuredDocumentation","src":"1084:73:22","text":"@dev Preview adding an entry fee on mint. See {IERC4626-previewMint}."},"functionSelector":"b3d7f6b9","id":5085,"implemented":true,"kind":"function","modifiers":[],"name":"previewMint","nameLocation":"1172:11:22","nodeType":"FunctionDefinition","overrides":{"id":5065,"nodeType":"OverrideSpecifier","overrides":[],"src":"1220:8:22"},"parameters":{"id":5064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5063,"mutability":"mutable","name":"shares","nameLocation":"1192:6:22","nodeType":"VariableDeclaration","scope":5085,"src":"1184:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1184:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1183:16:22"},"returnParameters":{"id":5068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5085,"src":"1238:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1238:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1237:9:22"},"scope":5337,"src":"1163:213:22","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1564],"body":{"id":5109,"nodeType":"Block","src":"1558:126:22","statements":[{"assignments":[5095],"declarations":[{"constant":false,"id":5095,"mutability":"mutable","name":"fee","nameLocation":"1577:3:22","nodeType":"VariableDeclaration","scope":5109,"src":"1569:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1569:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5101,"initialValue":{"arguments":[{"id":5097,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"1593:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5098,"name":"_exitFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"1601:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1601:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5096,"name":"_feeOnRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"1583:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1583:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1569:54:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5104,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5088,"src":"1663:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5105,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"1672:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1663:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5102,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1641:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC4626Fees_$5337_$","typeString":"type(contract super ERC4626Fees)"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1647:15:22","memberName":"previewWithdraw","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"1641:21:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1641:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5093,"id":5108,"nodeType":"Return","src":"1634:42:22"}]},"documentation":{"id":5086,"nodeType":"StructuredDocumentation","src":"1384:80:22","text":"@dev Preview adding an exit fee on withdraw. See {IERC4626-previewWithdraw}."},"functionSelector":"0a28a477","id":5110,"implemented":true,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"1479:15:22","nodeType":"FunctionDefinition","overrides":{"id":5090,"nodeType":"OverrideSpecifier","overrides":[],"src":"1531:8:22"},"parameters":{"id":5089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5088,"mutability":"mutable","name":"assets","nameLocation":"1503:6:22","nodeType":"VariableDeclaration","scope":5110,"src":"1495:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5087,"name":"uint256","nodeType":"ElementaryTypeName","src":"1495:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1494:16:22"},"returnParameters":{"id":5093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5110,"src":"1549:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5091,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:9:22"},"scope":5337,"src":"1470:214:22","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1580],"body":{"id":5134,"nodeType":"Block","src":"1860:132:22","statements":[{"assignments":[5120],"declarations":[{"constant":false,"id":5120,"mutability":"mutable","name":"assets","nameLocation":"1879:6:22","nodeType":"VariableDeclaration","scope":5134,"src":"1871:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1871:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5125,"initialValue":{"arguments":[{"id":5123,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"1908:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5121,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1888:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC4626Fees_$5337_$","typeString":"type(contract super ERC4626Fees)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1894:13:22","memberName":"previewRedeem","nodeType":"MemberAccess","referencedDeclaration":1580,"src":"1888:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:27:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1871:44:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"1933:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5128,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"1954:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5129,"name":"_exitFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"1962:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1962:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5127,"name":"_feeOnTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"1942:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1942:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1933:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5118,"id":5133,"nodeType":"Return","src":"1926:58:22"}]},"documentation":{"id":5111,"nodeType":"StructuredDocumentation","src":"1692:76:22","text":"@dev Preview taking an exit fee on redeem. See {IERC4626-previewRedeem}."},"functionSelector":"4cdad506","id":5135,"implemented":true,"kind":"function","modifiers":[],"name":"previewRedeem","nameLocation":"1783:13:22","nodeType":"FunctionDefinition","overrides":{"id":5115,"nodeType":"OverrideSpecifier","overrides":[],"src":"1833:8:22"},"parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5113,"mutability":"mutable","name":"shares","nameLocation":"1805:6:22","nodeType":"VariableDeclaration","scope":5135,"src":"1797:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1796:16:22"},"returnParameters":{"id":5118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5135,"src":"1851:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1850:9:22"},"scope":5337,"src":"1774:218:22","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1855],"body":{"id":5193,"nodeType":"Block","src":"2189:325:22","statements":[{"assignments":[5149],"declarations":[{"constant":false,"id":5149,"mutability":"mutable","name":"fee","nameLocation":"2208:3:22","nodeType":"VariableDeclaration","scope":5193,"src":"2200:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2200:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5155,"initialValue":{"arguments":[{"id":5151,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"2226:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5152,"name":"_entryFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"2234:20:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5150,"name":"_feeOnTotal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5336,"src":"2214:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2214:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2200:57:22"},{"assignments":[5157],"declarations":[{"constant":false,"id":5157,"mutability":"mutable","name":"recipient","nameLocation":"2276:9:22","nodeType":"VariableDeclaration","scope":5193,"src":"2268:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5156,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5160,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5158,"name":"_entryFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5283,"src":"2288:18:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2288:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2268:40:22"},{"expression":{"arguments":[{"id":5164,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5138,"src":"2336:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5165,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5140,"src":"2344:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5166,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"2354:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5167,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"2362:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5161,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC4626Fees_$5337_$","typeString":"type(contract super ERC4626Fees)"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2327:8:22","memberName":"_deposit","nodeType":"MemberAccess","referencedDeclaration":1855,"src":"2321:14:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":5168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2321:48:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5169,"nodeType":"ExpressionStatement","src":"2321:48:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"2386:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2392:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2386:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5173,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"2397:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":5176,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2418:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}],"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2410:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5174,"name":"address","nodeType":"ElementaryTypeName","src":"2410:7:22","typeDescriptions":{}}},"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2410:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2397:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2386:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5192,"nodeType":"IfStatement","src":"2382:125:22","trueBody":{"id":5191,"nodeType":"Block","src":"2425:82:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5184,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"2470:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2470:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5183,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"2463:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1072_$","typeString":"type(contract IERC20)"}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2463:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":5187,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"2480:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5188,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"2491:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5180,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"2440:9:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2263_$","typeString":"type(library SafeERC20)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:22","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2023,"src":"2440:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2440:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5190,"nodeType":"ExpressionStatement","src":"2440:55:22"}]}}]},"documentation":{"id":5136,"nodeType":"StructuredDocumentation","src":"2000:73:22","text":"@dev Send entry fee to {_entryFeeRecipient}. See {IERC4626-_deposit}."},"id":5194,"implemented":true,"kind":"function","modifiers":[],"name":"_deposit","nameLocation":"2088:8:22","nodeType":"FunctionDefinition","overrides":{"id":5146,"nodeType":"OverrideSpecifier","overrides":[],"src":"2180:8:22"},"parameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5138,"mutability":"mutable","name":"caller","nameLocation":"2105:6:22","nodeType":"VariableDeclaration","scope":5194,"src":"2097:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5137,"name":"address","nodeType":"ElementaryTypeName","src":"2097:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5140,"mutability":"mutable","name":"receiver","nameLocation":"2121:8:22","nodeType":"VariableDeclaration","scope":5194,"src":"2113:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5139,"name":"address","nodeType":"ElementaryTypeName","src":"2113:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5142,"mutability":"mutable","name":"assets","nameLocation":"2139:6:22","nodeType":"VariableDeclaration","scope":5194,"src":"2131:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2131:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5144,"mutability":"mutable","name":"shares","nameLocation":"2155:6:22","nodeType":"VariableDeclaration","scope":5194,"src":"2147:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2147:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2096:66:22"},"returnParameters":{"id":5147,"nodeType":"ParameterList","parameters":[],"src":"2189:0:22"},"scope":5337,"src":"2079:435:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1902],"body":{"id":5255,"nodeType":"Block","src":"2777:329:22","statements":[{"assignments":[5210],"declarations":[{"constant":false,"id":5210,"mutability":"mutable","name":"fee","nameLocation":"2796:3:22","nodeType":"VariableDeclaration","scope":5255,"src":"2788:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"2788:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5216,"initialValue":{"arguments":[{"id":5212,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"2812:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5213,"name":"_exitFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5272,"src":"2820:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2820:21:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5211,"name":"_feeOnRaw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"2802:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2802:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2788:54:22"},{"assignments":[5218],"declarations":[{"constant":false,"id":5218,"mutability":"mutable","name":"recipient","nameLocation":"2861:9:22","nodeType":"VariableDeclaration","scope":5255,"src":"2853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5217,"name":"address","nodeType":"ElementaryTypeName","src":"2853:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5221,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":5219,"name":"_exitFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5294,"src":"2873:17:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2873:19:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2853:39:22"},{"expression":{"arguments":[{"id":5225,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5197,"src":"2921:6:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5226,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5199,"src":"2929:8:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5227,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5201,"src":"2939:5:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5228,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5203,"src":"2946:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5229,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"2954:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5222,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2905:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC4626Fees_$5337_$","typeString":"type(contract super ERC4626Fees)"}},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2911:9:22","memberName":"_withdraw","nodeType":"MemberAccess","referencedDeclaration":1902,"src":"2905:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2905:56:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5231,"nodeType":"ExpressionStatement","src":"2905:56:22"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5232,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"2978:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2984:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2978:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5235,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"2989:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":5238,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3010:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}],"id":5237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3002:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5236,"name":"address","nodeType":"ElementaryTypeName","src":"3002:7:22","typeDescriptions":{}}},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3002:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2989:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2978:37:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5254,"nodeType":"IfStatement","src":"2974:125:22","trueBody":{"id":5253,"nodeType":"Block","src":"3017:82:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5246,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"3062:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3062:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5245,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"3055:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1072_$","typeString":"type(contract IERC20)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},{"id":5249,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"3072:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5250,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"3083:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5242,"name":"SafeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"3032:9:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeERC20_$2263_$","typeString":"type(library SafeERC20)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3042:12:22","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":2023,"src":"3032:22:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1072_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3032:55:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5252,"nodeType":"ExpressionStatement","src":"3032:55:22"}]}}]},"documentation":{"id":5195,"nodeType":"StructuredDocumentation","src":"2522:71:22","text":"@dev Send exit fee to {_exitFeeRecipient}. See {IERC4626-_deposit}."},"id":5256,"implemented":true,"kind":"function","modifiers":[],"name":"_withdraw","nameLocation":"2608:9:22","nodeType":"FunctionDefinition","overrides":{"id":5207,"nodeType":"OverrideSpecifier","overrides":[],"src":"2768:8:22"},"parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"caller","nameLocation":"2636:6:22","nodeType":"VariableDeclaration","scope":5256,"src":"2628:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5196,"name":"address","nodeType":"ElementaryTypeName","src":"2628:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5199,"mutability":"mutable","name":"receiver","nameLocation":"2661:8:22","nodeType":"VariableDeclaration","scope":5256,"src":"2653:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5198,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"owner","nameLocation":"2688:5:22","nodeType":"VariableDeclaration","scope":5256,"src":"2680:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5200,"name":"address","nodeType":"ElementaryTypeName","src":"2680:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5203,"mutability":"mutable","name":"assets","nameLocation":"2712:6:22","nodeType":"VariableDeclaration","scope":5256,"src":"2704:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5205,"mutability":"mutable","name":"shares","nameLocation":"2737:6:22","nodeType":"VariableDeclaration","scope":5256,"src":"2729:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2729:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2617:133:22"},"returnParameters":{"id":5208,"nodeType":"ParameterList","parameters":[],"src":"2777:0:22"},"scope":5337,"src":"2599:507:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":5263,"nodeType":"Block","src":"3222:45:22","statements":[{"expression":{"id":5261,"name":"entryFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"3240:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5260,"id":5262,"nodeType":"Return","src":"3233:26:22"}]},"id":5264,"implemented":true,"kind":"function","modifiers":[],"name":"_entryFeeBasisPoints","nameLocation":"3159:20:22","nodeType":"FunctionDefinition","parameters":{"id":5257,"nodeType":"ParameterList","parameters":[],"src":"3179:2:22"},"returnParameters":{"id":5260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5264,"src":"3213:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5258,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3212:9:22"},"scope":5337,"src":"3150:117:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"3344:44:22","statements":[{"expression":{"id":5269,"name":"exitFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"3362:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5268,"id":5270,"nodeType":"Return","src":"3355:25:22"}]},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"_exitFeeBasisPoints","nameLocation":"3282:19:22","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[],"src":"3301:2:22"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"3335:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3335:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3334:9:22"},"scope":5337,"src":"3273:115:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5282,"nodeType":"Block","src":"3466:39:22","statements":[{"expression":{"arguments":[{"id":5279,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3492:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}],"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3484:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5277,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:22","typeDescriptions":{}}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3484:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5276,"id":5281,"nodeType":"Return","src":"3477:20:22"}]},"id":5283,"implemented":true,"kind":"function","modifiers":[],"name":"_entryFeeRecipient","nameLocation":"3405:18:22","nodeType":"FunctionDefinition","parameters":{"id":5273,"nodeType":"ParameterList","parameters":[],"src":"3423:2:22"},"returnParameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5283,"src":"3457:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5274,"name":"address","nodeType":"ElementaryTypeName","src":"3457:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3456:9:22"},"scope":5337,"src":"3396:109:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5293,"nodeType":"Block","src":"3580:39:22","statements":[{"expression":{"arguments":[{"id":5290,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3606:4:22","typeDescriptions":{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC4626Fees_$5337","typeString":"contract ERC4626Fees"}],"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3598:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5288,"name":"address","nodeType":"ElementaryTypeName","src":"3598:7:22","typeDescriptions":{}}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3598:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5287,"id":5292,"nodeType":"Return","src":"3591:20:22"}]},"id":5294,"implemented":true,"kind":"function","modifiers":[],"name":"_exitFeeRecipient","nameLocation":"3520:17:22","nodeType":"FunctionDefinition","parameters":{"id":5284,"nodeType":"ParameterList","parameters":[],"src":"3537:2:22"},"returnParameters":{"id":5287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5294,"src":"3571:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5285,"name":"address","nodeType":"ElementaryTypeName","src":"3571:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3570:9:22"},"scope":5337,"src":"3511:108:22","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":5313,"nodeType":"Block","src":"3932:95:22","statements":[{"expression":{"arguments":[{"id":5306,"name":"feeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5299,"src":"3964:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5307,"name":"_BASIS_POINT_SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"3980:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":5308,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"4000:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4005:8:22","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"4000:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4014:4:22","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"4000:18:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"expression":{"id":5304,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5297,"src":"3950:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3957:6:22","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"3950:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3950:69:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5303,"id":5312,"nodeType":"Return","src":"3943:76:22"}]},"documentation":{"id":5295,"nodeType":"StructuredDocumentation","src":"3660:176:22","text":"@dev Calculates the fees that should be added to an amount `assets` that does not already include fees.\n Used in {IERC4626-mint} and {IERC4626-withdraw} operations."},"id":5314,"implemented":true,"kind":"function","modifiers":[],"name":"_feeOnRaw","nameLocation":"3851:9:22","nodeType":"FunctionDefinition","parameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5297,"mutability":"mutable","name":"assets","nameLocation":"3869:6:22","nodeType":"VariableDeclaration","scope":5314,"src":"3861:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5296,"name":"uint256","nodeType":"ElementaryTypeName","src":"3861:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5299,"mutability":"mutable","name":"feeBasisPoints","nameLocation":"3885:14:22","nodeType":"VariableDeclaration","scope":5314,"src":"3877:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5298,"name":"uint256","nodeType":"ElementaryTypeName","src":"3877:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3860:40:22"},"returnParameters":{"id":5303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5314,"src":"3923:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3923:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3922:9:22"},"scope":5337,"src":"3842:185:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5335,"nodeType":"Block","src":"4285:112:22","statements":[{"expression":{"arguments":[{"id":5326,"name":"feeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"4317:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5327,"name":"feeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5319,"src":"4333:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5328,"name":"_BASIS_POINT_SCALE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5035,"src":"4350:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4333:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":5330,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4891,"src":"4370:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4891_$","typeString":"type(library Math)"}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4375:8:22","memberName":"Rounding","nodeType":"MemberAccess","referencedDeclaration":3848,"src":"4370:13:22","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3848_$","typeString":"type(enum Math.Rounding)"}},"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4384:4:22","memberName":"Ceil","nodeType":"MemberAccess","referencedDeclaration":3845,"src":"4370:18:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Rounding_$3848","typeString":"enum Math.Rounding"}],"expression":{"id":5324,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5317,"src":"4303:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4310:6:22","memberName":"mulDiv","nodeType":"MemberAccess","referencedDeclaration":4268,"src":"4303:13:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_Rounding_$3848_$returns$_t_uint256_$attached_to$_t_uint256_$","typeString":"function (uint256,uint256,uint256,enum Math.Rounding) pure returns (uint256)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4303:86:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5323,"id":5334,"nodeType":"Return","src":"4296:93:22"}]},"documentation":{"id":5315,"nodeType":"StructuredDocumentation","src":"4035:152:22","text":"@dev Calculates the fee part of an amount `assets` that already includes fees.\n Used in {IERC4626-deposit} and {IERC4626-redeem} operations."},"id":5336,"implemented":true,"kind":"function","modifiers":[],"name":"_feeOnTotal","nameLocation":"4202:11:22","nodeType":"FunctionDefinition","parameters":{"id":5320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5317,"mutability":"mutable","name":"assets","nameLocation":"4222:6:22","nodeType":"VariableDeclaration","scope":5336,"src":"4214:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4214:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5319,"mutability":"mutable","name":"feeBasisPoints","nameLocation":"4238:14:22","nodeType":"VariableDeclaration","scope":5336,"src":"4230:22:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5318,"name":"uint256","nodeType":"ElementaryTypeName","src":"4230:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4213:40:22"},"returnParameters":{"id":5323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5336,"src":"4276:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5321,"name":"uint256","nodeType":"ElementaryTypeName","src":"4276:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4275:9:22"},"scope":5337,"src":"4193:204:22","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5338,"src":"311:4097:22","usedErrors":[13,18,354,359,364,373,378,383,1260,1269,1278,1287,1990,2271,2276,2279,3843],"usedEvents":[24,168,180,1006,1015]}],"src":"35:4373:22"},"id":22},"contracts/Spark.sol":{"ast":{"absolutePath":"contracts/Spark.sol","exportedSymbols":{"Context":[2538],"ECDSA":[3536],"EIP712":[3763],"ERC20":[994],"ERC20Permit":[1226],"IERC20":[1072],"IERC20Errors":[384],"IERC20Metadata":[1937],"IERC20Permit":[1973],"Nonces":[2606],"Ownable":[147],"Spark":[5379]},"id":5380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5339,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5380,"sourceUnit":995,"src":"61:55:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5380,"sourceUnit":148,"src":"118:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":5342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5380,"sourceUnit":1227,"src":"172:72:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5343,"name":"ERC20","nameLocations":["266:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"266:5:23"},"id":5344,"nodeType":"InheritanceSpecifier","src":"266:5:23"},{"baseName":{"id":5345,"name":"Ownable","nameLocations":["273:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"273:7:23"},"id":5346,"nodeType":"InheritanceSpecifier","src":"273:7:23"},{"baseName":{"id":5347,"name":"ERC20Permit","nameLocations":["282:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"282:11:23"},"id":5348,"nodeType":"InheritanceSpecifier","src":"282:11:23"}],"canonicalName":"Spark","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5379,"linearizedBaseContracts":[5379,1226,2606,3763,342,1973,147,994,384,1937,1072,2538],"name":"Spark","nameLocation":"257:5:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":5362,"nodeType":"Block","src":"411:2:23","statements":[]},"id":5363,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"537061726b","id":5351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"330:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b337670ca37b5e91ab3ce7783cd0702c1d7789c1a46c1e78e3179d15add3e2","typeString":"literal_string \"Spark\""},"value":"Spark"},{"hexValue":"73444149","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"339:6:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_8558abcf3a1475989c7f6921fc94c310e4c1fe8c148ed994d5b089c5af3d17b3","typeString":"literal_string \"sDAI\""},"value":"sDAI"}],"id":5353,"kind":"baseConstructorSpecifier","modifierName":{"id":5350,"name":"ERC20","nameLocations":["324:5:23"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"324:5:23"},"nodeType":"ModifierInvocation","src":"324:22:23"},{"arguments":[{"expression":{"id":5355,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"364:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"368:6:23","memberName":"sender","nodeType":"MemberAccess","src":"364:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5357,"kind":"baseConstructorSpecifier","modifierName":{"id":5354,"name":"Ownable","nameLocations":["356:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"356:7:23"},"nodeType":"ModifierInvocation","src":"356:19:23"},{"arguments":[{"hexValue":"537061726b","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"397:7:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8b337670ca37b5e91ab3ce7783cd0702c1d7789c1a46c1e78e3179d15add3e2","typeString":"literal_string \"Spark\""},"value":"Spark"}],"id":5360,"kind":"baseConstructorSpecifier","modifierName":{"id":5358,"name":"ERC20Permit","nameLocations":["385:11:23"],"nodeType":"IdentifierPath","referencedDeclaration":1226,"src":"385:11:23"},"nodeType":"ModifierInvocation","src":"385:20:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5349,"nodeType":"ParameterList","parameters":[],"src":"312:2:23"},"returnParameters":{"id":5361,"nodeType":"ParameterList","parameters":[],"src":"411:0:23"},"scope":5379,"src":"301:112:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5377,"nodeType":"Block","src":"480:36:23","statements":[{"expression":{"arguments":[{"id":5373,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"497:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5374,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5367,"src":"501:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"491:5:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"491:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5376,"nodeType":"ExpressionStatement","src":"491:17:23"}]},"functionSelector":"40c10f19","id":5378,"implemented":true,"kind":"function","modifiers":[{"id":5370,"kind":"modifierInvocation","modifierName":{"id":5369,"name":"onlyOwner","nameLocations":["470:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"470:9:23"},"nodeType":"ModifierInvocation","src":"470:9:23"}],"name":"mint","nameLocation":"430:4:23","nodeType":"FunctionDefinition","parameters":{"id":5368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"to","nameLocation":"443:2:23","nodeType":"VariableDeclaration","scope":5378,"src":"435:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5364,"name":"address","nodeType":"ElementaryTypeName","src":"435:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5367,"mutability":"mutable","name":"amount","nameLocation":"455:6:23","nodeType":"VariableDeclaration","scope":5378,"src":"447:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5366,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"434:28:23"},"returnParameters":{"id":5371,"nodeType":"ParameterList","parameters":[],"src":"480:0:23"},"scope":5379,"src":"421:95:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5380,"src":"248:271:23","usedErrors":[13,18,354,359,364,373,378,383,1103,1110,2548,2620,2622,3199,3204,3209],"usedEvents":[24,322,1006,1015]}],"src":"33:486:23"},"id":23},"contracts/Vault.sol":{"ast":{"absolutePath":"contracts/Vault.sol","exportedSymbols":{"Context":[2538],"ERC20":[994],"ERC4626":[1911],"ERC4626Fees":[5337],"IERC20":[1072],"IERC20Metadata":[1937],"IERC4626":[317],"Math":[4891],"Ownable":[147],"SafeERC20":[2263],"Vault":[5731]},"id":5732,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5381,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"33:24:24"},{"absolutePath":"contracts/ERC4626Fees.sol","file":"./ERC4626Fees.sol","id":5382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5732,"sourceUnit":5338,"src":"59:27:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5383,"name":"ERC4626Fees","nameLocations":["106:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":5337,"src":"106:11:24"},"id":5384,"nodeType":"InheritanceSpecifier","src":"106:11:24"}],"canonicalName":"Vault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5731,"linearizedBaseContracts":[5731,5337,147,1911,317,994,384,1937,1072,2538],"name":"Vault","nameLocation":"97:5:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"40f02ab6","id":5386,"mutability":"mutable","name":"stakeDuration","nameLocation":"143:13:24","nodeType":"VariableDeclaration","scope":5731,"src":"129:27:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5385,"name":"uint32","nodeType":"ElementaryTypeName","src":"129:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"body":{"id":5413,"nodeType":"Block","src":"359:42:24","statements":[{"expression":{"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5409,"name":"stakeDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"369:13:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5410,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5395,"src":"385:9:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"369:25:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5412,"nodeType":"ExpressionStatement","src":"369:25:24"}]},"id":5414,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5398,"name":"_entryBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"272:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5399,"name":"_exitBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"290:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5400,"kind":"baseConstructorSpecifier","modifierName":{"id":5397,"name":"ERC4626Fees","nameLocations":["260:11:24"],"nodeType":"IdentifierPath","referencedDeclaration":5337,"src":"260:11:24"},"nodeType":"ModifierInvocation","src":"260:47:24"},{"arguments":[{"id":5402,"name":"_asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"316:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}}],"id":5403,"kind":"baseConstructorSpecifier","modifierName":{"id":5401,"name":"ERC4626","nameLocations":["308:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":1911,"src":"308:7:24"},"nodeType":"ModifierInvocation","src":"308:15:24"},{"arguments":[{"hexValue":"5661756c74204f6365616e20546f6b656e","id":5405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"330:19:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c194f983eaaf69dc46bb463688e3f94b760faeefe757ab7fb632d9c13bd71a0","typeString":"literal_string \"Vault Ocean Token\""},"value":"Vault Ocean Token"},{"hexValue":"764f4354","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"351:6:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c35533297bf8e6a12d742b4d2137a26ef622dbb76713662648239c21fc9900a6","typeString":"literal_string \"vOCT\""},"value":"vOCT"}],"id":5407,"kind":"baseConstructorSpecifier","modifierName":{"id":5404,"name":"ERC20","nameLocations":["324:5:24"],"nodeType":"IdentifierPath","referencedDeclaration":994,"src":"324:5:24"},"nodeType":"ModifierInvocation","src":"324:34:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"_asset","nameLocation":"182:6:24","nodeType":"VariableDeclaration","scope":5414,"src":"175:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"},"typeName":{"id":5388,"nodeType":"UserDefinedTypeName","pathNode":{"id":5387,"name":"IERC20","nameLocations":["175:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1072,"src":"175:6:24"},"referencedDeclaration":1072,"src":"175:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1072","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5391,"mutability":"mutable","name":"_entryBasisPoints","nameLocation":"198:17:24","nodeType":"VariableDeclaration","scope":5414,"src":"190:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5390,"name":"uint256","nodeType":"ElementaryTypeName","src":"190:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5393,"mutability":"mutable","name":"_exitBasisPoints","nameLocation":"224:16:24","nodeType":"VariableDeclaration","scope":5414,"src":"216:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"216:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5395,"mutability":"mutable","name":"_duration","nameLocation":"249:9:24","nodeType":"VariableDeclaration","scope":5414,"src":"242:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5394,"name":"uint32","nodeType":"ElementaryTypeName","src":"242:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"174:85:24"},"returnParameters":{"id":5408,"nodeType":"ParameterList","parameters":[],"src":"359:0:24"},"scope":5731,"src":"163:238:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"functionSelector":"d0405421","id":5418,"mutability":"mutable","name":"stakeTimeEpochMapping","nameLocation":"454:21:24","nodeType":"VariableDeclaration","scope":5731,"src":"407:68:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"},"typeName":{"id":5417,"keyName":"lender","keyNameLocation":"423:6:24","keyType":{"id":5415,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"407:39:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"},"valueName":"epoch","valueNameLocation":"440:5:24","valueType":{"id":5416,"name":"uint32","nodeType":"ElementaryTypeName","src":"433:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}},"visibility":"public"},{"body":{"id":5430,"nodeType":"Block","src":"541:74:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5423,"name":"stakeTimeEpochMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"558:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"}},"id":5426,"indexExpression":{"expression":{"id":5424,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"580:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"584:6:24","memberName":"sender","nodeType":"MemberAccess","src":"580:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"558:33:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5427,"name":"stakeDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"594:13:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"558:49:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5422,"id":5429,"nodeType":"Return","src":"551:56:24"}]},"functionSelector":"e97add57","id":5431,"implemented":true,"kind":"function","modifiers":[],"name":"getWithdrawEpoch","nameLocation":"495:16:24","nodeType":"FunctionDefinition","parameters":{"id":5419,"nodeType":"ParameterList","parameters":[],"src":"511:2:24"},"returnParameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5431,"src":"534:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5420,"name":"uint32","nodeType":"ElementaryTypeName","src":"534:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"533:8:24"},"scope":5731,"src":"486:129:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5442,"nodeType":"Block","src":"676:42:24","statements":[{"expression":{"id":5440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5438,"name":"stakeDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5386,"src":"686:13:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5439,"name":"_duration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"702:9:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"686:25:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5441,"nodeType":"ExpressionStatement","src":"686:25:24"}]},"functionSelector":"9732e720","id":5443,"implemented":true,"kind":"function","modifiers":[{"id":5436,"kind":"modifierInvocation","modifierName":{"id":5435,"name":"onlyOwner","nameLocations":["667:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"667:9:24"},"nodeType":"ModifierInvocation","src":"667:9:24"}],"name":"setDuration","nameLocation":"630:11:24","nodeType":"FunctionDefinition","parameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"_duration","nameLocation":"649:9:24","nodeType":"VariableDeclaration","scope":5443,"src":"642:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5432,"name":"uint32","nodeType":"ElementaryTypeName","src":"642:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"641:18:24"},"returnParameters":{"id":5437,"nodeType":"ParameterList","parameters":[],"src":"676:0:24"},"scope":5731,"src":"621:97:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5454,"nodeType":"Block","src":"788:47:24","statements":[{"expression":{"arguments":[{"expression":{"id":5450,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"812:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"818:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"812:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"805:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5448,"name":"uint32","nodeType":"ElementaryTypeName","src":"805:6:24","typeDescriptions":{}}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"805:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5447,"id":5453,"nodeType":"Return","src":"798:30:24"}]},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"_blockTimestamp","nameLocation":"733:15:24","nodeType":"FunctionDefinition","parameters":{"id":5444,"nodeType":"ParameterList","parameters":[],"src":"748:2:24"},"returnParameters":{"id":5447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5455,"src":"781:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5445,"name":"uint32","nodeType":"ElementaryTypeName","src":"781:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"780:8:24"},"scope":5731,"src":"724:111:24","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1624],"body":{"id":5515,"nodeType":"Block","src":"983:438:24","statements":[{"assignments":[5467],"declarations":[{"constant":false,"id":5467,"mutability":"mutable","name":"maxAssets","nameLocation":"1001:9:24","nodeType":"VariableDeclaration","scope":5515,"src":"993:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"993:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5471,"initialValue":{"arguments":[{"id":5469,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"1024:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5468,"name":"maxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"1013:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1013:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"993:40:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5472,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"1047:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5473,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"1056:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1047:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5482,"nodeType":"IfStatement","src":"1043:110:24","trueBody":{"id":5481,"nodeType":"Block","src":"1067:86:24","statements":[{"errorCall":{"arguments":[{"id":5476,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"1114:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5477,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"1124:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5478,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"1132:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5475,"name":"ERC4626ExceededMaxDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"1088:25:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1088:54:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5480,"nodeType":"RevertStatement","src":"1081:61:24"}]}},{"assignments":[5484],"declarations":[{"constant":false,"id":5484,"mutability":"mutable","name":"shares","nameLocation":"1171:6:24","nodeType":"VariableDeclaration","scope":5515,"src":"1163:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5488,"initialValue":{"arguments":[{"id":5486,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"1195:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5485,"name":"previewDeposit","nodeType":"Identifier","overloadedDeclarations":[5060],"referencedDeclaration":5060,"src":"1180:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1180:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1163:39:24"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5490,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"1221:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5492,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"1235:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5493,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"1245:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5494,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"1253:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5489,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[5194],"referencedDeclaration":5194,"src":"1212:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1212:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5496,"nodeType":"ExpressionStatement","src":"1212:48:24"},{"expression":{"arguments":[{"id":5498,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"1283:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5499,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"1291:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"name":"afterDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"1270:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5501,"nodeType":"ExpressionStatement","src":"1270:28:24"},{"expression":{"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5502,"name":"stakeTimeEpochMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"1331:21:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint32_$","typeString":"mapping(address => uint32)"}},"id":5505,"indexExpression":{"expression":{"id":5503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1353:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1357:6:24","memberName":"sender","nodeType":"MemberAccess","src":"1353:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1331:33:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5508,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1374:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1380:9:24","memberName":"timestamp","nodeType":"MemberAccess","src":"1374:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1367:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5506,"name":"uint32","nodeType":"ElementaryTypeName","src":"1367:6:24","typeDescriptions":{}}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1367:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1331:59:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":5512,"nodeType":"ExpressionStatement","src":"1331:59:24"},{"expression":{"id":5513,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"1408:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5465,"id":5514,"nodeType":"Return","src":"1401:13:24"}]},"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"849:35:24","text":"@dev See {IERC4626-deposit}. "},"functionSelector":"6e553f65","id":5516,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"898:7:24","nodeType":"FunctionDefinition","overrides":{"id":5462,"nodeType":"OverrideSpecifier","overrides":[],"src":"955:8:24"},"parameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"assets","nameLocation":"914:6:24","nodeType":"VariableDeclaration","scope":5516,"src":"906:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5460,"mutability":"mutable","name":"receiver","nameLocation":"930:8:24","nodeType":"VariableDeclaration","scope":5516,"src":"922:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5459,"name":"address","nodeType":"ElementaryTypeName","src":"922:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"905:34:24"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5516,"src":"974:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:9:24"},"scope":5731,"src":"889:532:24","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1668],"body":{"id":5565,"nodeType":"Block","src":"1778:337:24","statements":[{"assignments":[5528],"declarations":[{"constant":false,"id":5528,"mutability":"mutable","name":"maxShares","nameLocation":"1796:9:24","nodeType":"VariableDeclaration","scope":5565,"src":"1788:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5532,"initialValue":{"arguments":[{"id":5530,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"1816:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5529,"name":"maxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"1808:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1788:37:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"1839:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5534,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"1848:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1839:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5543,"nodeType":"IfStatement","src":"1835:107:24","trueBody":{"id":5542,"nodeType":"Block","src":"1859:83:24","statements":[{"errorCall":{"arguments":[{"id":5537,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"1903:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5538,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"1913:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5539,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"1921:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5536,"name":"ERC4626ExceededMaxMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"1880:22:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1880:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5541,"nodeType":"RevertStatement","src":"1873:58:24"}]}},{"assignments":[5545],"declarations":[{"constant":false,"id":5545,"mutability":"mutable","name":"assets","nameLocation":"1960:6:24","nodeType":"VariableDeclaration","scope":5565,"src":"1952:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1952:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5549,"initialValue":{"arguments":[{"id":5547,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"1981:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5546,"name":"previewMint","nodeType":"Identifier","overloadedDeclarations":[5085],"referencedDeclaration":5085,"src":"1969:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1969:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1952:36:24"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5551,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2007:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2007:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5553,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5521,"src":"2021:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5554,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2031:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5555,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"2039:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5550,"name":"_deposit","nodeType":"Identifier","overloadedDeclarations":[5194],"referencedDeclaration":5194,"src":"1998:8:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1998:48:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5557,"nodeType":"ExpressionStatement","src":"1998:48:24"},{"expression":{"arguments":[{"id":5559,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2069:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5560,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5519,"src":"2077:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5558,"name":"afterDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5722,"src":"2056:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5562,"nodeType":"ExpressionStatement","src":"2056:28:24"},{"expression":{"id":5563,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5545,"src":"2101:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5526,"id":5564,"nodeType":"Return","src":"2094:13:24"}]},"documentation":{"id":5517,"nodeType":"StructuredDocumentation","src":"1427:256:24","text":"@dev See {IERC4626-mint}.\n As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero.\n In this case, the shares will be minted without requiring any assets to be deposited."},"functionSelector":"94bf804d","id":5566,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1697:4:24","nodeType":"FunctionDefinition","overrides":{"id":5523,"nodeType":"OverrideSpecifier","overrides":[],"src":"1751:8:24"},"parameters":{"id":5522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"shares","nameLocation":"1710:6:24","nodeType":"VariableDeclaration","scope":5566,"src":"1702:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1702:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5521,"mutability":"mutable","name":"receiver","nameLocation":"1726:8:24","nodeType":"VariableDeclaration","scope":5566,"src":"1718:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5520,"name":"address","nodeType":"ElementaryTypeName","src":"1718:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1701:34:24"},"returnParameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5566,"src":"1769:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1769:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1768:9:24"},"scope":5731,"src":"1688:427:24","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1715],"body":{"id":5627,"nodeType":"Block","src":"2271:501:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5580,"name":"getWithdrawEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"2311:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2311:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5582,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"2333:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2333:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2311:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656c696769626c65207269676874206e6f772c2066756e64732063616e2062652072656465656d206166746572206c6f636b696e6720706572696f64","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2351:66:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9","typeString":"literal_string \"Not eligible right now, funds can be redeem after locking period\""},"value":"Not eligible right now, funds can be redeem after locking period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9","typeString":"literal_string \"Not eligible right now, funds can be redeem after locking period\""}],"id":5579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2303:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:115:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5587,"nodeType":"ExpressionStatement","src":"2303:115:24"},{"assignments":[5589],"declarations":[{"constant":false,"id":5589,"mutability":"mutable","name":"maxAssets","nameLocation":"2437:9:24","nodeType":"VariableDeclaration","scope":5627,"src":"2429:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"2429:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5593,"initialValue":{"arguments":[{"id":5591,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2461:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5590,"name":"maxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"2449:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2429:38:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2481:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5595,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"2490:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2481:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5604,"nodeType":"IfStatement","src":"2477:108:24","trueBody":{"id":5603,"nodeType":"Block","src":"2501:84:24","statements":[{"errorCall":{"arguments":[{"id":5598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2549:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5599,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2556:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5600,"name":"maxAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"2564:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5597,"name":"ERC4626ExceededMaxWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"2522:26:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":5601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2522:52:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5602,"nodeType":"RevertStatement","src":"2515:59:24"}]}},{"assignments":[5606],"declarations":[{"constant":false,"id":5606,"mutability":"mutable","name":"shares","nameLocation":"2603:6:24","nodeType":"VariableDeclaration","scope":5627,"src":"2595:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"2595:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5610,"initialValue":{"arguments":[{"id":5608,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2628:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5607,"name":"previewWithdraw","nodeType":"Identifier","overloadedDeclarations":[5110],"referencedDeclaration":5110,"src":"2612:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2612:23:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2595:40:24"},{"expression":{"arguments":[{"id":5612,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2660:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5613,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"2668:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5611,"name":"beforeWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"2645:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2645:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5615,"nodeType":"ExpressionStatement","src":"2645:30:24"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5617,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"2695:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2695:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5619,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"2709:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5620,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2719:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5621,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2726:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5622,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"2734:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5616,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[5256],"referencedDeclaration":5256,"src":"2685:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5624,"nodeType":"ExpressionStatement","src":"2685:56:24"},{"expression":{"id":5625,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"2759:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5578,"id":5626,"nodeType":"Return","src":"2752:13:24"}]},"documentation":{"id":5567,"nodeType":"StructuredDocumentation","src":"2121:36:24","text":"@dev See {IERC4626-withdraw}. "},"functionSelector":"b460af94","id":5628,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"2171:8:24","nodeType":"FunctionDefinition","overrides":{"id":5575,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:24"},"parameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"assets","nameLocation":"2188:6:24","nodeType":"VariableDeclaration","scope":5628,"src":"2180:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5568,"name":"uint256","nodeType":"ElementaryTypeName","src":"2180:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5571,"mutability":"mutable","name":"receiver","nameLocation":"2204:8:24","nodeType":"VariableDeclaration","scope":5628,"src":"2196:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5570,"name":"address","nodeType":"ElementaryTypeName","src":"2196:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5573,"mutability":"mutable","name":"owner","nameLocation":"2222:5:24","nodeType":"VariableDeclaration","scope":5628,"src":"2214:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5572,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2179:49:24"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5628,"src":"2262:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2261:9:24"},"scope":5731,"src":"2162:610:24","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1762],"body":{"id":5689,"nodeType":"Block","src":"2924:702:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5642,"name":"getWithdrawEpoch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5431,"src":"2964:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2964:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5644,"name":"_blockTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5455,"src":"2986:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint32_$","typeString":"function () view returns (uint32)"}},"id":5645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2964:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656c696769626c65207269676874206e6f772c2066756e64732063616e2062652072656465656d206166746572206c6f636b696e6720706572696f64","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3004:66:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9","typeString":"literal_string \"Not eligible right now, funds can be redeem after locking period\""},"value":"Not eligible right now, funds can be redeem after locking period"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9","typeString":"literal_string \"Not eligible right now, funds can be redeem after locking period\""}],"id":5641,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2956:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2956:115:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5649,"nodeType":"ExpressionStatement","src":"2956:115:24"},{"assignments":[5651],"declarations":[{"constant":false,"id":5651,"mutability":"mutable","name":"maxShares","nameLocation":"3297:9:24","nodeType":"VariableDeclaration","scope":5689,"src":"3289:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5650,"name":"uint256","nodeType":"ElementaryTypeName","src":"3289:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5655,"initialValue":{"arguments":[{"id":5653,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"3319:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5652,"name":"maxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"3309:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3309:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3289:36:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5656,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3339:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5657,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"3348:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3339:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5666,"nodeType":"IfStatement","src":"3335:106:24","trueBody":{"id":5665,"nodeType":"Block","src":"3359:82:24","statements":[{"errorCall":{"arguments":[{"id":5660,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"3405:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5661,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3412:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5662,"name":"maxShares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"3420:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5659,"name":"ERC4626ExceededMaxRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"3380:24:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3380:50:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5664,"nodeType":"RevertStatement","src":"3373:57:24"}]}},{"assignments":[5668],"declarations":[{"constant":false,"id":5668,"mutability":"mutable","name":"assets","nameLocation":"3459:6:24","nodeType":"VariableDeclaration","scope":5689,"src":"3451:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5672,"initialValue":{"arguments":[{"id":5670,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3482:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5669,"name":"previewRedeem","nodeType":"Identifier","overloadedDeclarations":[5135],"referencedDeclaration":5135,"src":"3468:13:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3468:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3451:38:24"},{"expression":{"arguments":[{"id":5674,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"3514:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5675,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3522:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5673,"name":"beforeWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"3499:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3499:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5677,"nodeType":"ExpressionStatement","src":"3499:30:24"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5679,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"3549:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3549:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5681,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5633,"src":"3563:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5682,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5635,"src":"3573:5:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5683,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"3580:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5684,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5631,"src":"3588:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5678,"name":"_withdraw","nodeType":"Identifier","overloadedDeclarations":[5256],"referencedDeclaration":5256,"src":"3539:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":5685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3539:56:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5686,"nodeType":"ExpressionStatement","src":"3539:56:24"},{"expression":{"id":5687,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"3613:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5640,"id":5688,"nodeType":"Return","src":"3606:13:24"}]},"documentation":{"id":5629,"nodeType":"StructuredDocumentation","src":"2778:34:24","text":"@dev See {IERC4626-redeem}. "},"functionSelector":"ba087652","id":5690,"implemented":true,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"2826:6:24","nodeType":"FunctionDefinition","overrides":{"id":5637,"nodeType":"OverrideSpecifier","overrides":[],"src":"2897:8:24"},"parameters":{"id":5636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"shares","nameLocation":"2841:6:24","nodeType":"VariableDeclaration","scope":5690,"src":"2833:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2833:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5633,"mutability":"mutable","name":"receiver","nameLocation":"2857:8:24","nodeType":"VariableDeclaration","scope":5690,"src":"2849:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5632,"name":"address","nodeType":"ElementaryTypeName","src":"2849:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5635,"mutability":"mutable","name":"owner","nameLocation":"2875:5:24","nodeType":"VariableDeclaration","scope":5690,"src":"2867:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5634,"name":"address","nodeType":"ElementaryTypeName","src":"2867:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2832:49:24"},"returnParameters":{"id":5640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5690,"src":"2915:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5638,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2914:9:24"},"scope":5731,"src":"2817:809:24","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":5701,"nodeType":"Block","src":"3686:43:24","statements":[{"expression":{"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5697,"name":"entryFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"3696:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5698,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"3718:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3696:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5700,"nodeType":"ExpressionStatement","src":"3696:26:24"}]},"functionSelector":"f7d978a2","id":5702,"implemented":true,"kind":"function","modifiers":[{"id":5695,"kind":"modifierInvocation","modifierName":{"id":5694,"name":"onlyOwner","nameLocations":["3676:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3676:9:24"},"nodeType":"ModifierInvocation","src":"3676:9:24"}],"name":"changeEntryFee","nameLocation":"3641:14:24","nodeType":"FunctionDefinition","parameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5692,"mutability":"mutable","name":"_fee","nameLocation":"3664:4:24","nodeType":"VariableDeclaration","scope":5702,"src":"3656:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"3656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3655:14:24"},"returnParameters":{"id":5696,"nodeType":"ParameterList","parameters":[],"src":"3686:0:24"},"scope":5731,"src":"3632:97:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5713,"nodeType":"Block","src":"3787:42:24","statements":[{"expression":{"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5709,"name":"exitFeeBasisPoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5009,"src":"3797:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5710,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"3818:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5712,"nodeType":"ExpressionStatement","src":"3797:25:24"}]},"functionSelector":"ef5ddcba","id":5714,"implemented":true,"kind":"function","modifiers":[{"id":5707,"kind":"modifierInvocation","modifierName":{"id":5706,"name":"onlyOwner","nameLocations":["3777:9:24"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3777:9:24"},"nodeType":"ModifierInvocation","src":"3777:9:24"}],"name":"changeExitFee","nameLocation":"3743:13:24","nodeType":"FunctionDefinition","parameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"_fee","nameLocation":"3765:4:24","nodeType":"VariableDeclaration","scope":5714,"src":"3757:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3756:14:24"},"returnParameters":{"id":5708,"nodeType":"ParameterList","parameters":[],"src":"3787:0:24"},"scope":5731,"src":"3734:95:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5721,"nodeType":"Block","src":"4173:137:24","statements":[]},"id":5722,"implemented":true,"kind":"function","modifiers":[],"name":"afterDeposit","nameLocation":"4111:12:24","nodeType":"FunctionDefinition","parameters":{"id":5719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5716,"mutability":"mutable","name":"assets","nameLocation":"4132:6:24","nodeType":"VariableDeclaration","scope":5722,"src":"4124:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5715,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5718,"mutability":"mutable","name":"shares","nameLocation":"4148:6:24","nodeType":"VariableDeclaration","scope":5722,"src":"4140:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5717,"name":"uint256","nodeType":"ElementaryTypeName","src":"4140:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4123:32:24"},"returnParameters":{"id":5720,"nodeType":"ParameterList","parameters":[],"src":"4173:0:24"},"scope":5731,"src":"4102:208:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":5729,"nodeType":"Block","src":"4393:143:24","statements":[]},"id":5730,"implemented":true,"kind":"function","modifiers":[],"name":"beforeWithdraw","nameLocation":"4329:14:24","nodeType":"FunctionDefinition","parameters":{"id":5727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"assets","nameLocation":"4352:6:24","nodeType":"VariableDeclaration","scope":5730,"src":"4344:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5726,"mutability":"mutable","name":"shares","nameLocation":"4368:6:24","nodeType":"VariableDeclaration","scope":5730,"src":"4360:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4360:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4343:32:24"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[],"src":"4393:0:24"},"scope":5731,"src":"4320:216:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":5732,"src":"88:4624:24","usedErrors":[13,18,354,359,364,373,378,383,1260,1269,1278,1287,1990,2271,2276,2279,3843],"usedEvents":[24,168,180,1006,1015]}],"src":"33:4679:24"},"id":24}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC4626.sol":{"IERC4626":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"assetTokenAddress","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"maxShares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"maxAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"totalManagedAssets","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"assetTokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalManagedAssets\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC4626 \\\"Tokenized Vault Standard\\\", as defined in https://eips.ethereum.org/EIPS/eip-4626[ERC-4626].\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"asset()\":{\"details\":\"Returns the address of the underlying token used for the Vault for accounting, depositing, and withdrawing. - MUST be an ERC-20 token contract. - MUST NOT revert.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"convertToAssets(uint256)\":{\"details\":\"Returns the amount of assets that the Vault would exchange for the amount of shares provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"convertToShares(uint256)\":{\"details\":\"Returns the amount of shares that the Vault would exchange for the amount of assets provided, in an ideal scenario where all the conditions are met. - MUST NOT be inclusive of any fees that are charged against assets in the Vault. - MUST NOT show any variations depending on the caller. - MUST NOT reflect slippage or other on-chain conditions, when performing the actual exchange. - MUST NOT revert. NOTE: This calculation MAY NOT reflect the \\u201cper-user\\u201d price-per-share, and instead should reflect the \\u201caverage-user\\u2019s\\u201d price-per-share, meaning what the average user should expect to see when exchanging to and from.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"deposit(uint256,address)\":{\"details\":\"Mints shares Vault shares to receiver by depositing exactly amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   deposit execution, and are accounted for during deposit. - MUST revert if all of assets cannot be deposited (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"maxDeposit(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be deposited into the Vault for the receiver, through a deposit call. - MUST return a limited value if receiver is subject to some deposit limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of assets that may be deposited. - MUST NOT revert.\"},\"maxMint(address)\":{\"details\":\"Returns the maximum amount of the Vault shares that can be minted for the receiver, through a mint call. - MUST return a limited value if receiver is subject to some mint limit. - MUST return 2 ** 256 - 1 if there is no limit on the maximum amount of shares that may be minted. - MUST NOT revert.\"},\"maxRedeem(address)\":{\"details\":\"Returns the maximum amount of Vault shares that can be redeemed from the owner balance in the Vault, through a redeem call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST return balanceOf(owner) if owner is not subject to any withdrawal limit or timelock. - MUST NOT revert.\"},\"maxWithdraw(address)\":{\"details\":\"Returns the maximum amount of the underlying asset that can be withdrawn from the owner balance in the Vault, through a withdraw call. - MUST return a limited value if owner is subject to some withdrawal limit or timelock. - MUST NOT revert.\"},\"mint(uint256,address)\":{\"details\":\"Mints exactly shares Vault shares to receiver by depositing amount of underlying tokens. - MUST emit the Deposit event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the mint   execution, and are accounted for during mint. - MUST revert if all of shares cannot be minted (due to deposit limit being reached, slippage, the user not   approving enough underlying tokens to the Vault contract, etc). NOTE: most implementations will require pre-approval of the Vault with the Vault\\u2019s underlying asset token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their deposit at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of Vault shares that would be minted in a deposit   call in the same transaction. I.e. deposit should return the same or more shares as previewDeposit if called   in the same transaction. - MUST NOT account for deposit limits like those returned from maxDeposit and should always act as though the   deposit would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewDeposit SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"previewMint(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their mint at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of assets that would be deposited in a mint call   in the same transaction. I.e. mint should return the same or fewer assets as previewMint if called in the   same transaction. - MUST NOT account for mint limits like those returned from maxMint and should always act as though the mint   would be accepted, regardless if the user has enough tokens approved, etc. - MUST be inclusive of deposit fees. Integrators should be aware of the existence of deposit fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewMint SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by minting.\"},\"previewRedeem(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their redeemption at the current block, given current on-chain conditions. - MUST return as close to and no more than the exact amount of assets that would be withdrawn in a redeem call   in the same transaction. I.e. redeem should return the same or more assets as previewRedeem if called in the   same transaction. - MUST NOT account for redemption limits like those returned from maxRedeem and should always act as though the   redemption would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToAssets and previewRedeem SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by redeeming.\"},\"previewWithdraw(uint256)\":{\"details\":\"Allows an on-chain or off-chain user to simulate the effects of their withdrawal at the current block, given current on-chain conditions. - MUST return as close to and no fewer than the exact amount of Vault shares that would be burned in a withdraw   call in the same transaction. I.e. withdraw should return the same or fewer shares as previewWithdraw if   called   in the same transaction. - MUST NOT account for withdrawal limits like those returned from maxWithdraw and should always act as though   the withdrawal would be accepted, regardless if the user has enough shares, etc. - MUST be inclusive of withdrawal fees. Integrators should be aware of the existence of withdrawal fees. - MUST NOT revert. NOTE: any unfavorable discrepancy between convertToShares and previewWithdraw SHOULD be considered slippage in share price or some other type of condition, meaning the depositor will lose assets by depositing.\"},\"redeem(uint256,address,address)\":{\"details\":\"Burns exactly shares from owner and sends assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   redeem execution, and are accounted for during redeem. - MUST revert if all of shares cannot be redeemed (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). NOTE: some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalAssets()\":{\"details\":\"Returns the total amount of the underlying asset that is \\u201cmanaged\\u201d by Vault. - SHOULD include any compounding that occurs from yield. - MUST be inclusive of any fees that are charged against assets in the Vault. - MUST NOT revert.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint256,address,address)\":{\"details\":\"Burns shares from owner and sends exactly assets of underlying tokens to receiver. - MUST emit the Withdraw event. - MAY support an additional flow in which the underlying tokens are owned by the Vault contract before the   withdraw execution, and are accounted for during withdraw. - MUST revert if all of assets cannot be withdrawn (due to withdrawal limit being reached, slippage, the owner   not having enough shares, etc). Note that some implementations will require pre-requesting to the Vault before a withdrawal may be performed. Those methods should be performed separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":\"IERC4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol":{"ERC4626":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC4626 \\\"Tokenized Vault Standard\\\" as defined in https://eips.ethereum.org/EIPS/eip-4626[EIP-4626]. This extension allows the minting and burning of \\\"shares\\\" (represented using the ERC20 inheritance) in exchange for underlying \\\"assets\\\" through standardized {deposit}, {mint}, {redeem} and {burn} workflows. This contract extends the ERC20 standard. Any additional extensions included along it would affect the \\\"shares\\\" token represented by this contract and not the \\\"assets\\\" token which is an independent contract. [CAUTION] ==== In empty (or nearly empty) ERC-4626 vaults, deposits are at high risk of being stolen through frontrunning with a \\\"donation\\\" to the vault that inflates the price of a share. This is variously known as a donation or inflation attack and is essentially a problem of slippage. Vault deployers can protect against this attack by making an initial deposit of a non-trivial amount of the asset, such that price manipulation becomes infeasible. Withdrawals may similarly be affected by slippage. Users can protect against this attack as well as unexpected slippage in general by verifying the amount received is as expected, using a wrapper that performs these checks such as https://github.com/fei-protocol/ERC4626#erc4626router-and-base[ERC4626Router]. Since v4.9, this implementation uses virtual assets and shares to mitigate that risk. The `_decimalsOffset()` corresponds to an offset in the decimal representation between the underlying asset's decimals and the vault decimals. This offset also determines the rate of virtual shares to virtual assets in the vault, which itself determines the initial exchange rate. While not fully preventing the attack, analysis shows that the default offset (0) makes it non-profitable, as a result of the value being captured by the virtual shares (out of the attacker's donation) matching the attacker's expected gains. With a larger offset, the attack becomes orders of magnitude more expensive than it is profitable. More details about the underlying math can be found xref:erc4626.adoc#inflation-attack[here]. The drawback of this approach is that the virtual shares do capture (a very small) part of the value being accrued to the vault. Also, if the vault experiences losses, the users try to exit the vault, the virtual shares and assets will cause the first user to exit to experience reduced losses in detriment to the last users that will experience bigger losses. Developers willing to revert back to the pre-v4.9 behavior just need to override the `_convertToShares` and `_convertToAssets` functions. To learn more, check out our xref:ROOT:erc4626.adoc[ERC-4626 guide]. ====\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Set the underlying asset contract. This must be an ERC20-compatible contract (ERC20 or ERC777).\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"previewDeposit(uint256)\":{\"details\":\"See {IERC4626-previewDeposit}. \"},\"previewMint(uint256)\":{\"details\":\"See {IERC4626-previewMint}. \"},\"previewRedeem(uint256)\":{\"details\":\"See {IERC4626-previewRedeem}. \"},\"previewWithdraw(uint256)\":{\"details\":\"See {IERC4626-previewWithdraw}. \"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":\"ERC4626\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c852090f5890660000c25e74d3d5b4369345bc7c21484a89c002b367d9d86af64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C DUP6 KECCAK256 SWAP1 CREATE2 DUP10 MOD PUSH1 0x0 0xC 0x25 0xE7 0x4D RETURNDATASIZE JUMPDEST NUMBER PUSH10 0x345BC7C21484A89C002B CALLDATASIZE PUSH30 0x9D86AF64736F6C6343000815003300000000000000000000000000000000 ","sourceMap":"751:5018:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205c852090f5890660000c25e74d3d5b4369345bc7c21484a89c002b367d9d86af64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C DUP6 KECCAK256 SWAP1 CREATE2 DUP10 MOD PUSH1 0x0 0xC 0x25 0xE7 0x4D RETURNDATASIZE JUMPDEST NUMBER PUSH10 0x345BC7C21484A89C002B CALLDATASIZE PUSH30 0x9D86AF64736F6C6343000815003300000000000000000000000000000000 ","sourceMap":"751:5018:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220389b23939af997d43c73e2897b3999539c34c43c9401a75ed8279da9cc660c0964736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SWAP12 0x23 SWAP4 SWAP11 0xF9 SWAP8 0xD4 EXTCODECOPY PUSH20 0xE2897B3999539C34C43C9401A75ED8279DA9CC66 0xC MULMOD PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220389b23939af997d43c73e2897b3999539c34c43c9401a75ed8279da9cc660c0964736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE SWAP12 0x23 SWAP4 SWAP11 0xF9 SWAP8 0xD4 EXTCODECOPY PUSH20 0xE2897B3999539C34C43C9401A75ED8279DA9CC66 0xC MULMOD PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fde96d3a5d4b60e472ede6c2ee0ab65a0097c5f3a2e1113995eb5275e781e90764736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xE9 PUSH14 0x3A5D4B60E472EDE6C2EE0AB65A00 SWAP8 0xC5 RETURN LOG2 0xE1 GT CODECOPY SWAP6 0xEB MSTORE PUSH22 0xE781E90764736F6C6343000815003300000000000000 ","sourceMap":"1255:3053:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fde96d3a5d4b60e472ede6c2ee0ab65a0097c5f3a2e1113995eb5275e781e90764736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xE9 PUSH14 0x3A5D4B60E472EDE6C2EE0AB65A00 SWAP8 0xC5 RETURN LOG2 0xE1 GT CODECOPY SWAP6 0xEB MSTORE PUSH22 0xE781E90764736F6C6343000815003300000000000000 ","sourceMap":"1255:3053:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040216e3853c23746ae9d1c9cb236ce6c90545673d03d3acb5fbd5dce95862c6564736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x21 PUSH15 0x3853C23746AE9D1C9CB236CE6C9054 JUMP PUSH20 0xD03D3ACB5FBD5DCE95862C6564736F6C63430008 ISZERO STOP CALLER ","sourceMap":"1245:2685:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040216e3853c23746ae9d1c9cb236ce6c90545673d03d3acb5fbd5dce95862c6564736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x21 PUSH15 0x3853C23746AE9D1C9CB236CE6C9054 JUMP PUSH20 0xD03D3ACB5FBD5DCE95862C6564736F6C63430008 ISZERO STOP CALLER ","sourceMap":"1245:2685:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1ee51b816ac7769950201ff832f9e31eaf67a58cf1560a11fcb269d411ea16c64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xEE MLOAD 0xB8 AND 0xAC PUSH24 0x69950201FF832F9E31EAF67A58CF1560A11FCB269D411EA1 PUSH13 0x64736F6C634300081500330000 ","sourceMap":"251:2847:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b1ee51b816ac7769950201ff832f9e31eaf67a58cf1560a11fcb269d411ea16c64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xEE MLOAD 0xB8 AND 0xAC PUSH24 0x69950201FF832F9E31EAF67A58CF1560A11FCB269D411EA1 PUSH13 0x64736F6C634300081500330000 ","sourceMap":"251:2847:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1a38c14a73dbfed1ad316f51d53c843f5a0c145c19709416ed4f9dba99257ff64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 LOG3 DUP13 EQ 0xA7 RETURNDATASIZE 0xBF 0xED BYTE 0xD3 AND CREATE2 SAR MSTORE8 0xC8 NUMBER CREATE2 LOG0 0xC1 GASLIMIT 0xC1 SWAP8 MULMOD COINBASE PUSH15 0xD4F9DBA99257FF64736F6C63430008 ISZERO STOP CALLER ","sourceMap":"344:7386:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1a38c14a73dbfed1ad316f51d53c843f5a0c145c19709416ed4f9dba99257ff64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 LOG3 DUP13 EQ 0xA7 RETURNDATASIZE 0xBF 0xED BYTE 0xD3 AND CREATE2 SAR MSTORE8 0xC8 NUMBER CREATE2 LOG0 0xC1 GASLIMIT 0xC1 SWAP8 MULMOD COINBASE PUSH15 0xD4F9DBA99257FF64736F6C63430008 ISZERO STOP CALLER ","sourceMap":"344:7386:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f8d52b67239c2aa285a966328b0df9eaae1f979875c65962f43ba8c7bff0f5f64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F DUP14 MSTORE 0xB6 PUSH19 0x39C2AA285A966328B0DF9EAAE1F979875C6596 0x2F NUMBER 0xBA DUP13 PUSH28 0xFF0F5F64736F6C634300081500330000000000000000000000000000 ","sourceMap":"521:3235:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f8d52b67239c2aa285a966328b0df9eaae1f979875c65962f43ba8c7bff0f5f64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F DUP14 MSTORE 0xB6 PUSH19 0x39C2AA285A966328B0DF9EAAE1F979875C6596 0x2F NUMBER 0xBA DUP13 PUSH28 0xFF0F5F64736F6C634300081500330000000000000000000000000000 ","sourceMap":"521:3235:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee77ab7d7535c7da699b2c5f983b9bf8d7b47dd6185236474d7899ff471f6cbb64736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH24 0xAB7D7535C7DA699B2C5F983B9BF8D7B47DD6185236474D78 SWAP10 SELFDESTRUCT SELFBALANCE 0x1F PUSH13 0xBB64736F6C6343000815003300 ","sourceMap":"203:14914:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ee77ab7d7535c7da699b2c5f983b9bf8d7b47dd6185236474d7899ff471f6cbb64736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE PUSH24 0xAB7D7535C7DA699B2C5F983B9BF8D7B47DD6185236474D78 SWAP10 SELFDESTRUCT SELFBALANCE 0x1F PUSH13 0xBB64736F6C6343000815003300 ","sourceMap":"203:14914:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bea322c39933d5bec78614f0527368722519b6d606e7da3f47afeab194a47a464736f6c63430008150033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xEA ORIGIN 0x2C CODECOPY SWAP4 RETURNDATASIZE JUMPDEST 0xEC PUSH25 0x614F0527368722519B6D606E7DA3F47AFEAB194A47A464736F PUSH13 0x63430008150033000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203bea322c39933d5bec78614f0527368722519b6d606e7da3f47afeab194a47a464736f6c63430008150033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xEA ORIGIN 0x2C CODECOPY SWAP4 RETURNDATASIZE JUMPDEST 0xEC PUSH25 0x614F0527368722519B6D606E7DA3F47AFEAB194A47A464736F PUSH13 0x63430008150033000000000000 ","sourceMap":"216:1047:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}"}},"contracts/ERC4626Fees.sol":{"ERC4626Fees":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"entryFeeBasisPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exitFeeBasisPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","entryFeeBasisPoints()":"ba0af7a9","exitFeeBasisPoints()":"86915573","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","owner()":"8da5cb5b","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC4626 vault with entry/exit fees expressed in https://en.wikipedia.org/wiki/Basis_point[basis point (bp)].\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewDeposit(uint256)\":{\"details\":\"Preview taking an entry fee on deposit. See {IERC4626-previewDeposit}.\"},\"previewMint(uint256)\":{\"details\":\"Preview adding an entry fee on mint. See {IERC4626-previewMint}.\"},\"previewRedeem(uint256)\":{\"details\":\"Preview taking an exit fee on redeem. See {IERC4626-previewRedeem}.\"},\"previewWithdraw(uint256)\":{\"details\":\"Preview adding an exit fee on withdraw. See {IERC4626-previewWithdraw}.\"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC4626Fees.sol\":\"ERC4626Fees\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/ERC4626Fees.sol\":{\"keccak256\":\"0xa72aaeba531a648320e29e993d292e19df2b07e12ddefa380eaa1f0cf130dd43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5a3422e00c71907a61a1e93138588985d858adb3052a01afd130150cfa522c1\",\"dweb:/ipfs/QmT5TaMyoyPJy33rFz4MY4VcLnnPc3bKhLmM49vmN5qYTp\"]}},\"version\":1}"}},"contracts/Spark.sol":{"Spark":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1121":{"entryPoint":null,"id":1121,"parameterSlots":1,"returnSlots":0},"@_3633":{"entryPoint":null,"id":3633,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_531":{"entryPoint":null,"id":531,"parameterSlots":2,"returnSlots":0},"@_5363":{"entryPoint":null,"id":5363,"parameterSlots":0,"returnSlots":0},"@_buildDomainSeparator_3680":{"entryPoint":879,"id":3680,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":593,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_2910":{"entryPoint":1081,"id":2910,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_2764":{"entryPoint":791,"id":2764,"parameterSlots":2,"returnSlots":1},"@toShortString_2666":{"entryPoint":972,"id":2666,"parameterSlots":1,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2008,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2064,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2269,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2081,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2098,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2334,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":2381,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1249,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2370,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1091,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2191,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1570,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1988,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2054,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1956,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1385,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1531,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":2420,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":1405,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1725,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2208,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1270,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1196,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1695,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1395,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1663,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1149,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1102,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1445,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":2397,"id":null,"parameterSlots":1,"returnSlots":1},"round_up_to_mul_of_32":{"entryPoint":2252,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1286,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1650,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1503,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1299,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1455,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1498,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:9041:25","nodeType":"YulBlock","src":"0:9041:25","statements":[{"body":{"nativeSrc":"66:40:25","nodeType":"YulBlock","src":"66:40:25","statements":[{"nativeSrc":"77:22:25","nodeType":"YulAssignment","src":"77:22:25","value":{"arguments":[{"name":"value","nativeSrc":"93:5:25","nodeType":"YulIdentifier","src":"93:5:25"}],"functionName":{"name":"mload","nativeSrc":"87:5:25","nodeType":"YulIdentifier","src":"87:5:25"},"nativeSrc":"87:12:25","nodeType":"YulFunctionCall","src":"87:12:25"},"variableNames":[{"name":"length","nativeSrc":"77:6:25","nodeType":"YulIdentifier","src":"77:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:25","nodeType":"YulTypedName","src":"49:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:25","nodeType":"YulTypedName","src":"59:6:25","type":""}],"src":"7:99:25"},{"body":{"nativeSrc":"140:152:25","nodeType":"YulBlock","src":"140:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:25","nodeType":"YulLiteral","src":"157:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:25","nodeType":"YulLiteral","src":"160:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:25","nodeType":"YulIdentifier","src":"150:6:25"},"nativeSrc":"150:88:25","nodeType":"YulFunctionCall","src":"150:88:25"},"nativeSrc":"150:88:25","nodeType":"YulExpressionStatement","src":"150:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:25","nodeType":"YulLiteral","src":"254:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:25","nodeType":"YulLiteral","src":"257:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:25","nodeType":"YulIdentifier","src":"247:6:25"},"nativeSrc":"247:15:25","nodeType":"YulFunctionCall","src":"247:15:25"},"nativeSrc":"247:15:25","nodeType":"YulExpressionStatement","src":"247:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:25","nodeType":"YulLiteral","src":"278:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:25","nodeType":"YulLiteral","src":"281:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:25","nodeType":"YulIdentifier","src":"271:6:25"},"nativeSrc":"271:15:25","nodeType":"YulFunctionCall","src":"271:15:25"},"nativeSrc":"271:15:25","nodeType":"YulExpressionStatement","src":"271:15:25"}]},"name":"panic_error_0x41","nativeSrc":"112:180:25","nodeType":"YulFunctionDefinition","src":"112:180:25"},{"body":{"nativeSrc":"326:152:25","nodeType":"YulBlock","src":"326:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:25","nodeType":"YulLiteral","src":"343:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:25","nodeType":"YulLiteral","src":"346:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:25","nodeType":"YulIdentifier","src":"336:6:25"},"nativeSrc":"336:88:25","nodeType":"YulFunctionCall","src":"336:88:25"},"nativeSrc":"336:88:25","nodeType":"YulExpressionStatement","src":"336:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:25","nodeType":"YulLiteral","src":"440:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:25","nodeType":"YulLiteral","src":"443:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:25","nodeType":"YulIdentifier","src":"433:6:25"},"nativeSrc":"433:15:25","nodeType":"YulFunctionCall","src":"433:15:25"},"nativeSrc":"433:15:25","nodeType":"YulExpressionStatement","src":"433:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:25","nodeType":"YulLiteral","src":"464:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:25","nodeType":"YulLiteral","src":"467:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:25","nodeType":"YulIdentifier","src":"457:6:25"},"nativeSrc":"457:15:25","nodeType":"YulFunctionCall","src":"457:15:25"},"nativeSrc":"457:15:25","nodeType":"YulExpressionStatement","src":"457:15:25"}]},"name":"panic_error_0x22","nativeSrc":"298:180:25","nodeType":"YulFunctionDefinition","src":"298:180:25"},{"body":{"nativeSrc":"535:269:25","nodeType":"YulBlock","src":"535:269:25","statements":[{"nativeSrc":"545:22:25","nodeType":"YulAssignment","src":"545:22:25","value":{"arguments":[{"name":"data","nativeSrc":"559:4:25","nodeType":"YulIdentifier","src":"559:4:25"},{"kind":"number","nativeSrc":"565:1:25","nodeType":"YulLiteral","src":"565:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:25","nodeType":"YulIdentifier","src":"555:3:25"},"nativeSrc":"555:12:25","nodeType":"YulFunctionCall","src":"555:12:25"},"variableNames":[{"name":"length","nativeSrc":"545:6:25","nodeType":"YulIdentifier","src":"545:6:25"}]},{"nativeSrc":"576:38:25","nodeType":"YulVariableDeclaration","src":"576:38:25","value":{"arguments":[{"name":"data","nativeSrc":"606:4:25","nodeType":"YulIdentifier","src":"606:4:25"},{"kind":"number","nativeSrc":"612:1:25","nodeType":"YulLiteral","src":"612:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:25","nodeType":"YulIdentifier","src":"602:3:25"},"nativeSrc":"602:12:25","nodeType":"YulFunctionCall","src":"602:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:25","nodeType":"YulTypedName","src":"580:18:25","type":""}]},{"body":{"nativeSrc":"653:51:25","nodeType":"YulBlock","src":"653:51:25","statements":[{"nativeSrc":"667:27:25","nodeType":"YulAssignment","src":"667:27:25","value":{"arguments":[{"name":"length","nativeSrc":"681:6:25","nodeType":"YulIdentifier","src":"681:6:25"},{"kind":"number","nativeSrc":"689:4:25","nodeType":"YulLiteral","src":"689:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:25","nodeType":"YulIdentifier","src":"677:3:25"},"nativeSrc":"677:17:25","nodeType":"YulFunctionCall","src":"677:17:25"},"variableNames":[{"name":"length","nativeSrc":"667:6:25","nodeType":"YulIdentifier","src":"667:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:25","nodeType":"YulIdentifier","src":"633:18:25"}],"functionName":{"name":"iszero","nativeSrc":"626:6:25","nodeType":"YulIdentifier","src":"626:6:25"},"nativeSrc":"626:26:25","nodeType":"YulFunctionCall","src":"626:26:25"},"nativeSrc":"623:81:25","nodeType":"YulIf","src":"623:81:25"},{"body":{"nativeSrc":"756:42:25","nodeType":"YulBlock","src":"756:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:25","nodeType":"YulIdentifier","src":"770:16:25"},"nativeSrc":"770:18:25","nodeType":"YulFunctionCall","src":"770:18:25"},"nativeSrc":"770:18:25","nodeType":"YulExpressionStatement","src":"770:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:25","nodeType":"YulIdentifier","src":"720:18:25"},{"arguments":[{"name":"length","nativeSrc":"743:6:25","nodeType":"YulIdentifier","src":"743:6:25"},{"kind":"number","nativeSrc":"751:2:25","nodeType":"YulLiteral","src":"751:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:25","nodeType":"YulIdentifier","src":"740:2:25"},"nativeSrc":"740:14:25","nodeType":"YulFunctionCall","src":"740:14:25"}],"functionName":{"name":"eq","nativeSrc":"717:2:25","nodeType":"YulIdentifier","src":"717:2:25"},"nativeSrc":"717:38:25","nodeType":"YulFunctionCall","src":"717:38:25"},"nativeSrc":"714:84:25","nodeType":"YulIf","src":"714:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:25","nodeType":"YulTypedName","src":"519:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:25","nodeType":"YulTypedName","src":"528:6:25","type":""}],"src":"484:320:25"},{"body":{"nativeSrc":"864:87:25","nodeType":"YulBlock","src":"864:87:25","statements":[{"nativeSrc":"874:11:25","nodeType":"YulAssignment","src":"874:11:25","value":{"name":"ptr","nativeSrc":"882:3:25","nodeType":"YulIdentifier","src":"882:3:25"},"variableNames":[{"name":"data","nativeSrc":"874:4:25","nodeType":"YulIdentifier","src":"874:4:25"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:25","nodeType":"YulLiteral","src":"902:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:25","nodeType":"YulIdentifier","src":"905:3:25"}],"functionName":{"name":"mstore","nativeSrc":"895:6:25","nodeType":"YulIdentifier","src":"895:6:25"},"nativeSrc":"895:14:25","nodeType":"YulFunctionCall","src":"895:14:25"},"nativeSrc":"895:14:25","nodeType":"YulExpressionStatement","src":"895:14:25"},{"nativeSrc":"918:26:25","nodeType":"YulAssignment","src":"918:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:25","nodeType":"YulLiteral","src":"936:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:25","nodeType":"YulLiteral","src":"939:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:25","nodeType":"YulIdentifier","src":"926:9:25"},"nativeSrc":"926:18:25","nodeType":"YulFunctionCall","src":"926:18:25"},"variableNames":[{"name":"data","nativeSrc":"918:4:25","nodeType":"YulIdentifier","src":"918:4:25"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:25","nodeType":"YulTypedName","src":"851:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:25","nodeType":"YulTypedName","src":"859:4:25","type":""}],"src":"810:141:25"},{"body":{"nativeSrc":"1001:49:25","nodeType":"YulBlock","src":"1001:49:25","statements":[{"nativeSrc":"1011:33:25","nodeType":"YulAssignment","src":"1011:33:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:25","nodeType":"YulIdentifier","src":"1029:5:25"},{"kind":"number","nativeSrc":"1036:2:25","nodeType":"YulLiteral","src":"1036:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:25","nodeType":"YulIdentifier","src":"1025:3:25"},"nativeSrc":"1025:14:25","nodeType":"YulFunctionCall","src":"1025:14:25"},{"kind":"number","nativeSrc":"1041:2:25","nodeType":"YulLiteral","src":"1041:2:25","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:25","nodeType":"YulIdentifier","src":"1021:3:25"},"nativeSrc":"1021:23:25","nodeType":"YulFunctionCall","src":"1021:23:25"},"variableNames":[{"name":"result","nativeSrc":"1011:6:25","nodeType":"YulIdentifier","src":"1011:6:25"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:25","nodeType":"YulTypedName","src":"984:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:25","nodeType":"YulTypedName","src":"994:6:25","type":""}],"src":"957:93:25"},{"body":{"nativeSrc":"1109:54:25","nodeType":"YulBlock","src":"1109:54:25","statements":[{"nativeSrc":"1119:37:25","nodeType":"YulAssignment","src":"1119:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:25","nodeType":"YulIdentifier","src":"1144:4:25"},{"name":"value","nativeSrc":"1150:5:25","nodeType":"YulIdentifier","src":"1150:5:25"}],"functionName":{"name":"shl","nativeSrc":"1140:3:25","nodeType":"YulIdentifier","src":"1140:3:25"},"nativeSrc":"1140:16:25","nodeType":"YulFunctionCall","src":"1140:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:25","nodeType":"YulIdentifier","src":"1119:8:25"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:25","nodeType":"YulTypedName","src":"1084:4:25","type":""},{"name":"value","nativeSrc":"1090:5:25","nodeType":"YulTypedName","src":"1090:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:25","nodeType":"YulTypedName","src":"1100:8:25","type":""}],"src":"1056:107:25"},{"body":{"nativeSrc":"1245:317:25","nodeType":"YulBlock","src":"1245:317:25","statements":[{"nativeSrc":"1255:35:25","nodeType":"YulVariableDeclaration","src":"1255:35:25","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:25","nodeType":"YulIdentifier","src":"1276:10:25"},{"kind":"number","nativeSrc":"1288:1:25","nodeType":"YulLiteral","src":"1288:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:25","nodeType":"YulIdentifier","src":"1272:3:25"},"nativeSrc":"1272:18:25","nodeType":"YulFunctionCall","src":"1272:18:25"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:25","nodeType":"YulTypedName","src":"1259:9:25","type":""}]},{"nativeSrc":"1299:109:25","nodeType":"YulVariableDeclaration","src":"1299:109:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:25","nodeType":"YulIdentifier","src":"1330:9:25"},{"kind":"number","nativeSrc":"1341:66:25","nodeType":"YulLiteral","src":"1341:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:25","nodeType":"YulIdentifier","src":"1311:18:25"},"nativeSrc":"1311:97:25","nodeType":"YulFunctionCall","src":"1311:97:25"},"variables":[{"name":"mask","nativeSrc":"1303:4:25","nodeType":"YulTypedName","src":"1303:4:25","type":""}]},{"nativeSrc":"1417:51:25","nodeType":"YulAssignment","src":"1417:51:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:25","nodeType":"YulIdentifier","src":"1448:9:25"},{"name":"toInsert","nativeSrc":"1459:8:25","nodeType":"YulIdentifier","src":"1459:8:25"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:25","nodeType":"YulIdentifier","src":"1429:18:25"},"nativeSrc":"1429:39:25","nodeType":"YulFunctionCall","src":"1429:39:25"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:25","nodeType":"YulIdentifier","src":"1417:8:25"}]},{"nativeSrc":"1477:30:25","nodeType":"YulAssignment","src":"1477:30:25","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:25","nodeType":"YulIdentifier","src":"1490:5:25"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:25","nodeType":"YulIdentifier","src":"1501:4:25"}],"functionName":{"name":"not","nativeSrc":"1497:3:25","nodeType":"YulIdentifier","src":"1497:3:25"},"nativeSrc":"1497:9:25","nodeType":"YulFunctionCall","src":"1497:9:25"}],"functionName":{"name":"and","nativeSrc":"1486:3:25","nodeType":"YulIdentifier","src":"1486:3:25"},"nativeSrc":"1486:21:25","nodeType":"YulFunctionCall","src":"1486:21:25"},"variableNames":[{"name":"value","nativeSrc":"1477:5:25","nodeType":"YulIdentifier","src":"1477:5:25"}]},{"nativeSrc":"1516:40:25","nodeType":"YulAssignment","src":"1516:40:25","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:25","nodeType":"YulIdentifier","src":"1529:5:25"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:25","nodeType":"YulIdentifier","src":"1540:8:25"},{"name":"mask","nativeSrc":"1550:4:25","nodeType":"YulIdentifier","src":"1550:4:25"}],"functionName":{"name":"and","nativeSrc":"1536:3:25","nodeType":"YulIdentifier","src":"1536:3:25"},"nativeSrc":"1536:19:25","nodeType":"YulFunctionCall","src":"1536:19:25"}],"functionName":{"name":"or","nativeSrc":"1526:2:25","nodeType":"YulIdentifier","src":"1526:2:25"},"nativeSrc":"1526:30:25","nodeType":"YulFunctionCall","src":"1526:30:25"},"variableNames":[{"name":"result","nativeSrc":"1516:6:25","nodeType":"YulIdentifier","src":"1516:6:25"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:25","nodeType":"YulTypedName","src":"1206:5:25","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:25","nodeType":"YulTypedName","src":"1213:10:25","type":""},{"name":"toInsert","nativeSrc":"1225:8:25","nodeType":"YulTypedName","src":"1225:8:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:25","nodeType":"YulTypedName","src":"1238:6:25","type":""}],"src":"1169:393:25"},{"body":{"nativeSrc":"1613:32:25","nodeType":"YulBlock","src":"1613:32:25","statements":[{"nativeSrc":"1623:16:25","nodeType":"YulAssignment","src":"1623:16:25","value":{"name":"value","nativeSrc":"1634:5:25","nodeType":"YulIdentifier","src":"1634:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:25","nodeType":"YulIdentifier","src":"1623:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:25","nodeType":"YulTypedName","src":"1595:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:25","nodeType":"YulTypedName","src":"1605:7:25","type":""}],"src":"1568:77:25"},{"body":{"nativeSrc":"1683:28:25","nodeType":"YulBlock","src":"1683:28:25","statements":[{"nativeSrc":"1693:12:25","nodeType":"YulAssignment","src":"1693:12:25","value":{"name":"value","nativeSrc":"1700:5:25","nodeType":"YulIdentifier","src":"1700:5:25"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:25","nodeType":"YulIdentifier","src":"1693:3:25"}]}]},"name":"identity","nativeSrc":"1651:60:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:25","nodeType":"YulTypedName","src":"1669:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:25","nodeType":"YulTypedName","src":"1679:3:25","type":""}],"src":"1651:60:25"},{"body":{"nativeSrc":"1777:82:25","nodeType":"YulBlock","src":"1777:82:25","statements":[{"nativeSrc":"1787:66:25","nodeType":"YulAssignment","src":"1787:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:25","nodeType":"YulIdentifier","src":"1845:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:25","nodeType":"YulIdentifier","src":"1827:17:25"},"nativeSrc":"1827:24:25","nodeType":"YulFunctionCall","src":"1827:24:25"}],"functionName":{"name":"identity","nativeSrc":"1818:8:25","nodeType":"YulIdentifier","src":"1818:8:25"},"nativeSrc":"1818:34:25","nodeType":"YulFunctionCall","src":"1818:34:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:25","nodeType":"YulIdentifier","src":"1800:17:25"},"nativeSrc":"1800:53:25","nodeType":"YulFunctionCall","src":"1800:53:25"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:25","nodeType":"YulIdentifier","src":"1787:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:25","nodeType":"YulTypedName","src":"1757:5:25","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:25","nodeType":"YulTypedName","src":"1767:9:25","type":""}],"src":"1717:142:25"},{"body":{"nativeSrc":"1912:28:25","nodeType":"YulBlock","src":"1912:28:25","statements":[{"nativeSrc":"1922:12:25","nodeType":"YulAssignment","src":"1922:12:25","value":{"name":"value","nativeSrc":"1929:5:25","nodeType":"YulIdentifier","src":"1929:5:25"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:25","nodeType":"YulIdentifier","src":"1922:3:25"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:25","nodeType":"YulTypedName","src":"1898:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:25","nodeType":"YulTypedName","src":"1908:3:25","type":""}],"src":"1865:75:25"},{"body":{"nativeSrc":"2022:193:25","nodeType":"YulBlock","src":"2022:193:25","statements":[{"nativeSrc":"2032:63:25","nodeType":"YulVariableDeclaration","src":"2032:63:25","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:25","nodeType":"YulIdentifier","src":"2087:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:25","nodeType":"YulIdentifier","src":"2056:30:25"},"nativeSrc":"2056:39:25","nodeType":"YulFunctionCall","src":"2056:39:25"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:25","nodeType":"YulTypedName","src":"2036:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:25","nodeType":"YulIdentifier","src":"2111:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:25","nodeType":"YulIdentifier","src":"2151:4:25"}],"functionName":{"name":"sload","nativeSrc":"2145:5:25","nodeType":"YulIdentifier","src":"2145:5:25"},"nativeSrc":"2145:11:25","nodeType":"YulFunctionCall","src":"2145:11:25"},{"name":"offset","nativeSrc":"2158:6:25","nodeType":"YulIdentifier","src":"2158:6:25"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:25","nodeType":"YulIdentifier","src":"2190:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:25","nodeType":"YulIdentifier","src":"2166:23:25"},"nativeSrc":"2166:41:25","nodeType":"YulFunctionCall","src":"2166:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:25","nodeType":"YulIdentifier","src":"2117:27:25"},"nativeSrc":"2117:91:25","nodeType":"YulFunctionCall","src":"2117:91:25"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:25","nodeType":"YulIdentifier","src":"2104:6:25"},"nativeSrc":"2104:105:25","nodeType":"YulFunctionCall","src":"2104:105:25"},"nativeSrc":"2104:105:25","nodeType":"YulExpressionStatement","src":"2104:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:25","nodeType":"YulTypedName","src":"1999:4:25","type":""},{"name":"offset","nativeSrc":"2005:6:25","nodeType":"YulTypedName","src":"2005:6:25","type":""},{"name":"value_0","nativeSrc":"2013:7:25","nodeType":"YulTypedName","src":"2013:7:25","type":""}],"src":"1946:269:25"},{"body":{"nativeSrc":"2270:24:25","nodeType":"YulBlock","src":"2270:24:25","statements":[{"nativeSrc":"2280:8:25","nodeType":"YulAssignment","src":"2280:8:25","value":{"kind":"number","nativeSrc":"2287:1:25","nodeType":"YulLiteral","src":"2287:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:25","nodeType":"YulIdentifier","src":"2280:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:25","nodeType":"YulTypedName","src":"2266:3:25","type":""}],"src":"2221:73:25"},{"body":{"nativeSrc":"2353:136:25","nodeType":"YulBlock","src":"2353:136:25","statements":[{"nativeSrc":"2363:46:25","nodeType":"YulVariableDeclaration","src":"2363:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:25","nodeType":"YulIdentifier","src":"2377:30:25"},"nativeSrc":"2377:32:25","nodeType":"YulFunctionCall","src":"2377:32:25"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:25","nodeType":"YulTypedName","src":"2367:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:25","nodeType":"YulIdentifier","src":"2462:4:25"},{"name":"offset","nativeSrc":"2468:6:25","nodeType":"YulIdentifier","src":"2468:6:25"},{"name":"zero_0","nativeSrc":"2476:6:25","nodeType":"YulIdentifier","src":"2476:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:25","nodeType":"YulIdentifier","src":"2418:43:25"},"nativeSrc":"2418:65:25","nodeType":"YulFunctionCall","src":"2418:65:25"},"nativeSrc":"2418:65:25","nodeType":"YulExpressionStatement","src":"2418:65:25"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:25","nodeType":"YulTypedName","src":"2339:4:25","type":""},{"name":"offset","nativeSrc":"2345:6:25","nodeType":"YulTypedName","src":"2345:6:25","type":""}],"src":"2300:189:25"},{"body":{"nativeSrc":"2545:136:25","nodeType":"YulBlock","src":"2545:136:25","statements":[{"body":{"nativeSrc":"2612:63:25","nodeType":"YulBlock","src":"2612:63:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:25","nodeType":"YulIdentifier","src":"2656:5:25"},{"kind":"number","nativeSrc":"2663:1:25","nodeType":"YulLiteral","src":"2663:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:25","nodeType":"YulIdentifier","src":"2626:29:25"},"nativeSrc":"2626:39:25","nodeType":"YulFunctionCall","src":"2626:39:25"},"nativeSrc":"2626:39:25","nodeType":"YulExpressionStatement","src":"2626:39:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:25","nodeType":"YulIdentifier","src":"2565:5:25"},{"name":"end","nativeSrc":"2572:3:25","nodeType":"YulIdentifier","src":"2572:3:25"}],"functionName":{"name":"lt","nativeSrc":"2562:2:25","nodeType":"YulIdentifier","src":"2562:2:25"},"nativeSrc":"2562:14:25","nodeType":"YulFunctionCall","src":"2562:14:25"},"nativeSrc":"2555:120:25","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:25","nodeType":"YulBlock","src":"2577:26:25","statements":[{"nativeSrc":"2579:22:25","nodeType":"YulAssignment","src":"2579:22:25","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:25","nodeType":"YulIdentifier","src":"2592:5:25"},{"kind":"number","nativeSrc":"2599:1:25","nodeType":"YulLiteral","src":"2599:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:25","nodeType":"YulIdentifier","src":"2588:3:25"},"nativeSrc":"2588:13:25","nodeType":"YulFunctionCall","src":"2588:13:25"},"variableNames":[{"name":"start","nativeSrc":"2579:5:25","nodeType":"YulIdentifier","src":"2579:5:25"}]}]},"pre":{"nativeSrc":"2559:2:25","nodeType":"YulBlock","src":"2559:2:25","statements":[]},"src":"2555:120:25"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:25","nodeType":"YulTypedName","src":"2533:5:25","type":""},{"name":"end","nativeSrc":"2540:3:25","nodeType":"YulTypedName","src":"2540:3:25","type":""}],"src":"2495:186:25"},{"body":{"nativeSrc":"2766:464:25","nodeType":"YulBlock","src":"2766:464:25","statements":[{"body":{"nativeSrc":"2792:431:25","nodeType":"YulBlock","src":"2792:431:25","statements":[{"nativeSrc":"2806:54:25","nodeType":"YulVariableDeclaration","src":"2806:54:25","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:25","nodeType":"YulIdentifier","src":"2854:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:25","nodeType":"YulIdentifier","src":"2822:31:25"},"nativeSrc":"2822:38:25","nodeType":"YulFunctionCall","src":"2822:38:25"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:25","nodeType":"YulTypedName","src":"2810:8:25","type":""}]},{"nativeSrc":"2873:63:25","nodeType":"YulVariableDeclaration","src":"2873:63:25","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:25","nodeType":"YulIdentifier","src":"2896:8:25"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:25","nodeType":"YulIdentifier","src":"2924:10:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:25","nodeType":"YulIdentifier","src":"2906:17:25"},"nativeSrc":"2906:29:25","nodeType":"YulFunctionCall","src":"2906:29:25"}],"functionName":{"name":"add","nativeSrc":"2892:3:25","nodeType":"YulIdentifier","src":"2892:3:25"},"nativeSrc":"2892:44:25","nodeType":"YulFunctionCall","src":"2892:44:25"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:25","nodeType":"YulTypedName","src":"2877:11:25","type":""}]},{"body":{"nativeSrc":"3093:27:25","nodeType":"YulBlock","src":"3093:27:25","statements":[{"nativeSrc":"3095:23:25","nodeType":"YulAssignment","src":"3095:23:25","value":{"name":"dataArea","nativeSrc":"3110:8:25","nodeType":"YulIdentifier","src":"3110:8:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:25","nodeType":"YulIdentifier","src":"3095:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:25","nodeType":"YulIdentifier","src":"3077:10:25"},{"kind":"number","nativeSrc":"3089:2:25","nodeType":"YulLiteral","src":"3089:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:25","nodeType":"YulIdentifier","src":"3074:2:25"},"nativeSrc":"3074:18:25","nodeType":"YulFunctionCall","src":"3074:18:25"},"nativeSrc":"3071:49:25","nodeType":"YulIf","src":"3071:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:25","nodeType":"YulIdentifier","src":"3162:11:25"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:25","nodeType":"YulIdentifier","src":"3179:8:25"},{"arguments":[{"name":"len","nativeSrc":"3207:3:25","nodeType":"YulIdentifier","src":"3207:3:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:25","nodeType":"YulIdentifier","src":"3189:17:25"},"nativeSrc":"3189:22:25","nodeType":"YulFunctionCall","src":"3189:22:25"}],"functionName":{"name":"add","nativeSrc":"3175:3:25","nodeType":"YulIdentifier","src":"3175:3:25"},"nativeSrc":"3175:37:25","nodeType":"YulFunctionCall","src":"3175:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:25","nodeType":"YulIdentifier","src":"3133:28:25"},"nativeSrc":"3133:80:25","nodeType":"YulFunctionCall","src":"3133:80:25"},"nativeSrc":"3133:80:25","nodeType":"YulExpressionStatement","src":"3133:80:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:25","nodeType":"YulIdentifier","src":"2783:3:25"},{"kind":"number","nativeSrc":"2788:2:25","nodeType":"YulLiteral","src":"2788:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:25","nodeType":"YulIdentifier","src":"2780:2:25"},"nativeSrc":"2780:11:25","nodeType":"YulFunctionCall","src":"2780:11:25"},"nativeSrc":"2777:446:25","nodeType":"YulIf","src":"2777:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:25","nodeType":"YulTypedName","src":"2742:5:25","type":""},{"name":"len","nativeSrc":"2749:3:25","nodeType":"YulTypedName","src":"2749:3:25","type":""},{"name":"startIndex","nativeSrc":"2754:10:25","nodeType":"YulTypedName","src":"2754:10:25","type":""}],"src":"2687:543:25"},{"body":{"nativeSrc":"3299:54:25","nodeType":"YulBlock","src":"3299:54:25","statements":[{"nativeSrc":"3309:37:25","nodeType":"YulAssignment","src":"3309:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:25","nodeType":"YulIdentifier","src":"3334:4:25"},{"name":"value","nativeSrc":"3340:5:25","nodeType":"YulIdentifier","src":"3340:5:25"}],"functionName":{"name":"shr","nativeSrc":"3330:3:25","nodeType":"YulIdentifier","src":"3330:3:25"},"nativeSrc":"3330:16:25","nodeType":"YulFunctionCall","src":"3330:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:25","nodeType":"YulIdentifier","src":"3309:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:25","nodeType":"YulTypedName","src":"3274:4:25","type":""},{"name":"value","nativeSrc":"3280:5:25","nodeType":"YulTypedName","src":"3280:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:25","nodeType":"YulTypedName","src":"3290:8:25","type":""}],"src":"3236:117:25"},{"body":{"nativeSrc":"3410:118:25","nodeType":"YulBlock","src":"3410:118:25","statements":[{"nativeSrc":"3420:68:25","nodeType":"YulVariableDeclaration","src":"3420:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:25","nodeType":"YulLiteral","src":"3469:1:25","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:25","nodeType":"YulIdentifier","src":"3472:5:25"}],"functionName":{"name":"mul","nativeSrc":"3465:3:25","nodeType":"YulIdentifier","src":"3465:3:25"},"nativeSrc":"3465:13:25","nodeType":"YulFunctionCall","src":"3465:13:25"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:25","nodeType":"YulLiteral","src":"3484:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:25","nodeType":"YulIdentifier","src":"3480:3:25"},"nativeSrc":"3480:6:25","nodeType":"YulFunctionCall","src":"3480:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:25","nodeType":"YulIdentifier","src":"3436:28:25"},"nativeSrc":"3436:51:25","nodeType":"YulFunctionCall","src":"3436:51:25"}],"functionName":{"name":"not","nativeSrc":"3432:3:25","nodeType":"YulIdentifier","src":"3432:3:25"},"nativeSrc":"3432:56:25","nodeType":"YulFunctionCall","src":"3432:56:25"},"variables":[{"name":"mask","nativeSrc":"3424:4:25","nodeType":"YulTypedName","src":"3424:4:25","type":""}]},{"nativeSrc":"3497:25:25","nodeType":"YulAssignment","src":"3497:25:25","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:25","nodeType":"YulIdentifier","src":"3511:4:25"},{"name":"mask","nativeSrc":"3517:4:25","nodeType":"YulIdentifier","src":"3517:4:25"}],"functionName":{"name":"and","nativeSrc":"3507:3:25","nodeType":"YulIdentifier","src":"3507:3:25"},"nativeSrc":"3507:15:25","nodeType":"YulFunctionCall","src":"3507:15:25"},"variableNames":[{"name":"result","nativeSrc":"3497:6:25","nodeType":"YulIdentifier","src":"3497:6:25"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:25","nodeType":"YulTypedName","src":"3387:4:25","type":""},{"name":"bytes","nativeSrc":"3393:5:25","nodeType":"YulTypedName","src":"3393:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:25","nodeType":"YulTypedName","src":"3403:6:25","type":""}],"src":"3359:169:25"},{"body":{"nativeSrc":"3614:214:25","nodeType":"YulBlock","src":"3614:214:25","statements":[{"nativeSrc":"3747:37:25","nodeType":"YulAssignment","src":"3747:37:25","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:25","nodeType":"YulIdentifier","src":"3774:4:25"},{"name":"len","nativeSrc":"3780:3:25","nodeType":"YulIdentifier","src":"3780:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:25","nodeType":"YulIdentifier","src":"3755:18:25"},"nativeSrc":"3755:29:25","nodeType":"YulFunctionCall","src":"3755:29:25"},"variableNames":[{"name":"data","nativeSrc":"3747:4:25","nodeType":"YulIdentifier","src":"3747:4:25"}]},{"nativeSrc":"3793:29:25","nodeType":"YulAssignment","src":"3793:29:25","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:25","nodeType":"YulIdentifier","src":"3804:4:25"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:25","nodeType":"YulLiteral","src":"3814:1:25","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:25","nodeType":"YulIdentifier","src":"3817:3:25"}],"functionName":{"name":"mul","nativeSrc":"3810:3:25","nodeType":"YulIdentifier","src":"3810:3:25"},"nativeSrc":"3810:11:25","nodeType":"YulFunctionCall","src":"3810:11:25"}],"functionName":{"name":"or","nativeSrc":"3801:2:25","nodeType":"YulIdentifier","src":"3801:2:25"},"nativeSrc":"3801:21:25","nodeType":"YulFunctionCall","src":"3801:21:25"},"variableNames":[{"name":"used","nativeSrc":"3793:4:25","nodeType":"YulIdentifier","src":"3793:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:25","nodeType":"YulTypedName","src":"3595:4:25","type":""},{"name":"len","nativeSrc":"3601:3:25","nodeType":"YulTypedName","src":"3601:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:25","nodeType":"YulTypedName","src":"3609:4:25","type":""}],"src":"3533:295:25"},{"body":{"nativeSrc":"3925:1303:25","nodeType":"YulBlock","src":"3925:1303:25","statements":[{"nativeSrc":"3936:51:25","nodeType":"YulVariableDeclaration","src":"3936:51:25","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:25","nodeType":"YulIdentifier","src":"3983:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:25","nodeType":"YulIdentifier","src":"3950:32:25"},"nativeSrc":"3950:37:25","nodeType":"YulFunctionCall","src":"3950:37:25"},"variables":[{"name":"newLen","nativeSrc":"3940:6:25","nodeType":"YulTypedName","src":"3940:6:25","type":""}]},{"body":{"nativeSrc":"4072:22:25","nodeType":"YulBlock","src":"4072:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:25","nodeType":"YulIdentifier","src":"4074:16:25"},"nativeSrc":"4074:18:25","nodeType":"YulFunctionCall","src":"4074:18:25"},"nativeSrc":"4074:18:25","nodeType":"YulExpressionStatement","src":"4074:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:25","nodeType":"YulIdentifier","src":"4044:6:25"},{"kind":"number","nativeSrc":"4052:18:25","nodeType":"YulLiteral","src":"4052:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:25","nodeType":"YulIdentifier","src":"4041:2:25"},"nativeSrc":"4041:30:25","nodeType":"YulFunctionCall","src":"4041:30:25"},"nativeSrc":"4038:56:25","nodeType":"YulIf","src":"4038:56:25"},{"nativeSrc":"4104:52:25","nodeType":"YulVariableDeclaration","src":"4104:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:25","nodeType":"YulIdentifier","src":"4150:4:25"}],"functionName":{"name":"sload","nativeSrc":"4144:5:25","nodeType":"YulIdentifier","src":"4144:5:25"},"nativeSrc":"4144:11:25","nodeType":"YulFunctionCall","src":"4144:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:25","nodeType":"YulIdentifier","src":"4118:25:25"},"nativeSrc":"4118:38:25","nodeType":"YulFunctionCall","src":"4118:38:25"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:25","nodeType":"YulTypedName","src":"4108:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:25","nodeType":"YulIdentifier","src":"4249:4:25"},{"name":"oldLen","nativeSrc":"4255:6:25","nodeType":"YulIdentifier","src":"4255:6:25"},{"name":"newLen","nativeSrc":"4263:6:25","nodeType":"YulIdentifier","src":"4263:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:25","nodeType":"YulIdentifier","src":"4203:45:25"},"nativeSrc":"4203:67:25","nodeType":"YulFunctionCall","src":"4203:67:25"},"nativeSrc":"4203:67:25","nodeType":"YulExpressionStatement","src":"4203:67:25"},{"nativeSrc":"4280:18:25","nodeType":"YulVariableDeclaration","src":"4280:18:25","value":{"kind":"number","nativeSrc":"4297:1:25","nodeType":"YulLiteral","src":"4297:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:25","nodeType":"YulTypedName","src":"4284:9:25","type":""}]},{"nativeSrc":"4308:17:25","nodeType":"YulAssignment","src":"4308:17:25","value":{"kind":"number","nativeSrc":"4321:4:25","nodeType":"YulLiteral","src":"4321:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:25","nodeType":"YulIdentifier","src":"4308:9:25"}]},{"cases":[{"body":{"nativeSrc":"4372:611:25","nodeType":"YulBlock","src":"4372:611:25","statements":[{"nativeSrc":"4386:37:25","nodeType":"YulVariableDeclaration","src":"4386:37:25","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:25","nodeType":"YulIdentifier","src":"4405:6:25"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:25","nodeType":"YulLiteral","src":"4417:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:25","nodeType":"YulIdentifier","src":"4413:3:25"},"nativeSrc":"4413:9:25","nodeType":"YulFunctionCall","src":"4413:9:25"}],"functionName":{"name":"and","nativeSrc":"4401:3:25","nodeType":"YulIdentifier","src":"4401:3:25"},"nativeSrc":"4401:22:25","nodeType":"YulFunctionCall","src":"4401:22:25"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:25","nodeType":"YulTypedName","src":"4390:7:25","type":""}]},{"nativeSrc":"4437:51:25","nodeType":"YulVariableDeclaration","src":"4437:51:25","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:25","nodeType":"YulIdentifier","src":"4483:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:25","nodeType":"YulIdentifier","src":"4451:31:25"},"nativeSrc":"4451:37:25","nodeType":"YulFunctionCall","src":"4451:37:25"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:25","nodeType":"YulTypedName","src":"4441:6:25","type":""}]},{"nativeSrc":"4501:10:25","nodeType":"YulVariableDeclaration","src":"4501:10:25","value":{"kind":"number","nativeSrc":"4510:1:25","nodeType":"YulLiteral","src":"4510:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:25","nodeType":"YulTypedName","src":"4505:1:25","type":""}]},{"body":{"nativeSrc":"4569:163:25","nodeType":"YulBlock","src":"4569:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:25","nodeType":"YulIdentifier","src":"4594:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:25","nodeType":"YulIdentifier","src":"4612:3:25"},{"name":"srcOffset","nativeSrc":"4617:9:25","nodeType":"YulIdentifier","src":"4617:9:25"}],"functionName":{"name":"add","nativeSrc":"4608:3:25","nodeType":"YulIdentifier","src":"4608:3:25"},"nativeSrc":"4608:19:25","nodeType":"YulFunctionCall","src":"4608:19:25"}],"functionName":{"name":"mload","nativeSrc":"4602:5:25","nodeType":"YulIdentifier","src":"4602:5:25"},"nativeSrc":"4602:26:25","nodeType":"YulFunctionCall","src":"4602:26:25"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:25","nodeType":"YulIdentifier","src":"4587:6:25"},"nativeSrc":"4587:42:25","nodeType":"YulFunctionCall","src":"4587:42:25"},"nativeSrc":"4587:42:25","nodeType":"YulExpressionStatement","src":"4587:42:25"},{"nativeSrc":"4646:24:25","nodeType":"YulAssignment","src":"4646:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:25","nodeType":"YulIdentifier","src":"4660:6:25"},{"kind":"number","nativeSrc":"4668:1:25","nodeType":"YulLiteral","src":"4668:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:25","nodeType":"YulIdentifier","src":"4656:3:25"},"nativeSrc":"4656:14:25","nodeType":"YulFunctionCall","src":"4656:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:25","nodeType":"YulIdentifier","src":"4646:6:25"}]},{"nativeSrc":"4687:31:25","nodeType":"YulAssignment","src":"4687:31:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:25","nodeType":"YulIdentifier","src":"4704:9:25"},{"kind":"number","nativeSrc":"4715:2:25","nodeType":"YulLiteral","src":"4715:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:25","nodeType":"YulIdentifier","src":"4700:3:25"},"nativeSrc":"4700:18:25","nodeType":"YulFunctionCall","src":"4700:18:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:25","nodeType":"YulIdentifier","src":"4687:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:25","nodeType":"YulIdentifier","src":"4535:1:25"},{"name":"loopEnd","nativeSrc":"4538:7:25","nodeType":"YulIdentifier","src":"4538:7:25"}],"functionName":{"name":"lt","nativeSrc":"4532:2:25","nodeType":"YulIdentifier","src":"4532:2:25"},"nativeSrc":"4532:14:25","nodeType":"YulFunctionCall","src":"4532:14:25"},"nativeSrc":"4524:208:25","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:25","nodeType":"YulBlock","src":"4547:21:25","statements":[{"nativeSrc":"4549:17:25","nodeType":"YulAssignment","src":"4549:17:25","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:25","nodeType":"YulIdentifier","src":"4558:1:25"},{"kind":"number","nativeSrc":"4561:4:25","nodeType":"YulLiteral","src":"4561:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:25","nodeType":"YulIdentifier","src":"4554:3:25"},"nativeSrc":"4554:12:25","nodeType":"YulFunctionCall","src":"4554:12:25"},"variableNames":[{"name":"i","nativeSrc":"4549:1:25","nodeType":"YulIdentifier","src":"4549:1:25"}]}]},"pre":{"nativeSrc":"4528:3:25","nodeType":"YulBlock","src":"4528:3:25","statements":[]},"src":"4524:208:25"},{"body":{"nativeSrc":"4768:156:25","nodeType":"YulBlock","src":"4768:156:25","statements":[{"nativeSrc":"4786:43:25","nodeType":"YulVariableDeclaration","src":"4786:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:25","nodeType":"YulIdentifier","src":"4813:3:25"},{"name":"srcOffset","nativeSrc":"4818:9:25","nodeType":"YulIdentifier","src":"4818:9:25"}],"functionName":{"name":"add","nativeSrc":"4809:3:25","nodeType":"YulIdentifier","src":"4809:3:25"},"nativeSrc":"4809:19:25","nodeType":"YulFunctionCall","src":"4809:19:25"}],"functionName":{"name":"mload","nativeSrc":"4803:5:25","nodeType":"YulIdentifier","src":"4803:5:25"},"nativeSrc":"4803:26:25","nodeType":"YulFunctionCall","src":"4803:26:25"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:25","nodeType":"YulTypedName","src":"4790:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:25","nodeType":"YulIdentifier","src":"4853:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:25","nodeType":"YulIdentifier","src":"4880:9:25"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:25","nodeType":"YulIdentifier","src":"4895:6:25"},{"kind":"number","nativeSrc":"4903:4:25","nodeType":"YulLiteral","src":"4903:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:25","nodeType":"YulIdentifier","src":"4891:3:25"},"nativeSrc":"4891:17:25","nodeType":"YulFunctionCall","src":"4891:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:25","nodeType":"YulIdentifier","src":"4861:18:25"},"nativeSrc":"4861:48:25","nodeType":"YulFunctionCall","src":"4861:48:25"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:25","nodeType":"YulIdentifier","src":"4846:6:25"},"nativeSrc":"4846:64:25","nodeType":"YulFunctionCall","src":"4846:64:25"},"nativeSrc":"4846:64:25","nodeType":"YulExpressionStatement","src":"4846:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:25","nodeType":"YulIdentifier","src":"4751:7:25"},{"name":"newLen","nativeSrc":"4760:6:25","nodeType":"YulIdentifier","src":"4760:6:25"}],"functionName":{"name":"lt","nativeSrc":"4748:2:25","nodeType":"YulIdentifier","src":"4748:2:25"},"nativeSrc":"4748:19:25","nodeType":"YulFunctionCall","src":"4748:19:25"},"nativeSrc":"4745:179:25","nodeType":"YulIf","src":"4745:179:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:25","nodeType":"YulIdentifier","src":"4944:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:25","nodeType":"YulIdentifier","src":"4958:6:25"},{"kind":"number","nativeSrc":"4966:1:25","nodeType":"YulLiteral","src":"4966:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:25","nodeType":"YulIdentifier","src":"4954:3:25"},"nativeSrc":"4954:14:25","nodeType":"YulFunctionCall","src":"4954:14:25"},{"kind":"number","nativeSrc":"4970:1:25","nodeType":"YulLiteral","src":"4970:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:25","nodeType":"YulIdentifier","src":"4950:3:25"},"nativeSrc":"4950:22:25","nodeType":"YulFunctionCall","src":"4950:22:25"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:25","nodeType":"YulIdentifier","src":"4937:6:25"},"nativeSrc":"4937:36:25","nodeType":"YulFunctionCall","src":"4937:36:25"},"nativeSrc":"4937:36:25","nodeType":"YulExpressionStatement","src":"4937:36:25"}]},"nativeSrc":"4365:618:25","nodeType":"YulCase","src":"4365:618:25","value":{"kind":"number","nativeSrc":"4370:1:25","nodeType":"YulLiteral","src":"4370:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:25","nodeType":"YulBlock","src":"5000:222:25","statements":[{"nativeSrc":"5014:14:25","nodeType":"YulVariableDeclaration","src":"5014:14:25","value":{"kind":"number","nativeSrc":"5027:1:25","nodeType":"YulLiteral","src":"5027:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:25","nodeType":"YulTypedName","src":"5018:5:25","type":""}]},{"body":{"nativeSrc":"5051:67:25","nodeType":"YulBlock","src":"5051:67:25","statements":[{"nativeSrc":"5069:35:25","nodeType":"YulAssignment","src":"5069:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:25","nodeType":"YulIdentifier","src":"5088:3:25"},{"name":"srcOffset","nativeSrc":"5093:9:25","nodeType":"YulIdentifier","src":"5093:9:25"}],"functionName":{"name":"add","nativeSrc":"5084:3:25","nodeType":"YulIdentifier","src":"5084:3:25"},"nativeSrc":"5084:19:25","nodeType":"YulFunctionCall","src":"5084:19:25"}],"functionName":{"name":"mload","nativeSrc":"5078:5:25","nodeType":"YulIdentifier","src":"5078:5:25"},"nativeSrc":"5078:26:25","nodeType":"YulFunctionCall","src":"5078:26:25"},"variableNames":[{"name":"value","nativeSrc":"5069:5:25","nodeType":"YulIdentifier","src":"5069:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:25","nodeType":"YulIdentifier","src":"5044:6:25"},"nativeSrc":"5041:77:25","nodeType":"YulIf","src":"5041:77:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:25","nodeType":"YulIdentifier","src":"5138:4:25"},{"arguments":[{"name":"value","nativeSrc":"5197:5:25","nodeType":"YulIdentifier","src":"5197:5:25"},{"name":"newLen","nativeSrc":"5204:6:25","nodeType":"YulIdentifier","src":"5204:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:25","nodeType":"YulIdentifier","src":"5144:52:25"},"nativeSrc":"5144:67:25","nodeType":"YulFunctionCall","src":"5144:67:25"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:25","nodeType":"YulIdentifier","src":"5131:6:25"},"nativeSrc":"5131:81:25","nodeType":"YulFunctionCall","src":"5131:81:25"},"nativeSrc":"5131:81:25","nodeType":"YulExpressionStatement","src":"5131:81:25"}]},"nativeSrc":"4992:230:25","nodeType":"YulCase","src":"4992:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:25","nodeType":"YulIdentifier","src":"4345:6:25"},{"kind":"number","nativeSrc":"4353:2:25","nodeType":"YulLiteral","src":"4353:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:25","nodeType":"YulIdentifier","src":"4342:2:25"},"nativeSrc":"4342:14:25","nodeType":"YulFunctionCall","src":"4342:14:25"},"nativeSrc":"4335:887:25","nodeType":"YulSwitch","src":"4335:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:25","nodeType":"YulTypedName","src":"3914:4:25","type":""},{"name":"src","nativeSrc":"3920:3:25","nodeType":"YulTypedName","src":"3920:3:25","type":""}],"src":"3833:1395:25"},{"body":{"nativeSrc":"5279:81:25","nodeType":"YulBlock","src":"5279:81:25","statements":[{"nativeSrc":"5289:65:25","nodeType":"YulAssignment","src":"5289:65:25","value":{"arguments":[{"name":"value","nativeSrc":"5304:5:25","nodeType":"YulIdentifier","src":"5304:5:25"},{"kind":"number","nativeSrc":"5311:42:25","nodeType":"YulLiteral","src":"5311:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5300:3:25","nodeType":"YulIdentifier","src":"5300:3:25"},"nativeSrc":"5300:54:25","nodeType":"YulFunctionCall","src":"5300:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"5289:7:25","nodeType":"YulIdentifier","src":"5289:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5234:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5261:5:25","nodeType":"YulTypedName","src":"5261:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5271:7:25","nodeType":"YulTypedName","src":"5271:7:25","type":""}],"src":"5234:126:25"},{"body":{"nativeSrc":"5411:51:25","nodeType":"YulBlock","src":"5411:51:25","statements":[{"nativeSrc":"5421:35:25","nodeType":"YulAssignment","src":"5421:35:25","value":{"arguments":[{"name":"value","nativeSrc":"5450:5:25","nodeType":"YulIdentifier","src":"5450:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5432:17:25","nodeType":"YulIdentifier","src":"5432:17:25"},"nativeSrc":"5432:24:25","nodeType":"YulFunctionCall","src":"5432:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"5421:7:25","nodeType":"YulIdentifier","src":"5421:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"5366:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5393:5:25","nodeType":"YulTypedName","src":"5393:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5403:7:25","nodeType":"YulTypedName","src":"5403:7:25","type":""}],"src":"5366:96:25"},{"body":{"nativeSrc":"5533:53:25","nodeType":"YulBlock","src":"5533:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5550:3:25","nodeType":"YulIdentifier","src":"5550:3:25"},{"arguments":[{"name":"value","nativeSrc":"5573:5:25","nodeType":"YulIdentifier","src":"5573:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5555:17:25","nodeType":"YulIdentifier","src":"5555:17:25"},"nativeSrc":"5555:24:25","nodeType":"YulFunctionCall","src":"5555:24:25"}],"functionName":{"name":"mstore","nativeSrc":"5543:6:25","nodeType":"YulIdentifier","src":"5543:6:25"},"nativeSrc":"5543:37:25","nodeType":"YulFunctionCall","src":"5543:37:25"},"nativeSrc":"5543:37:25","nodeType":"YulExpressionStatement","src":"5543:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5468:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5521:5:25","nodeType":"YulTypedName","src":"5521:5:25","type":""},{"name":"pos","nativeSrc":"5528:3:25","nodeType":"YulTypedName","src":"5528:3:25","type":""}],"src":"5468:118:25"},{"body":{"nativeSrc":"5690:124:25","nodeType":"YulBlock","src":"5690:124:25","statements":[{"nativeSrc":"5700:26:25","nodeType":"YulAssignment","src":"5700:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5712:9:25","nodeType":"YulIdentifier","src":"5712:9:25"},{"kind":"number","nativeSrc":"5723:2:25","nodeType":"YulLiteral","src":"5723:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5708:3:25","nodeType":"YulIdentifier","src":"5708:3:25"},"nativeSrc":"5708:18:25","nodeType":"YulFunctionCall","src":"5708:18:25"},"variableNames":[{"name":"tail","nativeSrc":"5700:4:25","nodeType":"YulIdentifier","src":"5700:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5780:6:25","nodeType":"YulIdentifier","src":"5780:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"5793:9:25","nodeType":"YulIdentifier","src":"5793:9:25"},{"kind":"number","nativeSrc":"5804:1:25","nodeType":"YulLiteral","src":"5804:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5789:3:25","nodeType":"YulIdentifier","src":"5789:3:25"},"nativeSrc":"5789:17:25","nodeType":"YulFunctionCall","src":"5789:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5736:43:25","nodeType":"YulIdentifier","src":"5736:43:25"},"nativeSrc":"5736:71:25","nodeType":"YulFunctionCall","src":"5736:71:25"},"nativeSrc":"5736:71:25","nodeType":"YulExpressionStatement","src":"5736:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5592:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5662:9:25","nodeType":"YulTypedName","src":"5662:9:25","type":""},{"name":"value0","nativeSrc":"5674:6:25","nodeType":"YulTypedName","src":"5674:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5685:4:25","nodeType":"YulTypedName","src":"5685:4:25","type":""}],"src":"5592:222:25"},{"body":{"nativeSrc":"5865:32:25","nodeType":"YulBlock","src":"5865:32:25","statements":[{"nativeSrc":"5875:16:25","nodeType":"YulAssignment","src":"5875:16:25","value":{"name":"value","nativeSrc":"5886:5:25","nodeType":"YulIdentifier","src":"5886:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"5875:7:25","nodeType":"YulIdentifier","src":"5875:7:25"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5820:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5847:5:25","nodeType":"YulTypedName","src":"5847:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5857:7:25","nodeType":"YulTypedName","src":"5857:7:25","type":""}],"src":"5820:77:25"},{"body":{"nativeSrc":"5968:53:25","nodeType":"YulBlock","src":"5968:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5985:3:25","nodeType":"YulIdentifier","src":"5985:3:25"},{"arguments":[{"name":"value","nativeSrc":"6008:5:25","nodeType":"YulIdentifier","src":"6008:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5990:17:25","nodeType":"YulIdentifier","src":"5990:17:25"},"nativeSrc":"5990:24:25","nodeType":"YulFunctionCall","src":"5990:24:25"}],"functionName":{"name":"mstore","nativeSrc":"5978:6:25","nodeType":"YulIdentifier","src":"5978:6:25"},"nativeSrc":"5978:37:25","nodeType":"YulFunctionCall","src":"5978:37:25"},"nativeSrc":"5978:37:25","nodeType":"YulExpressionStatement","src":"5978:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5903:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5956:5:25","nodeType":"YulTypedName","src":"5956:5:25","type":""},{"name":"pos","nativeSrc":"5963:3:25","nodeType":"YulTypedName","src":"5963:3:25","type":""}],"src":"5903:118:25"},{"body":{"nativeSrc":"6092:53:25","nodeType":"YulBlock","src":"6092:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6109:3:25","nodeType":"YulIdentifier","src":"6109:3:25"},{"arguments":[{"name":"value","nativeSrc":"6132:5:25","nodeType":"YulIdentifier","src":"6132:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6114:17:25","nodeType":"YulIdentifier","src":"6114:17:25"},"nativeSrc":"6114:24:25","nodeType":"YulFunctionCall","src":"6114:24:25"}],"functionName":{"name":"mstore","nativeSrc":"6102:6:25","nodeType":"YulIdentifier","src":"6102:6:25"},"nativeSrc":"6102:37:25","nodeType":"YulFunctionCall","src":"6102:37:25"},"nativeSrc":"6102:37:25","nodeType":"YulExpressionStatement","src":"6102:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6027:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6080:5:25","nodeType":"YulTypedName","src":"6080:5:25","type":""},{"name":"pos","nativeSrc":"6087:3:25","nodeType":"YulTypedName","src":"6087:3:25","type":""}],"src":"6027:118:25"},{"body":{"nativeSrc":"6361:454:25","nodeType":"YulBlock","src":"6361:454:25","statements":[{"nativeSrc":"6371:27:25","nodeType":"YulAssignment","src":"6371:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6383:9:25","nodeType":"YulIdentifier","src":"6383:9:25"},{"kind":"number","nativeSrc":"6394:3:25","nodeType":"YulLiteral","src":"6394:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6379:3:25","nodeType":"YulIdentifier","src":"6379:3:25"},"nativeSrc":"6379:19:25","nodeType":"YulFunctionCall","src":"6379:19:25"},"variableNames":[{"name":"tail","nativeSrc":"6371:4:25","nodeType":"YulIdentifier","src":"6371:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6452:6:25","nodeType":"YulIdentifier","src":"6452:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6465:9:25","nodeType":"YulIdentifier","src":"6465:9:25"},{"kind":"number","nativeSrc":"6476:1:25","nodeType":"YulLiteral","src":"6476:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6461:3:25","nodeType":"YulIdentifier","src":"6461:3:25"},"nativeSrc":"6461:17:25","nodeType":"YulFunctionCall","src":"6461:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6408:43:25","nodeType":"YulIdentifier","src":"6408:43:25"},"nativeSrc":"6408:71:25","nodeType":"YulFunctionCall","src":"6408:71:25"},"nativeSrc":"6408:71:25","nodeType":"YulExpressionStatement","src":"6408:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6533:6:25","nodeType":"YulIdentifier","src":"6533:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6546:9:25","nodeType":"YulIdentifier","src":"6546:9:25"},{"kind":"number","nativeSrc":"6557:2:25","nodeType":"YulLiteral","src":"6557:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6542:3:25","nodeType":"YulIdentifier","src":"6542:3:25"},"nativeSrc":"6542:18:25","nodeType":"YulFunctionCall","src":"6542:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6489:43:25","nodeType":"YulIdentifier","src":"6489:43:25"},"nativeSrc":"6489:72:25","nodeType":"YulFunctionCall","src":"6489:72:25"},"nativeSrc":"6489:72:25","nodeType":"YulExpressionStatement","src":"6489:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6615:6:25","nodeType":"YulIdentifier","src":"6615:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6628:9:25","nodeType":"YulIdentifier","src":"6628:9:25"},{"kind":"number","nativeSrc":"6639:2:25","nodeType":"YulLiteral","src":"6639:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6624:3:25","nodeType":"YulIdentifier","src":"6624:3:25"},"nativeSrc":"6624:18:25","nodeType":"YulFunctionCall","src":"6624:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6571:43:25","nodeType":"YulIdentifier","src":"6571:43:25"},"nativeSrc":"6571:72:25","nodeType":"YulFunctionCall","src":"6571:72:25"},"nativeSrc":"6571:72:25","nodeType":"YulExpressionStatement","src":"6571:72:25"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"6697:6:25","nodeType":"YulIdentifier","src":"6697:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6710:9:25","nodeType":"YulIdentifier","src":"6710:9:25"},{"kind":"number","nativeSrc":"6721:2:25","nodeType":"YulLiteral","src":"6721:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6706:3:25","nodeType":"YulIdentifier","src":"6706:3:25"},"nativeSrc":"6706:18:25","nodeType":"YulFunctionCall","src":"6706:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6653:43:25","nodeType":"YulIdentifier","src":"6653:43:25"},"nativeSrc":"6653:72:25","nodeType":"YulFunctionCall","src":"6653:72:25"},"nativeSrc":"6653:72:25","nodeType":"YulExpressionStatement","src":"6653:72:25"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"6779:6:25","nodeType":"YulIdentifier","src":"6779:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6792:9:25","nodeType":"YulIdentifier","src":"6792:9:25"},{"kind":"number","nativeSrc":"6803:3:25","nodeType":"YulLiteral","src":"6803:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"6788:3:25","nodeType":"YulIdentifier","src":"6788:3:25"},"nativeSrc":"6788:19:25","nodeType":"YulFunctionCall","src":"6788:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6735:43:25","nodeType":"YulIdentifier","src":"6735:43:25"},"nativeSrc":"6735:73:25","nodeType":"YulFunctionCall","src":"6735:73:25"},"nativeSrc":"6735:73:25","nodeType":"YulExpressionStatement","src":"6735:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"6151:664:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6301:9:25","nodeType":"YulTypedName","src":"6301:9:25","type":""},{"name":"value4","nativeSrc":"6313:6:25","nodeType":"YulTypedName","src":"6313:6:25","type":""},{"name":"value3","nativeSrc":"6321:6:25","nodeType":"YulTypedName","src":"6321:6:25","type":""},{"name":"value2","nativeSrc":"6329:6:25","nodeType":"YulTypedName","src":"6329:6:25","type":""},{"name":"value1","nativeSrc":"6337:6:25","nodeType":"YulTypedName","src":"6337:6:25","type":""},{"name":"value0","nativeSrc":"6345:6:25","nodeType":"YulTypedName","src":"6345:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6356:4:25","nodeType":"YulTypedName","src":"6356:4:25","type":""}],"src":"6151:664:25"},{"body":{"nativeSrc":"6917:73:25","nodeType":"YulBlock","src":"6917:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6934:3:25","nodeType":"YulIdentifier","src":"6934:3:25"},{"name":"length","nativeSrc":"6939:6:25","nodeType":"YulIdentifier","src":"6939:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6927:6:25","nodeType":"YulIdentifier","src":"6927:6:25"},"nativeSrc":"6927:19:25","nodeType":"YulFunctionCall","src":"6927:19:25"},"nativeSrc":"6927:19:25","nodeType":"YulExpressionStatement","src":"6927:19:25"},{"nativeSrc":"6955:29:25","nodeType":"YulAssignment","src":"6955:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"6974:3:25","nodeType":"YulIdentifier","src":"6974:3:25"},{"kind":"number","nativeSrc":"6979:4:25","nodeType":"YulLiteral","src":"6979:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6970:3:25","nodeType":"YulIdentifier","src":"6970:3:25"},"nativeSrc":"6970:14:25","nodeType":"YulFunctionCall","src":"6970:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"6955:11:25","nodeType":"YulIdentifier","src":"6955:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6821:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6889:3:25","nodeType":"YulTypedName","src":"6889:3:25","type":""},{"name":"length","nativeSrc":"6894:6:25","nodeType":"YulTypedName","src":"6894:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6905:11:25","nodeType":"YulTypedName","src":"6905:11:25","type":""}],"src":"6821:169:25"},{"body":{"nativeSrc":"7058:184:25","nodeType":"YulBlock","src":"7058:184:25","statements":[{"nativeSrc":"7068:10:25","nodeType":"YulVariableDeclaration","src":"7068:10:25","value":{"kind":"number","nativeSrc":"7077:1:25","nodeType":"YulLiteral","src":"7077:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7072:1:25","nodeType":"YulTypedName","src":"7072:1:25","type":""}]},{"body":{"nativeSrc":"7137:63:25","nodeType":"YulBlock","src":"7137:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7162:3:25","nodeType":"YulIdentifier","src":"7162:3:25"},{"name":"i","nativeSrc":"7167:1:25","nodeType":"YulIdentifier","src":"7167:1:25"}],"functionName":{"name":"add","nativeSrc":"7158:3:25","nodeType":"YulIdentifier","src":"7158:3:25"},"nativeSrc":"7158:11:25","nodeType":"YulFunctionCall","src":"7158:11:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7181:3:25","nodeType":"YulIdentifier","src":"7181:3:25"},{"name":"i","nativeSrc":"7186:1:25","nodeType":"YulIdentifier","src":"7186:1:25"}],"functionName":{"name":"add","nativeSrc":"7177:3:25","nodeType":"YulIdentifier","src":"7177:3:25"},"nativeSrc":"7177:11:25","nodeType":"YulFunctionCall","src":"7177:11:25"}],"functionName":{"name":"mload","nativeSrc":"7171:5:25","nodeType":"YulIdentifier","src":"7171:5:25"},"nativeSrc":"7171:18:25","nodeType":"YulFunctionCall","src":"7171:18:25"}],"functionName":{"name":"mstore","nativeSrc":"7151:6:25","nodeType":"YulIdentifier","src":"7151:6:25"},"nativeSrc":"7151:39:25","nodeType":"YulFunctionCall","src":"7151:39:25"},"nativeSrc":"7151:39:25","nodeType":"YulExpressionStatement","src":"7151:39:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7098:1:25","nodeType":"YulIdentifier","src":"7098:1:25"},{"name":"length","nativeSrc":"7101:6:25","nodeType":"YulIdentifier","src":"7101:6:25"}],"functionName":{"name":"lt","nativeSrc":"7095:2:25","nodeType":"YulIdentifier","src":"7095:2:25"},"nativeSrc":"7095:13:25","nodeType":"YulFunctionCall","src":"7095:13:25"},"nativeSrc":"7087:113:25","nodeType":"YulForLoop","post":{"nativeSrc":"7109:19:25","nodeType":"YulBlock","src":"7109:19:25","statements":[{"nativeSrc":"7111:15:25","nodeType":"YulAssignment","src":"7111:15:25","value":{"arguments":[{"name":"i","nativeSrc":"7120:1:25","nodeType":"YulIdentifier","src":"7120:1:25"},{"kind":"number","nativeSrc":"7123:2:25","nodeType":"YulLiteral","src":"7123:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7116:3:25","nodeType":"YulIdentifier","src":"7116:3:25"},"nativeSrc":"7116:10:25","nodeType":"YulFunctionCall","src":"7116:10:25"},"variableNames":[{"name":"i","nativeSrc":"7111:1:25","nodeType":"YulIdentifier","src":"7111:1:25"}]}]},"pre":{"nativeSrc":"7091:3:25","nodeType":"YulBlock","src":"7091:3:25","statements":[]},"src":"7087:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7220:3:25","nodeType":"YulIdentifier","src":"7220:3:25"},{"name":"length","nativeSrc":"7225:6:25","nodeType":"YulIdentifier","src":"7225:6:25"}],"functionName":{"name":"add","nativeSrc":"7216:3:25","nodeType":"YulIdentifier","src":"7216:3:25"},"nativeSrc":"7216:16:25","nodeType":"YulFunctionCall","src":"7216:16:25"},{"kind":"number","nativeSrc":"7234:1:25","nodeType":"YulLiteral","src":"7234:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7209:6:25","nodeType":"YulIdentifier","src":"7209:6:25"},"nativeSrc":"7209:27:25","nodeType":"YulFunctionCall","src":"7209:27:25"},"nativeSrc":"7209:27:25","nodeType":"YulExpressionStatement","src":"7209:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6996:246:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7040:3:25","nodeType":"YulTypedName","src":"7040:3:25","type":""},{"name":"dst","nativeSrc":"7045:3:25","nodeType":"YulTypedName","src":"7045:3:25","type":""},{"name":"length","nativeSrc":"7050:6:25","nodeType":"YulTypedName","src":"7050:6:25","type":""}],"src":"6996:246:25"},{"body":{"nativeSrc":"7296:54:25","nodeType":"YulBlock","src":"7296:54:25","statements":[{"nativeSrc":"7306:38:25","nodeType":"YulAssignment","src":"7306:38:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7324:5:25","nodeType":"YulIdentifier","src":"7324:5:25"},{"kind":"number","nativeSrc":"7331:2:25","nodeType":"YulLiteral","src":"7331:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7320:3:25","nodeType":"YulIdentifier","src":"7320:3:25"},"nativeSrc":"7320:14:25","nodeType":"YulFunctionCall","src":"7320:14:25"},{"arguments":[{"kind":"number","nativeSrc":"7340:2:25","nodeType":"YulLiteral","src":"7340:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7336:3:25","nodeType":"YulIdentifier","src":"7336:3:25"},"nativeSrc":"7336:7:25","nodeType":"YulFunctionCall","src":"7336:7:25"}],"functionName":{"name":"and","nativeSrc":"7316:3:25","nodeType":"YulIdentifier","src":"7316:3:25"},"nativeSrc":"7316:28:25","nodeType":"YulFunctionCall","src":"7316:28:25"},"variableNames":[{"name":"result","nativeSrc":"7306:6:25","nodeType":"YulIdentifier","src":"7306:6:25"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"7248:102:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7279:5:25","nodeType":"YulTypedName","src":"7279:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7289:6:25","nodeType":"YulTypedName","src":"7289:6:25","type":""}],"src":"7248:102:25"},{"body":{"nativeSrc":"7448:285:25","nodeType":"YulBlock","src":"7448:285:25","statements":[{"nativeSrc":"7458:53:25","nodeType":"YulVariableDeclaration","src":"7458:53:25","value":{"arguments":[{"name":"value","nativeSrc":"7505:5:25","nodeType":"YulIdentifier","src":"7505:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7472:32:25","nodeType":"YulIdentifier","src":"7472:32:25"},"nativeSrc":"7472:39:25","nodeType":"YulFunctionCall","src":"7472:39:25"},"variables":[{"name":"length","nativeSrc":"7462:6:25","nodeType":"YulTypedName","src":"7462:6:25","type":""}]},{"nativeSrc":"7520:78:25","nodeType":"YulAssignment","src":"7520:78:25","value":{"arguments":[{"name":"pos","nativeSrc":"7586:3:25","nodeType":"YulIdentifier","src":"7586:3:25"},{"name":"length","nativeSrc":"7591:6:25","nodeType":"YulIdentifier","src":"7591:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7527:58:25","nodeType":"YulIdentifier","src":"7527:58:25"},"nativeSrc":"7527:71:25","nodeType":"YulFunctionCall","src":"7527:71:25"},"variableNames":[{"name":"pos","nativeSrc":"7520:3:25","nodeType":"YulIdentifier","src":"7520:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7646:5:25","nodeType":"YulIdentifier","src":"7646:5:25"},{"kind":"number","nativeSrc":"7653:4:25","nodeType":"YulLiteral","src":"7653:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7642:3:25","nodeType":"YulIdentifier","src":"7642:3:25"},"nativeSrc":"7642:16:25","nodeType":"YulFunctionCall","src":"7642:16:25"},{"name":"pos","nativeSrc":"7660:3:25","nodeType":"YulIdentifier","src":"7660:3:25"},{"name":"length","nativeSrc":"7665:6:25","nodeType":"YulIdentifier","src":"7665:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7607:34:25","nodeType":"YulIdentifier","src":"7607:34:25"},"nativeSrc":"7607:65:25","nodeType":"YulFunctionCall","src":"7607:65:25"},"nativeSrc":"7607:65:25","nodeType":"YulExpressionStatement","src":"7607:65:25"},{"nativeSrc":"7681:46:25","nodeType":"YulAssignment","src":"7681:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"7692:3:25","nodeType":"YulIdentifier","src":"7692:3:25"},{"arguments":[{"name":"length","nativeSrc":"7719:6:25","nodeType":"YulIdentifier","src":"7719:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7697:21:25","nodeType":"YulIdentifier","src":"7697:21:25"},"nativeSrc":"7697:29:25","nodeType":"YulFunctionCall","src":"7697:29:25"}],"functionName":{"name":"add","nativeSrc":"7688:3:25","nodeType":"YulIdentifier","src":"7688:3:25"},"nativeSrc":"7688:39:25","nodeType":"YulFunctionCall","src":"7688:39:25"},"variableNames":[{"name":"end","nativeSrc":"7681:3:25","nodeType":"YulIdentifier","src":"7681:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7356:377:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7429:5:25","nodeType":"YulTypedName","src":"7429:5:25","type":""},{"name":"pos","nativeSrc":"7436:3:25","nodeType":"YulTypedName","src":"7436:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7444:3:25","nodeType":"YulTypedName","src":"7444:3:25","type":""}],"src":"7356:377:25"},{"body":{"nativeSrc":"7857:195:25","nodeType":"YulBlock","src":"7857:195:25","statements":[{"nativeSrc":"7867:26:25","nodeType":"YulAssignment","src":"7867:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7879:9:25","nodeType":"YulIdentifier","src":"7879:9:25"},{"kind":"number","nativeSrc":"7890:2:25","nodeType":"YulLiteral","src":"7890:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7875:3:25","nodeType":"YulIdentifier","src":"7875:3:25"},"nativeSrc":"7875:18:25","nodeType":"YulFunctionCall","src":"7875:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7867:4:25","nodeType":"YulIdentifier","src":"7867:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7914:9:25","nodeType":"YulIdentifier","src":"7914:9:25"},{"kind":"number","nativeSrc":"7925:1:25","nodeType":"YulLiteral","src":"7925:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7910:3:25","nodeType":"YulIdentifier","src":"7910:3:25"},"nativeSrc":"7910:17:25","nodeType":"YulFunctionCall","src":"7910:17:25"},{"arguments":[{"name":"tail","nativeSrc":"7933:4:25","nodeType":"YulIdentifier","src":"7933:4:25"},{"name":"headStart","nativeSrc":"7939:9:25","nodeType":"YulIdentifier","src":"7939:9:25"}],"functionName":{"name":"sub","nativeSrc":"7929:3:25","nodeType":"YulIdentifier","src":"7929:3:25"},"nativeSrc":"7929:20:25","nodeType":"YulFunctionCall","src":"7929:20:25"}],"functionName":{"name":"mstore","nativeSrc":"7903:6:25","nodeType":"YulIdentifier","src":"7903:6:25"},"nativeSrc":"7903:47:25","nodeType":"YulFunctionCall","src":"7903:47:25"},"nativeSrc":"7903:47:25","nodeType":"YulExpressionStatement","src":"7903:47:25"},{"nativeSrc":"7959:86:25","nodeType":"YulAssignment","src":"7959:86:25","value":{"arguments":[{"name":"value0","nativeSrc":"8031:6:25","nodeType":"YulIdentifier","src":"8031:6:25"},{"name":"tail","nativeSrc":"8040:4:25","nodeType":"YulIdentifier","src":"8040:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7967:63:25","nodeType":"YulIdentifier","src":"7967:63:25"},"nativeSrc":"7967:78:25","nodeType":"YulFunctionCall","src":"7967:78:25"},"variableNames":[{"name":"tail","nativeSrc":"7959:4:25","nodeType":"YulIdentifier","src":"7959:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7739:313:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7829:9:25","nodeType":"YulTypedName","src":"7829:9:25","type":""},{"name":"value0","nativeSrc":"7841:6:25","nodeType":"YulTypedName","src":"7841:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7852:4:25","nodeType":"YulTypedName","src":"7852:4:25","type":""}],"src":"7739:313:25"},{"body":{"nativeSrc":"8116:40:25","nodeType":"YulBlock","src":"8116:40:25","statements":[{"nativeSrc":"8127:22:25","nodeType":"YulAssignment","src":"8127:22:25","value":{"arguments":[{"name":"value","nativeSrc":"8143:5:25","nodeType":"YulIdentifier","src":"8143:5:25"}],"functionName":{"name":"mload","nativeSrc":"8137:5:25","nodeType":"YulIdentifier","src":"8137:5:25"},"nativeSrc":"8137:12:25","nodeType":"YulFunctionCall","src":"8137:12:25"},"variableNames":[{"name":"length","nativeSrc":"8127:6:25","nodeType":"YulIdentifier","src":"8127:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"8058:98:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8099:5:25","nodeType":"YulTypedName","src":"8099:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8109:6:25","nodeType":"YulTypedName","src":"8109:6:25","type":""}],"src":"8058:98:25"},{"body":{"nativeSrc":"8218:60:25","nodeType":"YulBlock","src":"8218:60:25","statements":[{"nativeSrc":"8228:11:25","nodeType":"YulAssignment","src":"8228:11:25","value":{"name":"ptr","nativeSrc":"8236:3:25","nodeType":"YulIdentifier","src":"8236:3:25"},"variableNames":[{"name":"data","nativeSrc":"8228:4:25","nodeType":"YulIdentifier","src":"8228:4:25"}]},{"nativeSrc":"8249:22:25","nodeType":"YulAssignment","src":"8249:22:25","value":{"arguments":[{"name":"ptr","nativeSrc":"8261:3:25","nodeType":"YulIdentifier","src":"8261:3:25"},{"kind":"number","nativeSrc":"8266:4:25","nodeType":"YulLiteral","src":"8266:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8257:3:25","nodeType":"YulIdentifier","src":"8257:3:25"},"nativeSrc":"8257:14:25","nodeType":"YulFunctionCall","src":"8257:14:25"},"variableNames":[{"name":"data","nativeSrc":"8249:4:25","nodeType":"YulIdentifier","src":"8249:4:25"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"8162:116:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8205:3:25","nodeType":"YulTypedName","src":"8205:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"8213:4:25","nodeType":"YulTypedName","src":"8213:4:25","type":""}],"src":"8162:116:25"},{"body":{"nativeSrc":"8339:99:25","nodeType":"YulBlock","src":"8339:99:25","statements":[{"nativeSrc":"8350:42:25","nodeType":"YulVariableDeclaration","src":"8350:42:25","value":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"8387:3:25","nodeType":"YulIdentifier","src":"8387:3:25"}],"functionName":{"name":"mload","nativeSrc":"8381:5:25","nodeType":"YulIdentifier","src":"8381:5:25"},"nativeSrc":"8381:10:25","nodeType":"YulFunctionCall","src":"8381:10:25"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"8363:17:25","nodeType":"YulIdentifier","src":"8363:17:25"},"nativeSrc":"8363:29:25","nodeType":"YulFunctionCall","src":"8363:29:25"},"variables":[{"name":"value","nativeSrc":"8354:5:25","nodeType":"YulTypedName","src":"8354:5:25","type":""}]},{"nativeSrc":"8402:29:25","nodeType":"YulAssignment","src":"8402:29:25","value":{"name":"value","nativeSrc":"8426:5:25","nodeType":"YulIdentifier","src":"8426:5:25"},"variableNames":[{"name":"returnValue","nativeSrc":"8402:11:25","nodeType":"YulIdentifier","src":"8402:11:25"}]}]},"name":"read_from_memoryt_bytes32","nativeSrc":"8284:154:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"8319:3:25","nodeType":"YulTypedName","src":"8319:3:25","type":""}],"returnVariables":[{"name":"returnValue","nativeSrc":"8327:11:25","nodeType":"YulTypedName","src":"8327:11:25","type":""}],"src":"8284:154:25"},{"body":{"nativeSrc":"8534:504:25","nodeType":"YulBlock","src":"8534:504:25","statements":[{"nativeSrc":"8545:52:25","nodeType":"YulVariableDeclaration","src":"8545:52:25","value":{"arguments":[{"name":"array","nativeSrc":"8591:5:25","nodeType":"YulIdentifier","src":"8591:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"8559:31:25","nodeType":"YulIdentifier","src":"8559:31:25"},"nativeSrc":"8559:38:25","nodeType":"YulFunctionCall","src":"8559:38:25"},"variables":[{"name":"length","nativeSrc":"8549:6:25","nodeType":"YulTypedName","src":"8549:6:25","type":""}]},{"nativeSrc":"8606:21:25","nodeType":"YulVariableDeclaration","src":"8606:21:25","value":{"name":"array","nativeSrc":"8622:5:25","nodeType":"YulIdentifier","src":"8622:5:25"},"variables":[{"name":"dataArea","nativeSrc":"8610:8:25","nodeType":"YulTypedName","src":"8610:8:25","type":""}]},{"nativeSrc":"8637:52:25","nodeType":"YulAssignment","src":"8637:52:25","value":{"arguments":[{"name":"array","nativeSrc":"8683:5:25","nodeType":"YulIdentifier","src":"8683:5:25"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nativeSrc":"8649:33:25","nodeType":"YulIdentifier","src":"8649:33:25"},"nativeSrc":"8649:40:25","nodeType":"YulFunctionCall","src":"8649:40:25"},"variableNames":[{"name":"dataArea","nativeSrc":"8637:8:25","nodeType":"YulIdentifier","src":"8637:8:25"}]},{"nativeSrc":"8699:44:25","nodeType":"YulAssignment","src":"8699:44:25","value":{"arguments":[{"name":"dataArea","nativeSrc":"8734:8:25","nodeType":"YulIdentifier","src":"8734:8:25"}],"functionName":{"name":"read_from_memoryt_bytes32","nativeSrc":"8708:25:25","nodeType":"YulIdentifier","src":"8708:25:25"},"nativeSrc":"8708:35:25","nodeType":"YulFunctionCall","src":"8708:35:25"},"variableNames":[{"name":"value","nativeSrc":"8699:5:25","nodeType":"YulIdentifier","src":"8699:5:25"}]},{"body":{"nativeSrc":"8771:260:25","nodeType":"YulBlock","src":"8771:260:25","statements":[{"nativeSrc":"8785:236:25","nodeType":"YulAssignment","src":"8785:236:25","value":{"arguments":[{"name":"value","nativeSrc":"8815:5:25","nodeType":"YulIdentifier","src":"8815:5:25"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8882:1:25","nodeType":"YulLiteral","src":"8882:1:25","type":"","value":"8"},{"arguments":[{"kind":"number","nativeSrc":"8889:2:25","nodeType":"YulLiteral","src":"8889:2:25","type":"","value":"32"},{"name":"length","nativeSrc":"8893:6:25","nodeType":"YulIdentifier","src":"8893:6:25"}],"functionName":{"name":"sub","nativeSrc":"8885:3:25","nodeType":"YulIdentifier","src":"8885:3:25"},"nativeSrc":"8885:15:25","nodeType":"YulFunctionCall","src":"8885:15:25"}],"functionName":{"name":"mul","nativeSrc":"8878:3:25","nodeType":"YulIdentifier","src":"8878:3:25"},"nativeSrc":"8878:23:25","nodeType":"YulFunctionCall","src":"8878:23:25"},{"kind":"number","nativeSrc":"8923:66:25","nodeType":"YulLiteral","src":"8923:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"8838:18:25","nodeType":"YulIdentifier","src":"8838:18:25"},"nativeSrc":"8838:169:25","nodeType":"YulFunctionCall","src":"8838:169:25"}],"functionName":{"name":"and","nativeSrc":"8794:3:25","nodeType":"YulIdentifier","src":"8794:3:25"},"nativeSrc":"8794:227:25","nodeType":"YulFunctionCall","src":"8794:227:25"},"variableNames":[{"name":"value","nativeSrc":"8785:5:25","nodeType":"YulIdentifier","src":"8785:5:25"}]}]},"condition":{"arguments":[{"name":"length","nativeSrc":"8759:6:25","nodeType":"YulIdentifier","src":"8759:6:25"},{"kind":"number","nativeSrc":"8767:2:25","nodeType":"YulLiteral","src":"8767:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"8756:2:25","nodeType":"YulIdentifier","src":"8756:2:25"},"nativeSrc":"8756:14:25","nodeType":"YulFunctionCall","src":"8756:14:25"},"nativeSrc":"8753:278:25","nodeType":"YulIf","src":"8753:278:25"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nativeSrc":"8444:594:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"8518:5:25","nodeType":"YulTypedName","src":"8518:5:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8528:5:25","nodeType":"YulTypedName","src":"8528:5:25","type":""}],"src":"8444:594:25"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537061726B000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537061726B000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7344414900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x6BD JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x110 SWAP2 SWAP1 PUSH3 0x6BD JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x188 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17F SWAP2 SWAP1 PUSH3 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x199 DUP2 PUSH3 0x251 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1B0 PUSH1 0x6 DUP4 PUSH3 0x317 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x1CE PUSH1 0x7 DUP3 PUSH3 0x317 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x20D PUSH3 0x36F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x9E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x33D JUMPI PUSH3 0x335 DUP4 PUSH3 0x3CC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x369 JUMP JUMPDEST DUP3 PUSH3 0x34F DUP4 PUSH3 0x439 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x360 SWAP2 SWAP1 PUSH3 0x6BD JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x3B1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x41C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x413 SWAP2 SWAP1 PUSH3 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x42A SWAP1 PUSH3 0x974 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4C5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4DB JUMPI PUSH3 0x4DA PUSH3 0x47D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x545 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x506 JUMP JUMPDEST PUSH3 0x551 DUP7 DUP4 PUSH3 0x506 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x59E PUSH3 0x598 PUSH3 0x592 DUP5 PUSH3 0x569 JUMP JUMPDEST PUSH3 0x573 JUMP JUMPDEST PUSH3 0x569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5BA DUP4 PUSH3 0x57D JUMP JUMPDEST PUSH3 0x5D2 PUSH3 0x5C9 DUP3 PUSH3 0x5A5 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x513 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5E9 PUSH3 0x5DA JUMP JUMPDEST PUSH3 0x5F6 DUP2 DUP5 DUP5 PUSH3 0x5AF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x61E JUMPI PUSH3 0x612 PUSH1 0x0 DUP3 PUSH3 0x5DF JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x66D JUMPI PUSH3 0x637 DUP2 PUSH3 0x4E1 JUMP JUMPDEST PUSH3 0x642 DUP5 PUSH3 0x4F6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x652 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x66A PUSH3 0x661 DUP6 PUSH3 0x4F6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5FB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x692 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x672 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6AD DUP4 DUP4 PUSH3 0x67F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x6C8 DUP3 PUSH3 0x443 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6E4 JUMPI PUSH3 0x6E3 PUSH3 0x44E JUMP JUMPDEST JUMPDEST PUSH3 0x6F0 DUP3 SLOAD PUSH3 0x4AC JUMP JUMPDEST PUSH3 0x6FD DUP3 DUP3 DUP6 PUSH3 0x622 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x735 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x720 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x72C DUP6 DUP3 PUSH3 0x69F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x79C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x745 DUP7 PUSH3 0x4E1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x76F JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x748 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x78F JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x78B PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x67F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7D1 DUP3 PUSH3 0x7A4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7E3 DUP2 PUSH3 0x7C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x800 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x7D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x81B DUP2 PUSH3 0x806 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x82C DUP2 PUSH3 0x569 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0x849 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0x810 JUMP JUMPDEST PUSH3 0x858 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x810 JUMP JUMPDEST PUSH3 0x867 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x810 JUMP JUMPDEST PUSH3 0x876 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x821 JUMP JUMPDEST PUSH3 0x885 PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x7D8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x8C0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8A3 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8EA DUP3 PUSH3 0x443 JUMP JUMPDEST PUSH3 0x8F6 DUP2 DUP6 PUSH3 0x88F JUMP JUMPDEST SWAP4 POP PUSH3 0x908 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8A0 JUMP JUMPDEST PUSH3 0x913 DUP2 PUSH3 0x8CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x93A DUP2 DUP5 PUSH3 0x8DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x96B DUP3 MLOAD PUSH3 0x806 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x981 DUP3 PUSH3 0x942 JUMP JUMPDEST DUP3 PUSH3 0x98D DUP5 PUSH3 0x94D JUMP JUMPDEST SWAP1 POP PUSH3 0x99A DUP2 PUSH3 0x95D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0x9DD JUMPI PUSH3 0x9D8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x506 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1F5C PUSH3 0xA3F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xD83 ADD MSTORE PUSH1 0x0 PUSH2 0xD48 ADD MSTORE PUSH1 0x0 PUSH2 0x1298 ADD MSTORE PUSH1 0x0 PUSH2 0x1277 ADD MSTORE PUSH1 0x0 PUSH2 0xA74 ADD MSTORE PUSH1 0x0 PUSH2 0xACA ADD MSTORE PUSH1 0x0 PUSH2 0xAF3 ADD MSTORE PUSH2 0x1F5C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x204 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x4CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A1 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x403 PUSH2 0x8CE JUMP JUMPDEST SWAP1 POP PUSH2 0x410 DUP2 DUP6 DUP6 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x430 PUSH2 0x8CE JUMP JUMPDEST SWAP1 POP PUSH2 0x43D DUP6 DUP3 DUP6 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x448 DUP6 DUP6 DUP6 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x467 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x474 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x47E DUP3 DUP3 PUSH2 0xBAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x4DC PUSH1 0x0 PUSH2 0xC30 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E9 DUP3 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x504 PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x50C PUSH2 0xD7A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52D JUMPI PUSH2 0x52C PUSH2 0x1D0C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x55B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5D3 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5FF SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x621 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x661 PUSH2 0x8CE JUMP JUMPDEST SWAP1 POP PUSH2 0x66E DUP2 DUP6 DUP6 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6BE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6ED DUP13 PUSH2 0xDB5 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x703 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x726 DUP3 PUSH2 0xE0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x736 DUP3 DUP8 DUP8 DUP8 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AA JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B5 DUP11 DUP11 DUP11 PUSH2 0x8D6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CB DUP2 PUSH2 0xC30 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 DUP5 DUP5 PUSH2 0x7C1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x976 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x966 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x975 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xE56 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6B DUP4 DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAEC JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB19 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xB21 PUSH2 0x1252 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4D PUSH2 0x59A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAC JUMPI PUSH2 0xB70 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC20 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2C PUSH1 0x0 DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD75 PUSH1 0x6 PUSH32 0x0 PUSH2 0x12E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDB0 PUSH1 0x7 PUSH32 0x0 PUSH2 0x12E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F PUSH2 0xE19 PUSH2 0xA70 JUMP JUMPDEST DUP4 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE38 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE48 DUP3 DUP3 PUSH2 0x14CD JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1027 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x110B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11E8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1305 JUMPI PUSH2 0x12FE DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP PUSH2 0x1392 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1311 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x133D SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x138A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x135F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x138A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x136D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x143E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B4 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x14C3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E0 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x162D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150E JUMPI PUSH2 0x150D PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1521 JUMPI PUSH2 0x1520 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1558 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157F JUMPI PUSH2 0x157E PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C4 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x162C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x163E DUP4 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165D JUMPI PUSH2 0x165C PUSH2 0x1D0C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x168F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x16EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x172F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1714 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1757 DUP3 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x1761 DUP2 DUP6 PUSH2 0x1700 JUMP JUMPDEST SWAP4 POP PUSH2 0x1771 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x173B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179F DUP2 DUP5 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 DUP3 PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181D DUP2 PUSH2 0x180A JUMP JUMPDEST DUP2 EQ PUSH2 0x1828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183A DUP2 PUSH2 0x1814 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1876 DUP6 DUP3 DUP7 ADD PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1895 DUP2 PUSH2 0x1880 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18BF DUP2 PUSH2 0x180A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F9 JUMPI PUSH2 0x18F8 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1918 DUP7 DUP3 DUP8 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1929 DUP7 DUP3 DUP8 ADD PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1949 DUP2 PUSH2 0x1933 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1964 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197D DUP2 PUSH2 0x196A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1998 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1974 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B3 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19C2 DUP5 DUP3 DUP6 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4A DUP2 PUSH2 0x180A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5C DUP4 DUP4 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A80 DUP3 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1A8A DUP2 DUP6 PUSH2 0x1A20 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A95 DUP4 PUSH2 0x1A31 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AC6 JUMPI DUP2 MLOAD PUSH2 0x1AAD DUP9 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AB8 DUP4 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A99 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1AE8 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x19F7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AFA DUP2 DUP10 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B0E DUP2 DUP9 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B1D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1B2A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1B37 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1974 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1B49 DUP2 DUP5 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1933 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B98 DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA7 DUP2 PUSH2 0x196A JUMP JUMPDEST DUP2 EQ PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC4 DUP2 PUSH2 0x1B9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BE9 JUMPI PUSH2 0x1BE8 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF7 DUP11 DUP3 DUP12 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1C08 DUP11 DUP3 DUP12 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1C19 DUP11 DUP3 DUP12 ADD PUSH2 0x182B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C2A DUP11 DUP3 DUP12 ADD PUSH2 0x182B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C3B DUP11 DUP3 DUP12 ADD PUSH2 0x1B89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C4C DUP11 DUP3 DUP12 ADD PUSH2 0x1BB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C5D DUP11 DUP3 DUP12 ADD PUSH2 0x1BB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C91 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CA2 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CF3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D06 JUMPI PUSH2 0x1D05 PUSH2 0x1CAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1D50 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1D5D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1D6A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1D77 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1D84 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1D91 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x18B6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DB1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1DBE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DDA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1DE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E36 DUP3 PUSH2 0x180A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E41 DUP4 PUSH2 0x180A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x1DFC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E74 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E81 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E8E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E9B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1EA8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EC7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1ED4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1940 JUMP JUMPDEST PUSH2 0x1EE1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1EEE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1974 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xB5FB9737BFB5 SHR 0xFC SHR PUSH19 0x53B631BC0E98D090540677CC801F5824020CEE INVALID 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"248:271:23:-:0;;;301:112;;;;;;;;;;1574:52:6;;;;;;;;;;;;;;;;;1613:4;3328:431:18;;;;;;;;;;;;;;;;;364:10:23;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;3401:45:18;3432:13;3401:4;:30;;;;:45;;;;:::i;:::-;3393:53;;;;;;3467:51;3501:16;3467:7;:33;;;;:51;;;;:::i;:::-;3456:62;;;;;;3558:4;3542:22;;;;;;3528:36;;;;;;3607:7;3591:25;;;;;;3574:42;;;;;;3644:13;3627:30;;;;;;3692:23;:21;;;:23;;:::i;:::-;3667:48;;;;;;3747:4;3725:27;;;;;;;;;;3328:431;;1574:52:6;248:271:23;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2914:340:14:-;3010:11;3059:2;3043:5;3037:19;:24;3033:215;;;3084:20;3098:5;3084:13;;;:20;;:::i;:::-;3077:27;;;;3033:215;3176:5;3135:32;3161:5;3135:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3219:17;;3195:42;;2914:340;;;;;:::o;4113:179:18:-;4168:7;2079:95;4226:11;;4239:14;;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;1708:286:14:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3135:202:15:-;3203:20;3311:10;3301:20;;3135:202;;;:::o;7:99:25:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:77::-;5857:7;5886:5;5875:16;;5820:77;;;:::o;5903:118::-;5990:24;6008:5;5990:24;:::i;:::-;5985:3;5978:37;5903:118;;:::o;6027:::-;6114:24;6132:5;6114:24;:::i;:::-;6109:3;6102:37;6027:118;;:::o;6151:664::-;6356:4;6394:3;6383:9;6379:19;6371:27;;6408:71;6476:1;6465:9;6461:17;6452:6;6408:71;:::i;:::-;6489:72;6557:2;6546:9;6542:18;6533:6;6489:72;:::i;:::-;6571;6639:2;6628:9;6624:18;6615:6;6571:72;:::i;:::-;6653;6721:2;6710:9;6706:18;6697:6;6653:72;:::i;:::-;6735:73;6803:3;6792:9;6788:19;6779:6;6735:73;:::i;:::-;6151:664;;;;;;;;:::o;6821:169::-;6905:11;6939:6;6934:3;6927:19;6979:4;6974:3;6970:14;6955:29;;6821:169;;;;:::o;6996:246::-;7077:1;7087:113;7101:6;7098:1;7095:13;7087:113;;;7186:1;7181:3;7177:11;7171:18;7167:1;7162:3;7158:11;7151:39;7123:2;7120:1;7116:10;7111:15;;7087:113;;;7234:1;7225:6;7220:3;7216:16;7209:27;7058:184;6996:246;;;:::o;7248:102::-;7289:6;7340:2;7336:7;7331:2;7324:5;7320:14;7316:28;7306:38;;7248:102;;;:::o;7356:377::-;7444:3;7472:39;7505:5;7472:39;:::i;:::-;7527:71;7591:6;7586:3;7527:71;:::i;:::-;7520:78;;7607:65;7665:6;7660:3;7653:4;7646:5;7642:16;7607:65;:::i;:::-;7697:29;7719:6;7697:29;:::i;:::-;7692:3;7688:39;7681:46;;7448:285;7356:377;;;;:::o;7739:313::-;7852:4;7890:2;7879:9;7875:18;7867:26;;7939:9;7933:4;7929:20;7925:1;7914:9;7910:17;7903:47;7967:78;8040:4;8031:6;7967:78;:::i;:::-;7959:86;;7739:313;;;;:::o;8058:98::-;8109:6;8143:5;8137:12;8127:22;;8058:98;;;:::o;8162:116::-;8213:4;8236:3;8228:11;;8266:4;8261:3;8257:14;8249:22;;8162:116;;;:::o;8284:154::-;8327:11;8363:29;8387:3;8381:10;8363:29;:::i;:::-;8426:5;8402:29;;8339:99;8284:154;;;:::o;8444:594::-;8528:5;8559:38;8591:5;8559:38;:::i;:::-;8622:5;8649:40;8683:5;8649:40;:::i;:::-;8637:52;;8708:35;8734:8;8708:35;:::i;:::-;8699:44;;8767:2;8759:6;8756:14;8753:278;;;8838:169;8923:66;8893:6;8889:2;8885:15;8882:1;8878:23;8838:169;:::i;:::-;8815:5;8794:227;8785:236;;8753:278;8534:504;;8444:594;;;:::o;248:271:23:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_1225":{"entryPoint":1117,"id":1225,"parameterSlots":0,"returnSlots":1},"@_EIP712Name_3750":{"entryPoint":3391,"id":3750,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_3762":{"entryPoint":3450,"id":3762,"parameterSlots":0,"returnSlots":1},"@_approve_885":{"entryPoint":2262,"id":885,"parameterSlots":3,"returnSlots":0},"@_approve_945":{"entryPoint":3670,"id":945,"parameterSlots":4,"returnSlots":0},"@_buildDomainSeparator_3680":{"entryPoint":4690,"id":3680,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":2855,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_3659":{"entryPoint":2672,"id":3659,"parameterSlots":0,"returnSlots":1},"@_hashTypedDataV4_3696":{"entryPoint":3596,"id":3696,"parameterSlots":1,"returnSlots":1},"@_mint_834":{"entryPoint":2990,"id":834,"parameterSlots":2,"returnSlots":0},"@_msgSender_2528":{"entryPoint":2254,"id":2528,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_993":{"entryPoint":2280,"id":993,"parameterSlots":3,"returnSlots":0},"@_throwError_3535":{"entryPoint":5325,"id":3535,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3120,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_724":{"entryPoint":2428,"id":724,"parameterSlots":3,"returnSlots":0},"@_update_801":{"entryPoint":4141,"id":801,"parameterSlots":3,"returnSlots":0},"@_useNonce_2580":{"entryPoint":3509,"id":2580,"parameterSlots":1,"returnSlots":1},"@allowance_621":{"entryPoint":1985,"id":621,"parameterSlots":2,"returnSlots":1},"@approve_645":{"entryPoint":1016,"id":645,"parameterSlots":2,"returnSlots":1},"@balanceOf_580":{"entryPoint":1154,"id":580,"parameterSlots":1,"returnSlots":1},"@byteLength_2724":{"entryPoint":5797,"id":2724,"parameterSlots":1,"returnSlots":1},"@decimals_558":{"entryPoint":1108,"id":558,"parameterSlots":0,"returnSlots":1},"@eip712Domain_3738":{"entryPoint":1264,"id":3738,"parameterSlots":0,"returnSlots":7},"@mint_5378":{"entryPoint":1132,"id":5378,"parameterSlots":2,"returnSlots":0},"@name_540":{"entryPoint":870,"id":540,"parameterSlots":0,"returnSlots":1},"@nonces_1215":{"entryPoint":1246,"id":1215,"parameterSlots":1,"returnSlots":1},"@nonces_2565":{"entryPoint":3318,"id":2565,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":1434,"id":67,"parameterSlots":0,"returnSlots":1},"@permit_1198":{"entryPoint":1657,"id":1198,"parameterSlots":7,"returnSlots":0},"@recover_3486":{"entryPoint":3622,"id":3486,"parameterSlots":4,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1226,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_549":{"entryPoint":1476,"id":549,"parameterSlots":0,"returnSlots":1},"@toStringWithFallback_2791":{"entryPoint":4840,"id":2791,"parameterSlots":2,"returnSlots":1},"@toString_2692":{"entryPoint":5681,"id":2692,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_3836":{"entryPoint":5016,"id":3836,"parameterSlots":2,"returnSlots":1},"@totalSupply_567":{"entryPoint":1051,"id":567,"parameterSlots":0,"returnSlots":1},"@transferFrom_677":{"entryPoint":1061,"id":677,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2120,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_604":{"entryPoint":1622,"id":604,"parameterSlots":2,"returnSlots":1},"@tryRecover_3450":{"entryPoint":5081,"id":3450,"parameterSlots":4,"returnSlots":3},"abi_decode_t_address":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7093,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6187,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":7049,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6558,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7276,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6368,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":7114,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6208,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":6736,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6662,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6773,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":6647,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":6516,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5964,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":6721,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6326,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":6464,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":7580,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7621,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6867,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":6531,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":7483,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":7775,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":7858,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6021,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6341,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":6479,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6705,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6677,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5877,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":6760,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":6688,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5888,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7723,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6272,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":6603,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":6506,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6060,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6154,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":6451,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5905,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7387,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7676,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":7927,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7340,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7436,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6055,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5947,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":6110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7070,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6164,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":7026,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15381:25","nodeType":"YulBlock","src":"0:15381:25","statements":[{"body":{"nativeSrc":"66:40:25","nodeType":"YulBlock","src":"66:40:25","statements":[{"nativeSrc":"77:22:25","nodeType":"YulAssignment","src":"77:22:25","value":{"arguments":[{"name":"value","nativeSrc":"93:5:25","nodeType":"YulIdentifier","src":"93:5:25"}],"functionName":{"name":"mload","nativeSrc":"87:5:25","nodeType":"YulIdentifier","src":"87:5:25"},"nativeSrc":"87:12:25","nodeType":"YulFunctionCall","src":"87:12:25"},"variableNames":[{"name":"length","nativeSrc":"77:6:25","nodeType":"YulIdentifier","src":"77:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:25","nodeType":"YulTypedName","src":"49:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:25","nodeType":"YulTypedName","src":"59:6:25","type":""}],"src":"7:99:25"},{"body":{"nativeSrc":"208:73:25","nodeType":"YulBlock","src":"208:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:25","nodeType":"YulIdentifier","src":"225:3:25"},{"name":"length","nativeSrc":"230:6:25","nodeType":"YulIdentifier","src":"230:6:25"}],"functionName":{"name":"mstore","nativeSrc":"218:6:25","nodeType":"YulIdentifier","src":"218:6:25"},"nativeSrc":"218:19:25","nodeType":"YulFunctionCall","src":"218:19:25"},"nativeSrc":"218:19:25","nodeType":"YulExpressionStatement","src":"218:19:25"},{"nativeSrc":"246:29:25","nodeType":"YulAssignment","src":"246:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:25","nodeType":"YulIdentifier","src":"265:3:25"},{"kind":"number","nativeSrc":"270:4:25","nodeType":"YulLiteral","src":"270:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:25","nodeType":"YulIdentifier","src":"261:3:25"},"nativeSrc":"261:14:25","nodeType":"YulFunctionCall","src":"261:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:25","nodeType":"YulIdentifier","src":"246:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:25","nodeType":"YulTypedName","src":"180:3:25","type":""},{"name":"length","nativeSrc":"185:6:25","nodeType":"YulTypedName","src":"185:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:25","nodeType":"YulTypedName","src":"196:11:25","type":""}],"src":"112:169:25"},{"body":{"nativeSrc":"349:184:25","nodeType":"YulBlock","src":"349:184:25","statements":[{"nativeSrc":"359:10:25","nodeType":"YulVariableDeclaration","src":"359:10:25","value":{"kind":"number","nativeSrc":"368:1:25","nodeType":"YulLiteral","src":"368:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"363:1:25","nodeType":"YulTypedName","src":"363:1:25","type":""}]},{"body":{"nativeSrc":"428:63:25","nodeType":"YulBlock","src":"428:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"453:3:25","nodeType":"YulIdentifier","src":"453:3:25"},{"name":"i","nativeSrc":"458:1:25","nodeType":"YulIdentifier","src":"458:1:25"}],"functionName":{"name":"add","nativeSrc":"449:3:25","nodeType":"YulIdentifier","src":"449:3:25"},"nativeSrc":"449:11:25","nodeType":"YulFunctionCall","src":"449:11:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"472:3:25","nodeType":"YulIdentifier","src":"472:3:25"},{"name":"i","nativeSrc":"477:1:25","nodeType":"YulIdentifier","src":"477:1:25"}],"functionName":{"name":"add","nativeSrc":"468:3:25","nodeType":"YulIdentifier","src":"468:3:25"},"nativeSrc":"468:11:25","nodeType":"YulFunctionCall","src":"468:11:25"}],"functionName":{"name":"mload","nativeSrc":"462:5:25","nodeType":"YulIdentifier","src":"462:5:25"},"nativeSrc":"462:18:25","nodeType":"YulFunctionCall","src":"462:18:25"}],"functionName":{"name":"mstore","nativeSrc":"442:6:25","nodeType":"YulIdentifier","src":"442:6:25"},"nativeSrc":"442:39:25","nodeType":"YulFunctionCall","src":"442:39:25"},"nativeSrc":"442:39:25","nodeType":"YulExpressionStatement","src":"442:39:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"389:1:25","nodeType":"YulIdentifier","src":"389:1:25"},{"name":"length","nativeSrc":"392:6:25","nodeType":"YulIdentifier","src":"392:6:25"}],"functionName":{"name":"lt","nativeSrc":"386:2:25","nodeType":"YulIdentifier","src":"386:2:25"},"nativeSrc":"386:13:25","nodeType":"YulFunctionCall","src":"386:13:25"},"nativeSrc":"378:113:25","nodeType":"YulForLoop","post":{"nativeSrc":"400:19:25","nodeType":"YulBlock","src":"400:19:25","statements":[{"nativeSrc":"402:15:25","nodeType":"YulAssignment","src":"402:15:25","value":{"arguments":[{"name":"i","nativeSrc":"411:1:25","nodeType":"YulIdentifier","src":"411:1:25"},{"kind":"number","nativeSrc":"414:2:25","nodeType":"YulLiteral","src":"414:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"407:3:25","nodeType":"YulIdentifier","src":"407:3:25"},"nativeSrc":"407:10:25","nodeType":"YulFunctionCall","src":"407:10:25"},"variableNames":[{"name":"i","nativeSrc":"402:1:25","nodeType":"YulIdentifier","src":"402:1:25"}]}]},"pre":{"nativeSrc":"382:3:25","nodeType":"YulBlock","src":"382:3:25","statements":[]},"src":"378:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"511:3:25","nodeType":"YulIdentifier","src":"511:3:25"},{"name":"length","nativeSrc":"516:6:25","nodeType":"YulIdentifier","src":"516:6:25"}],"functionName":{"name":"add","nativeSrc":"507:3:25","nodeType":"YulIdentifier","src":"507:3:25"},"nativeSrc":"507:16:25","nodeType":"YulFunctionCall","src":"507:16:25"},{"kind":"number","nativeSrc":"525:1:25","nodeType":"YulLiteral","src":"525:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"500:6:25","nodeType":"YulIdentifier","src":"500:6:25"},"nativeSrc":"500:27:25","nodeType":"YulFunctionCall","src":"500:27:25"},"nativeSrc":"500:27:25","nodeType":"YulExpressionStatement","src":"500:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:246:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:25","nodeType":"YulTypedName","src":"331:3:25","type":""},{"name":"dst","nativeSrc":"336:3:25","nodeType":"YulTypedName","src":"336:3:25","type":""},{"name":"length","nativeSrc":"341:6:25","nodeType":"YulTypedName","src":"341:6:25","type":""}],"src":"287:246:25"},{"body":{"nativeSrc":"587:54:25","nodeType":"YulBlock","src":"587:54:25","statements":[{"nativeSrc":"597:38:25","nodeType":"YulAssignment","src":"597:38:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"615:5:25","nodeType":"YulIdentifier","src":"615:5:25"},{"kind":"number","nativeSrc":"622:2:25","nodeType":"YulLiteral","src":"622:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"611:3:25","nodeType":"YulIdentifier","src":"611:3:25"},"nativeSrc":"611:14:25","nodeType":"YulFunctionCall","src":"611:14:25"},{"arguments":[{"kind":"number","nativeSrc":"631:2:25","nodeType":"YulLiteral","src":"631:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"627:3:25","nodeType":"YulIdentifier","src":"627:3:25"},"nativeSrc":"627:7:25","nodeType":"YulFunctionCall","src":"627:7:25"}],"functionName":{"name":"and","nativeSrc":"607:3:25","nodeType":"YulIdentifier","src":"607:3:25"},"nativeSrc":"607:28:25","nodeType":"YulFunctionCall","src":"607:28:25"},"variableNames":[{"name":"result","nativeSrc":"597:6:25","nodeType":"YulIdentifier","src":"597:6:25"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"539:102:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"570:5:25","nodeType":"YulTypedName","src":"570:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"580:6:25","nodeType":"YulTypedName","src":"580:6:25","type":""}],"src":"539:102:25"},{"body":{"nativeSrc":"739:285:25","nodeType":"YulBlock","src":"739:285:25","statements":[{"nativeSrc":"749:53:25","nodeType":"YulVariableDeclaration","src":"749:53:25","value":{"arguments":[{"name":"value","nativeSrc":"796:5:25","nodeType":"YulIdentifier","src":"796:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"763:32:25","nodeType":"YulIdentifier","src":"763:32:25"},"nativeSrc":"763:39:25","nodeType":"YulFunctionCall","src":"763:39:25"},"variables":[{"name":"length","nativeSrc":"753:6:25","nodeType":"YulTypedName","src":"753:6:25","type":""}]},{"nativeSrc":"811:78:25","nodeType":"YulAssignment","src":"811:78:25","value":{"arguments":[{"name":"pos","nativeSrc":"877:3:25","nodeType":"YulIdentifier","src":"877:3:25"},{"name":"length","nativeSrc":"882:6:25","nodeType":"YulIdentifier","src":"882:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"818:58:25","nodeType":"YulIdentifier","src":"818:58:25"},"nativeSrc":"818:71:25","nodeType":"YulFunctionCall","src":"818:71:25"},"variableNames":[{"name":"pos","nativeSrc":"811:3:25","nodeType":"YulIdentifier","src":"811:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"937:5:25","nodeType":"YulIdentifier","src":"937:5:25"},{"kind":"number","nativeSrc":"944:4:25","nodeType":"YulLiteral","src":"944:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"933:3:25","nodeType":"YulIdentifier","src":"933:3:25"},"nativeSrc":"933:16:25","nodeType":"YulFunctionCall","src":"933:16:25"},{"name":"pos","nativeSrc":"951:3:25","nodeType":"YulIdentifier","src":"951:3:25"},{"name":"length","nativeSrc":"956:6:25","nodeType":"YulIdentifier","src":"956:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"898:34:25","nodeType":"YulIdentifier","src":"898:34:25"},"nativeSrc":"898:65:25","nodeType":"YulFunctionCall","src":"898:65:25"},"nativeSrc":"898:65:25","nodeType":"YulExpressionStatement","src":"898:65:25"},{"nativeSrc":"972:46:25","nodeType":"YulAssignment","src":"972:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"983:3:25","nodeType":"YulIdentifier","src":"983:3:25"},{"arguments":[{"name":"length","nativeSrc":"1010:6:25","nodeType":"YulIdentifier","src":"1010:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"988:21:25","nodeType":"YulIdentifier","src":"988:21:25"},"nativeSrc":"988:29:25","nodeType":"YulFunctionCall","src":"988:29:25"}],"functionName":{"name":"add","nativeSrc":"979:3:25","nodeType":"YulIdentifier","src":"979:3:25"},"nativeSrc":"979:39:25","nodeType":"YulFunctionCall","src":"979:39:25"},"variableNames":[{"name":"end","nativeSrc":"972:3:25","nodeType":"YulIdentifier","src":"972:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"647:377:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"720:5:25","nodeType":"YulTypedName","src":"720:5:25","type":""},{"name":"pos","nativeSrc":"727:3:25","nodeType":"YulTypedName","src":"727:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"735:3:25","nodeType":"YulTypedName","src":"735:3:25","type":""}],"src":"647:377:25"},{"body":{"nativeSrc":"1148:195:25","nodeType":"YulBlock","src":"1148:195:25","statements":[{"nativeSrc":"1158:26:25","nodeType":"YulAssignment","src":"1158:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1170:9:25","nodeType":"YulIdentifier","src":"1170:9:25"},{"kind":"number","nativeSrc":"1181:2:25","nodeType":"YulLiteral","src":"1181:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1166:3:25","nodeType":"YulIdentifier","src":"1166:3:25"},"nativeSrc":"1166:18:25","nodeType":"YulFunctionCall","src":"1166:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1158:4:25","nodeType":"YulIdentifier","src":"1158:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1205:9:25","nodeType":"YulIdentifier","src":"1205:9:25"},{"kind":"number","nativeSrc":"1216:1:25","nodeType":"YulLiteral","src":"1216:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1201:3:25","nodeType":"YulIdentifier","src":"1201:3:25"},"nativeSrc":"1201:17:25","nodeType":"YulFunctionCall","src":"1201:17:25"},{"arguments":[{"name":"tail","nativeSrc":"1224:4:25","nodeType":"YulIdentifier","src":"1224:4:25"},{"name":"headStart","nativeSrc":"1230:9:25","nodeType":"YulIdentifier","src":"1230:9:25"}],"functionName":{"name":"sub","nativeSrc":"1220:3:25","nodeType":"YulIdentifier","src":"1220:3:25"},"nativeSrc":"1220:20:25","nodeType":"YulFunctionCall","src":"1220:20:25"}],"functionName":{"name":"mstore","nativeSrc":"1194:6:25","nodeType":"YulIdentifier","src":"1194:6:25"},"nativeSrc":"1194:47:25","nodeType":"YulFunctionCall","src":"1194:47:25"},"nativeSrc":"1194:47:25","nodeType":"YulExpressionStatement","src":"1194:47:25"},{"nativeSrc":"1250:86:25","nodeType":"YulAssignment","src":"1250:86:25","value":{"arguments":[{"name":"value0","nativeSrc":"1322:6:25","nodeType":"YulIdentifier","src":"1322:6:25"},{"name":"tail","nativeSrc":"1331:4:25","nodeType":"YulIdentifier","src":"1331:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1258:63:25","nodeType":"YulIdentifier","src":"1258:63:25"},"nativeSrc":"1258:78:25","nodeType":"YulFunctionCall","src":"1258:78:25"},"variableNames":[{"name":"tail","nativeSrc":"1250:4:25","nodeType":"YulIdentifier","src":"1250:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1030:313:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1120:9:25","nodeType":"YulTypedName","src":"1120:9:25","type":""},{"name":"value0","nativeSrc":"1132:6:25","nodeType":"YulTypedName","src":"1132:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1143:4:25","nodeType":"YulTypedName","src":"1143:4:25","type":""}],"src":"1030:313:25"},{"body":{"nativeSrc":"1389:35:25","nodeType":"YulBlock","src":"1389:35:25","statements":[{"nativeSrc":"1399:19:25","nodeType":"YulAssignment","src":"1399:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"1415:2:25","nodeType":"YulLiteral","src":"1415:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1409:5:25","nodeType":"YulIdentifier","src":"1409:5:25"},"nativeSrc":"1409:9:25","nodeType":"YulFunctionCall","src":"1409:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"1399:6:25","nodeType":"YulIdentifier","src":"1399:6:25"}]}]},"name":"allocate_unbounded","nativeSrc":"1349:75:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1382:6:25","nodeType":"YulTypedName","src":"1382:6:25","type":""}],"src":"1349:75:25"},{"body":{"nativeSrc":"1519:28:25","nodeType":"YulBlock","src":"1519:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1536:1:25","nodeType":"YulLiteral","src":"1536:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1539:1:25","nodeType":"YulLiteral","src":"1539:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1529:6:25","nodeType":"YulIdentifier","src":"1529:6:25"},"nativeSrc":"1529:12:25","nodeType":"YulFunctionCall","src":"1529:12:25"},"nativeSrc":"1529:12:25","nodeType":"YulExpressionStatement","src":"1529:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1430:117:25","nodeType":"YulFunctionDefinition","src":"1430:117:25"},{"body":{"nativeSrc":"1642:28:25","nodeType":"YulBlock","src":"1642:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1659:1:25","nodeType":"YulLiteral","src":"1659:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1662:1:25","nodeType":"YulLiteral","src":"1662:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1652:6:25","nodeType":"YulIdentifier","src":"1652:6:25"},"nativeSrc":"1652:12:25","nodeType":"YulFunctionCall","src":"1652:12:25"},"nativeSrc":"1652:12:25","nodeType":"YulExpressionStatement","src":"1652:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1553:117:25","nodeType":"YulFunctionDefinition","src":"1553:117:25"},{"body":{"nativeSrc":"1721:81:25","nodeType":"YulBlock","src":"1721:81:25","statements":[{"nativeSrc":"1731:65:25","nodeType":"YulAssignment","src":"1731:65:25","value":{"arguments":[{"name":"value","nativeSrc":"1746:5:25","nodeType":"YulIdentifier","src":"1746:5:25"},{"kind":"number","nativeSrc":"1753:42:25","nodeType":"YulLiteral","src":"1753:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1742:3:25","nodeType":"YulIdentifier","src":"1742:3:25"},"nativeSrc":"1742:54:25","nodeType":"YulFunctionCall","src":"1742:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1731:7:25","nodeType":"YulIdentifier","src":"1731:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1676:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1703:5:25","nodeType":"YulTypedName","src":"1703:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1713:7:25","nodeType":"YulTypedName","src":"1713:7:25","type":""}],"src":"1676:126:25"},{"body":{"nativeSrc":"1853:51:25","nodeType":"YulBlock","src":"1853:51:25","statements":[{"nativeSrc":"1863:35:25","nodeType":"YulAssignment","src":"1863:35:25","value":{"arguments":[{"name":"value","nativeSrc":"1892:5:25","nodeType":"YulIdentifier","src":"1892:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1874:17:25","nodeType":"YulIdentifier","src":"1874:17:25"},"nativeSrc":"1874:24:25","nodeType":"YulFunctionCall","src":"1874:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1863:7:25","nodeType":"YulIdentifier","src":"1863:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"1808:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1835:5:25","nodeType":"YulTypedName","src":"1835:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1845:7:25","nodeType":"YulTypedName","src":"1845:7:25","type":""}],"src":"1808:96:25"},{"body":{"nativeSrc":"1953:79:25","nodeType":"YulBlock","src":"1953:79:25","statements":[{"body":{"nativeSrc":"2010:16:25","nodeType":"YulBlock","src":"2010:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2019:1:25","nodeType":"YulLiteral","src":"2019:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2022:1:25","nodeType":"YulLiteral","src":"2022:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2012:6:25","nodeType":"YulIdentifier","src":"2012:6:25"},"nativeSrc":"2012:12:25","nodeType":"YulFunctionCall","src":"2012:12:25"},"nativeSrc":"2012:12:25","nodeType":"YulExpressionStatement","src":"2012:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1976:5:25","nodeType":"YulIdentifier","src":"1976:5:25"},{"arguments":[{"name":"value","nativeSrc":"2001:5:25","nodeType":"YulIdentifier","src":"2001:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1983:17:25","nodeType":"YulIdentifier","src":"1983:17:25"},"nativeSrc":"1983:24:25","nodeType":"YulFunctionCall","src":"1983:24:25"}],"functionName":{"name":"eq","nativeSrc":"1973:2:25","nodeType":"YulIdentifier","src":"1973:2:25"},"nativeSrc":"1973:35:25","nodeType":"YulFunctionCall","src":"1973:35:25"}],"functionName":{"name":"iszero","nativeSrc":"1966:6:25","nodeType":"YulIdentifier","src":"1966:6:25"},"nativeSrc":"1966:43:25","nodeType":"YulFunctionCall","src":"1966:43:25"},"nativeSrc":"1963:63:25","nodeType":"YulIf","src":"1963:63:25"}]},"name":"validator_revert_t_address","nativeSrc":"1910:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1946:5:25","nodeType":"YulTypedName","src":"1946:5:25","type":""}],"src":"1910:122:25"},{"body":{"nativeSrc":"2090:87:25","nodeType":"YulBlock","src":"2090:87:25","statements":[{"nativeSrc":"2100:29:25","nodeType":"YulAssignment","src":"2100:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"2122:6:25","nodeType":"YulIdentifier","src":"2122:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"2109:12:25","nodeType":"YulIdentifier","src":"2109:12:25"},"nativeSrc":"2109:20:25","nodeType":"YulFunctionCall","src":"2109:20:25"},"variableNames":[{"name":"value","nativeSrc":"2100:5:25","nodeType":"YulIdentifier","src":"2100:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2165:5:25","nodeType":"YulIdentifier","src":"2165:5:25"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2138:26:25","nodeType":"YulIdentifier","src":"2138:26:25"},"nativeSrc":"2138:33:25","nodeType":"YulFunctionCall","src":"2138:33:25"},"nativeSrc":"2138:33:25","nodeType":"YulExpressionStatement","src":"2138:33:25"}]},"name":"abi_decode_t_address","nativeSrc":"2038:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2068:6:25","nodeType":"YulTypedName","src":"2068:6:25","type":""},{"name":"end","nativeSrc":"2076:3:25","nodeType":"YulTypedName","src":"2076:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2084:5:25","nodeType":"YulTypedName","src":"2084:5:25","type":""}],"src":"2038:139:25"},{"body":{"nativeSrc":"2228:32:25","nodeType":"YulBlock","src":"2228:32:25","statements":[{"nativeSrc":"2238:16:25","nodeType":"YulAssignment","src":"2238:16:25","value":{"name":"value","nativeSrc":"2249:5:25","nodeType":"YulIdentifier","src":"2249:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"2238:7:25","nodeType":"YulIdentifier","src":"2238:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2183:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2210:5:25","nodeType":"YulTypedName","src":"2210:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2220:7:25","nodeType":"YulTypedName","src":"2220:7:25","type":""}],"src":"2183:77:25"},{"body":{"nativeSrc":"2309:79:25","nodeType":"YulBlock","src":"2309:79:25","statements":[{"body":{"nativeSrc":"2366:16:25","nodeType":"YulBlock","src":"2366:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2375:1:25","nodeType":"YulLiteral","src":"2375:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2378:1:25","nodeType":"YulLiteral","src":"2378:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2368:6:25","nodeType":"YulIdentifier","src":"2368:6:25"},"nativeSrc":"2368:12:25","nodeType":"YulFunctionCall","src":"2368:12:25"},"nativeSrc":"2368:12:25","nodeType":"YulExpressionStatement","src":"2368:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2332:5:25","nodeType":"YulIdentifier","src":"2332:5:25"},{"arguments":[{"name":"value","nativeSrc":"2357:5:25","nodeType":"YulIdentifier","src":"2357:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2339:17:25","nodeType":"YulIdentifier","src":"2339:17:25"},"nativeSrc":"2339:24:25","nodeType":"YulFunctionCall","src":"2339:24:25"}],"functionName":{"name":"eq","nativeSrc":"2329:2:25","nodeType":"YulIdentifier","src":"2329:2:25"},"nativeSrc":"2329:35:25","nodeType":"YulFunctionCall","src":"2329:35:25"}],"functionName":{"name":"iszero","nativeSrc":"2322:6:25","nodeType":"YulIdentifier","src":"2322:6:25"},"nativeSrc":"2322:43:25","nodeType":"YulFunctionCall","src":"2322:43:25"},"nativeSrc":"2319:63:25","nodeType":"YulIf","src":"2319:63:25"}]},"name":"validator_revert_t_uint256","nativeSrc":"2266:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2302:5:25","nodeType":"YulTypedName","src":"2302:5:25","type":""}],"src":"2266:122:25"},{"body":{"nativeSrc":"2446:87:25","nodeType":"YulBlock","src":"2446:87:25","statements":[{"nativeSrc":"2456:29:25","nodeType":"YulAssignment","src":"2456:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"2478:6:25","nodeType":"YulIdentifier","src":"2478:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"2465:12:25","nodeType":"YulIdentifier","src":"2465:12:25"},"nativeSrc":"2465:20:25","nodeType":"YulFunctionCall","src":"2465:20:25"},"variableNames":[{"name":"value","nativeSrc":"2456:5:25","nodeType":"YulIdentifier","src":"2456:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2521:5:25","nodeType":"YulIdentifier","src":"2521:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2494:26:25","nodeType":"YulIdentifier","src":"2494:26:25"},"nativeSrc":"2494:33:25","nodeType":"YulFunctionCall","src":"2494:33:25"},"nativeSrc":"2494:33:25","nodeType":"YulExpressionStatement","src":"2494:33:25"}]},"name":"abi_decode_t_uint256","nativeSrc":"2394:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2424:6:25","nodeType":"YulTypedName","src":"2424:6:25","type":""},{"name":"end","nativeSrc":"2432:3:25","nodeType":"YulTypedName","src":"2432:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2440:5:25","nodeType":"YulTypedName","src":"2440:5:25","type":""}],"src":"2394:139:25"},{"body":{"nativeSrc":"2622:391:25","nodeType":"YulBlock","src":"2622:391:25","statements":[{"body":{"nativeSrc":"2668:83:25","nodeType":"YulBlock","src":"2668:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2670:77:25","nodeType":"YulIdentifier","src":"2670:77:25"},"nativeSrc":"2670:79:25","nodeType":"YulFunctionCall","src":"2670:79:25"},"nativeSrc":"2670:79:25","nodeType":"YulExpressionStatement","src":"2670:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2643:7:25","nodeType":"YulIdentifier","src":"2643:7:25"},{"name":"headStart","nativeSrc":"2652:9:25","nodeType":"YulIdentifier","src":"2652:9:25"}],"functionName":{"name":"sub","nativeSrc":"2639:3:25","nodeType":"YulIdentifier","src":"2639:3:25"},"nativeSrc":"2639:23:25","nodeType":"YulFunctionCall","src":"2639:23:25"},{"kind":"number","nativeSrc":"2664:2:25","nodeType":"YulLiteral","src":"2664:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2635:3:25","nodeType":"YulIdentifier","src":"2635:3:25"},"nativeSrc":"2635:32:25","nodeType":"YulFunctionCall","src":"2635:32:25"},"nativeSrc":"2632:119:25","nodeType":"YulIf","src":"2632:119:25"},{"nativeSrc":"2761:117:25","nodeType":"YulBlock","src":"2761:117:25","statements":[{"nativeSrc":"2776:15:25","nodeType":"YulVariableDeclaration","src":"2776:15:25","value":{"kind":"number","nativeSrc":"2790:1:25","nodeType":"YulLiteral","src":"2790:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2780:6:25","nodeType":"YulTypedName","src":"2780:6:25","type":""}]},{"nativeSrc":"2805:63:25","nodeType":"YulAssignment","src":"2805:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2840:9:25","nodeType":"YulIdentifier","src":"2840:9:25"},{"name":"offset","nativeSrc":"2851:6:25","nodeType":"YulIdentifier","src":"2851:6:25"}],"functionName":{"name":"add","nativeSrc":"2836:3:25","nodeType":"YulIdentifier","src":"2836:3:25"},"nativeSrc":"2836:22:25","nodeType":"YulFunctionCall","src":"2836:22:25"},{"name":"dataEnd","nativeSrc":"2860:7:25","nodeType":"YulIdentifier","src":"2860:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2815:20:25","nodeType":"YulIdentifier","src":"2815:20:25"},"nativeSrc":"2815:53:25","nodeType":"YulFunctionCall","src":"2815:53:25"},"variableNames":[{"name":"value0","nativeSrc":"2805:6:25","nodeType":"YulIdentifier","src":"2805:6:25"}]}]},{"nativeSrc":"2888:118:25","nodeType":"YulBlock","src":"2888:118:25","statements":[{"nativeSrc":"2903:16:25","nodeType":"YulVariableDeclaration","src":"2903:16:25","value":{"kind":"number","nativeSrc":"2917:2:25","nodeType":"YulLiteral","src":"2917:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2907:6:25","nodeType":"YulTypedName","src":"2907:6:25","type":""}]},{"nativeSrc":"2933:63:25","nodeType":"YulAssignment","src":"2933:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2968:9:25","nodeType":"YulIdentifier","src":"2968:9:25"},{"name":"offset","nativeSrc":"2979:6:25","nodeType":"YulIdentifier","src":"2979:6:25"}],"functionName":{"name":"add","nativeSrc":"2964:3:25","nodeType":"YulIdentifier","src":"2964:3:25"},"nativeSrc":"2964:22:25","nodeType":"YulFunctionCall","src":"2964:22:25"},{"name":"dataEnd","nativeSrc":"2988:7:25","nodeType":"YulIdentifier","src":"2988:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2943:20:25","nodeType":"YulIdentifier","src":"2943:20:25"},"nativeSrc":"2943:53:25","nodeType":"YulFunctionCall","src":"2943:53:25"},"variableNames":[{"name":"value1","nativeSrc":"2933:6:25","nodeType":"YulIdentifier","src":"2933:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2539:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:25","nodeType":"YulTypedName","src":"2584:9:25","type":""},{"name":"dataEnd","nativeSrc":"2595:7:25","nodeType":"YulTypedName","src":"2595:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2607:6:25","nodeType":"YulTypedName","src":"2607:6:25","type":""},{"name":"value1","nativeSrc":"2615:6:25","nodeType":"YulTypedName","src":"2615:6:25","type":""}],"src":"2539:474:25"},{"body":{"nativeSrc":"3061:48:25","nodeType":"YulBlock","src":"3061:48:25","statements":[{"nativeSrc":"3071:32:25","nodeType":"YulAssignment","src":"3071:32:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3096:5:25","nodeType":"YulIdentifier","src":"3096:5:25"}],"functionName":{"name":"iszero","nativeSrc":"3089:6:25","nodeType":"YulIdentifier","src":"3089:6:25"},"nativeSrc":"3089:13:25","nodeType":"YulFunctionCall","src":"3089:13:25"}],"functionName":{"name":"iszero","nativeSrc":"3082:6:25","nodeType":"YulIdentifier","src":"3082:6:25"},"nativeSrc":"3082:21:25","nodeType":"YulFunctionCall","src":"3082:21:25"},"variableNames":[{"name":"cleaned","nativeSrc":"3071:7:25","nodeType":"YulIdentifier","src":"3071:7:25"}]}]},"name":"cleanup_t_bool","nativeSrc":"3019:90:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3043:5:25","nodeType":"YulTypedName","src":"3043:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3053:7:25","nodeType":"YulTypedName","src":"3053:7:25","type":""}],"src":"3019:90:25"},{"body":{"nativeSrc":"3174:50:25","nodeType":"YulBlock","src":"3174:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3191:3:25","nodeType":"YulIdentifier","src":"3191:3:25"},{"arguments":[{"name":"value","nativeSrc":"3211:5:25","nodeType":"YulIdentifier","src":"3211:5:25"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3196:14:25","nodeType":"YulIdentifier","src":"3196:14:25"},"nativeSrc":"3196:21:25","nodeType":"YulFunctionCall","src":"3196:21:25"}],"functionName":{"name":"mstore","nativeSrc":"3184:6:25","nodeType":"YulIdentifier","src":"3184:6:25"},"nativeSrc":"3184:34:25","nodeType":"YulFunctionCall","src":"3184:34:25"},"nativeSrc":"3184:34:25","nodeType":"YulExpressionStatement","src":"3184:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3115:109:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3162:5:25","nodeType":"YulTypedName","src":"3162:5:25","type":""},{"name":"pos","nativeSrc":"3169:3:25","nodeType":"YulTypedName","src":"3169:3:25","type":""}],"src":"3115:109:25"},{"body":{"nativeSrc":"3322:118:25","nodeType":"YulBlock","src":"3322:118:25","statements":[{"nativeSrc":"3332:26:25","nodeType":"YulAssignment","src":"3332:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3344:9:25","nodeType":"YulIdentifier","src":"3344:9:25"},{"kind":"number","nativeSrc":"3355:2:25","nodeType":"YulLiteral","src":"3355:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3340:3:25","nodeType":"YulIdentifier","src":"3340:3:25"},"nativeSrc":"3340:18:25","nodeType":"YulFunctionCall","src":"3340:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3332:4:25","nodeType":"YulIdentifier","src":"3332:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3406:6:25","nodeType":"YulIdentifier","src":"3406:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"3419:9:25","nodeType":"YulIdentifier","src":"3419:9:25"},{"kind":"number","nativeSrc":"3430:1:25","nodeType":"YulLiteral","src":"3430:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3415:3:25","nodeType":"YulIdentifier","src":"3415:3:25"},"nativeSrc":"3415:17:25","nodeType":"YulFunctionCall","src":"3415:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3368:37:25","nodeType":"YulIdentifier","src":"3368:37:25"},"nativeSrc":"3368:65:25","nodeType":"YulFunctionCall","src":"3368:65:25"},"nativeSrc":"3368:65:25","nodeType":"YulExpressionStatement","src":"3368:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3230:210:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3294:9:25","nodeType":"YulTypedName","src":"3294:9:25","type":""},{"name":"value0","nativeSrc":"3306:6:25","nodeType":"YulTypedName","src":"3306:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3317:4:25","nodeType":"YulTypedName","src":"3317:4:25","type":""}],"src":"3230:210:25"},{"body":{"nativeSrc":"3511:53:25","nodeType":"YulBlock","src":"3511:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3528:3:25","nodeType":"YulIdentifier","src":"3528:3:25"},{"arguments":[{"name":"value","nativeSrc":"3551:5:25","nodeType":"YulIdentifier","src":"3551:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3533:17:25","nodeType":"YulIdentifier","src":"3533:17:25"},"nativeSrc":"3533:24:25","nodeType":"YulFunctionCall","src":"3533:24:25"}],"functionName":{"name":"mstore","nativeSrc":"3521:6:25","nodeType":"YulIdentifier","src":"3521:6:25"},"nativeSrc":"3521:37:25","nodeType":"YulFunctionCall","src":"3521:37:25"},"nativeSrc":"3521:37:25","nodeType":"YulExpressionStatement","src":"3521:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3446:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3499:5:25","nodeType":"YulTypedName","src":"3499:5:25","type":""},{"name":"pos","nativeSrc":"3506:3:25","nodeType":"YulTypedName","src":"3506:3:25","type":""}],"src":"3446:118:25"},{"body":{"nativeSrc":"3668:124:25","nodeType":"YulBlock","src":"3668:124:25","statements":[{"nativeSrc":"3678:26:25","nodeType":"YulAssignment","src":"3678:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"3690:9:25","nodeType":"YulIdentifier","src":"3690:9:25"},{"kind":"number","nativeSrc":"3701:2:25","nodeType":"YulLiteral","src":"3701:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3686:3:25","nodeType":"YulIdentifier","src":"3686:3:25"},"nativeSrc":"3686:18:25","nodeType":"YulFunctionCall","src":"3686:18:25"},"variableNames":[{"name":"tail","nativeSrc":"3678:4:25","nodeType":"YulIdentifier","src":"3678:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3758:6:25","nodeType":"YulIdentifier","src":"3758:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"3771:9:25","nodeType":"YulIdentifier","src":"3771:9:25"},{"kind":"number","nativeSrc":"3782:1:25","nodeType":"YulLiteral","src":"3782:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3767:3:25","nodeType":"YulIdentifier","src":"3767:3:25"},"nativeSrc":"3767:17:25","nodeType":"YulFunctionCall","src":"3767:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3714:43:25","nodeType":"YulIdentifier","src":"3714:43:25"},"nativeSrc":"3714:71:25","nodeType":"YulFunctionCall","src":"3714:71:25"},"nativeSrc":"3714:71:25","nodeType":"YulExpressionStatement","src":"3714:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3570:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3640:9:25","nodeType":"YulTypedName","src":"3640:9:25","type":""},{"name":"value0","nativeSrc":"3652:6:25","nodeType":"YulTypedName","src":"3652:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3663:4:25","nodeType":"YulTypedName","src":"3663:4:25","type":""}],"src":"3570:222:25"},{"body":{"nativeSrc":"3898:519:25","nodeType":"YulBlock","src":"3898:519:25","statements":[{"body":{"nativeSrc":"3944:83:25","nodeType":"YulBlock","src":"3944:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3946:77:25","nodeType":"YulIdentifier","src":"3946:77:25"},"nativeSrc":"3946:79:25","nodeType":"YulFunctionCall","src":"3946:79:25"},"nativeSrc":"3946:79:25","nodeType":"YulExpressionStatement","src":"3946:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3919:7:25","nodeType":"YulIdentifier","src":"3919:7:25"},{"name":"headStart","nativeSrc":"3928:9:25","nodeType":"YulIdentifier","src":"3928:9:25"}],"functionName":{"name":"sub","nativeSrc":"3915:3:25","nodeType":"YulIdentifier","src":"3915:3:25"},"nativeSrc":"3915:23:25","nodeType":"YulFunctionCall","src":"3915:23:25"},{"kind":"number","nativeSrc":"3940:2:25","nodeType":"YulLiteral","src":"3940:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3911:3:25","nodeType":"YulIdentifier","src":"3911:3:25"},"nativeSrc":"3911:32:25","nodeType":"YulFunctionCall","src":"3911:32:25"},"nativeSrc":"3908:119:25","nodeType":"YulIf","src":"3908:119:25"},{"nativeSrc":"4037:117:25","nodeType":"YulBlock","src":"4037:117:25","statements":[{"nativeSrc":"4052:15:25","nodeType":"YulVariableDeclaration","src":"4052:15:25","value":{"kind":"number","nativeSrc":"4066:1:25","nodeType":"YulLiteral","src":"4066:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4056:6:25","nodeType":"YulTypedName","src":"4056:6:25","type":""}]},{"nativeSrc":"4081:63:25","nodeType":"YulAssignment","src":"4081:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4116:9:25","nodeType":"YulIdentifier","src":"4116:9:25"},{"name":"offset","nativeSrc":"4127:6:25","nodeType":"YulIdentifier","src":"4127:6:25"}],"functionName":{"name":"add","nativeSrc":"4112:3:25","nodeType":"YulIdentifier","src":"4112:3:25"},"nativeSrc":"4112:22:25","nodeType":"YulFunctionCall","src":"4112:22:25"},{"name":"dataEnd","nativeSrc":"4136:7:25","nodeType":"YulIdentifier","src":"4136:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4091:20:25","nodeType":"YulIdentifier","src":"4091:20:25"},"nativeSrc":"4091:53:25","nodeType":"YulFunctionCall","src":"4091:53:25"},"variableNames":[{"name":"value0","nativeSrc":"4081:6:25","nodeType":"YulIdentifier","src":"4081:6:25"}]}]},{"nativeSrc":"4164:118:25","nodeType":"YulBlock","src":"4164:118:25","statements":[{"nativeSrc":"4179:16:25","nodeType":"YulVariableDeclaration","src":"4179:16:25","value":{"kind":"number","nativeSrc":"4193:2:25","nodeType":"YulLiteral","src":"4193:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4183:6:25","nodeType":"YulTypedName","src":"4183:6:25","type":""}]},{"nativeSrc":"4209:63:25","nodeType":"YulAssignment","src":"4209:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4244:9:25","nodeType":"YulIdentifier","src":"4244:9:25"},{"name":"offset","nativeSrc":"4255:6:25","nodeType":"YulIdentifier","src":"4255:6:25"}],"functionName":{"name":"add","nativeSrc":"4240:3:25","nodeType":"YulIdentifier","src":"4240:3:25"},"nativeSrc":"4240:22:25","nodeType":"YulFunctionCall","src":"4240:22:25"},{"name":"dataEnd","nativeSrc":"4264:7:25","nodeType":"YulIdentifier","src":"4264:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4219:20:25","nodeType":"YulIdentifier","src":"4219:20:25"},"nativeSrc":"4219:53:25","nodeType":"YulFunctionCall","src":"4219:53:25"},"variableNames":[{"name":"value1","nativeSrc":"4209:6:25","nodeType":"YulIdentifier","src":"4209:6:25"}]}]},{"nativeSrc":"4292:118:25","nodeType":"YulBlock","src":"4292:118:25","statements":[{"nativeSrc":"4307:16:25","nodeType":"YulVariableDeclaration","src":"4307:16:25","value":{"kind":"number","nativeSrc":"4321:2:25","nodeType":"YulLiteral","src":"4321:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4311:6:25","nodeType":"YulTypedName","src":"4311:6:25","type":""}]},{"nativeSrc":"4337:63:25","nodeType":"YulAssignment","src":"4337:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4372:9:25","nodeType":"YulIdentifier","src":"4372:9:25"},{"name":"offset","nativeSrc":"4383:6:25","nodeType":"YulIdentifier","src":"4383:6:25"}],"functionName":{"name":"add","nativeSrc":"4368:3:25","nodeType":"YulIdentifier","src":"4368:3:25"},"nativeSrc":"4368:22:25","nodeType":"YulFunctionCall","src":"4368:22:25"},{"name":"dataEnd","nativeSrc":"4392:7:25","nodeType":"YulIdentifier","src":"4392:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4347:20:25","nodeType":"YulIdentifier","src":"4347:20:25"},"nativeSrc":"4347:53:25","nodeType":"YulFunctionCall","src":"4347:53:25"},"variableNames":[{"name":"value2","nativeSrc":"4337:6:25","nodeType":"YulIdentifier","src":"4337:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3798:619:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3852:9:25","nodeType":"YulTypedName","src":"3852:9:25","type":""},{"name":"dataEnd","nativeSrc":"3863:7:25","nodeType":"YulTypedName","src":"3863:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3875:6:25","nodeType":"YulTypedName","src":"3875:6:25","type":""},{"name":"value1","nativeSrc":"3883:6:25","nodeType":"YulTypedName","src":"3883:6:25","type":""},{"name":"value2","nativeSrc":"3891:6:25","nodeType":"YulTypedName","src":"3891:6:25","type":""}],"src":"3798:619:25"},{"body":{"nativeSrc":"4466:43:25","nodeType":"YulBlock","src":"4466:43:25","statements":[{"nativeSrc":"4476:27:25","nodeType":"YulAssignment","src":"4476:27:25","value":{"arguments":[{"name":"value","nativeSrc":"4491:5:25","nodeType":"YulIdentifier","src":"4491:5:25"},{"kind":"number","nativeSrc":"4498:4:25","nodeType":"YulLiteral","src":"4498:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4487:3:25","nodeType":"YulIdentifier","src":"4487:3:25"},"nativeSrc":"4487:16:25","nodeType":"YulFunctionCall","src":"4487:16:25"},"variableNames":[{"name":"cleaned","nativeSrc":"4476:7:25","nodeType":"YulIdentifier","src":"4476:7:25"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4423:86:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4448:5:25","nodeType":"YulTypedName","src":"4448:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4458:7:25","nodeType":"YulTypedName","src":"4458:7:25","type":""}],"src":"4423:86:25"},{"body":{"nativeSrc":"4576:51:25","nodeType":"YulBlock","src":"4576:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4593:3:25","nodeType":"YulIdentifier","src":"4593:3:25"},{"arguments":[{"name":"value","nativeSrc":"4614:5:25","nodeType":"YulIdentifier","src":"4614:5:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4598:15:25","nodeType":"YulIdentifier","src":"4598:15:25"},"nativeSrc":"4598:22:25","nodeType":"YulFunctionCall","src":"4598:22:25"}],"functionName":{"name":"mstore","nativeSrc":"4586:6:25","nodeType":"YulIdentifier","src":"4586:6:25"},"nativeSrc":"4586:35:25","nodeType":"YulFunctionCall","src":"4586:35:25"},"nativeSrc":"4586:35:25","nodeType":"YulExpressionStatement","src":"4586:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4515:112:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4564:5:25","nodeType":"YulTypedName","src":"4564:5:25","type":""},{"name":"pos","nativeSrc":"4571:3:25","nodeType":"YulTypedName","src":"4571:3:25","type":""}],"src":"4515:112:25"},{"body":{"nativeSrc":"4727:120:25","nodeType":"YulBlock","src":"4727:120:25","statements":[{"nativeSrc":"4737:26:25","nodeType":"YulAssignment","src":"4737:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4749:9:25","nodeType":"YulIdentifier","src":"4749:9:25"},{"kind":"number","nativeSrc":"4760:2:25","nodeType":"YulLiteral","src":"4760:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4745:3:25","nodeType":"YulIdentifier","src":"4745:3:25"},"nativeSrc":"4745:18:25","nodeType":"YulFunctionCall","src":"4745:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4737:4:25","nodeType":"YulIdentifier","src":"4737:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4813:6:25","nodeType":"YulIdentifier","src":"4813:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"4826:9:25","nodeType":"YulIdentifier","src":"4826:9:25"},{"kind":"number","nativeSrc":"4837:1:25","nodeType":"YulLiteral","src":"4837:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4822:3:25","nodeType":"YulIdentifier","src":"4822:3:25"},"nativeSrc":"4822:17:25","nodeType":"YulFunctionCall","src":"4822:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4773:39:25","nodeType":"YulIdentifier","src":"4773:39:25"},"nativeSrc":"4773:67:25","nodeType":"YulFunctionCall","src":"4773:67:25"},"nativeSrc":"4773:67:25","nodeType":"YulExpressionStatement","src":"4773:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4633:214:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4699:9:25","nodeType":"YulTypedName","src":"4699:9:25","type":""},{"name":"value0","nativeSrc":"4711:6:25","nodeType":"YulTypedName","src":"4711:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4722:4:25","nodeType":"YulTypedName","src":"4722:4:25","type":""}],"src":"4633:214:25"},{"body":{"nativeSrc":"4898:32:25","nodeType":"YulBlock","src":"4898:32:25","statements":[{"nativeSrc":"4908:16:25","nodeType":"YulAssignment","src":"4908:16:25","value":{"name":"value","nativeSrc":"4919:5:25","nodeType":"YulIdentifier","src":"4919:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"4908:7:25","nodeType":"YulIdentifier","src":"4908:7:25"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"4853:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4880:5:25","nodeType":"YulTypedName","src":"4880:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4890:7:25","nodeType":"YulTypedName","src":"4890:7:25","type":""}],"src":"4853:77:25"},{"body":{"nativeSrc":"5001:53:25","nodeType":"YulBlock","src":"5001:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5018:3:25","nodeType":"YulIdentifier","src":"5018:3:25"},{"arguments":[{"name":"value","nativeSrc":"5041:5:25","nodeType":"YulIdentifier","src":"5041:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5023:17:25","nodeType":"YulIdentifier","src":"5023:17:25"},"nativeSrc":"5023:24:25","nodeType":"YulFunctionCall","src":"5023:24:25"}],"functionName":{"name":"mstore","nativeSrc":"5011:6:25","nodeType":"YulIdentifier","src":"5011:6:25"},"nativeSrc":"5011:37:25","nodeType":"YulFunctionCall","src":"5011:37:25"},"nativeSrc":"5011:37:25","nodeType":"YulExpressionStatement","src":"5011:37:25"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"4936:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4989:5:25","nodeType":"YulTypedName","src":"4989:5:25","type":""},{"name":"pos","nativeSrc":"4996:3:25","nodeType":"YulTypedName","src":"4996:3:25","type":""}],"src":"4936:118:25"},{"body":{"nativeSrc":"5158:124:25","nodeType":"YulBlock","src":"5158:124:25","statements":[{"nativeSrc":"5168:26:25","nodeType":"YulAssignment","src":"5168:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5180:9:25","nodeType":"YulIdentifier","src":"5180:9:25"},{"kind":"number","nativeSrc":"5191:2:25","nodeType":"YulLiteral","src":"5191:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5176:3:25","nodeType":"YulIdentifier","src":"5176:3:25"},"nativeSrc":"5176:18:25","nodeType":"YulFunctionCall","src":"5176:18:25"},"variableNames":[{"name":"tail","nativeSrc":"5168:4:25","nodeType":"YulIdentifier","src":"5168:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5248:6:25","nodeType":"YulIdentifier","src":"5248:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"5261:9:25","nodeType":"YulIdentifier","src":"5261:9:25"},{"kind":"number","nativeSrc":"5272:1:25","nodeType":"YulLiteral","src":"5272:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5257:3:25","nodeType":"YulIdentifier","src":"5257:3:25"},"nativeSrc":"5257:17:25","nodeType":"YulFunctionCall","src":"5257:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"5204:43:25","nodeType":"YulIdentifier","src":"5204:43:25"},"nativeSrc":"5204:71:25","nodeType":"YulFunctionCall","src":"5204:71:25"},"nativeSrc":"5204:71:25","nodeType":"YulExpressionStatement","src":"5204:71:25"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"5060:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5130:9:25","nodeType":"YulTypedName","src":"5130:9:25","type":""},{"name":"value0","nativeSrc":"5142:6:25","nodeType":"YulTypedName","src":"5142:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5153:4:25","nodeType":"YulTypedName","src":"5153:4:25","type":""}],"src":"5060:222:25"},{"body":{"nativeSrc":"5354:263:25","nodeType":"YulBlock","src":"5354:263:25","statements":[{"body":{"nativeSrc":"5400:83:25","nodeType":"YulBlock","src":"5400:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5402:77:25","nodeType":"YulIdentifier","src":"5402:77:25"},"nativeSrc":"5402:79:25","nodeType":"YulFunctionCall","src":"5402:79:25"},"nativeSrc":"5402:79:25","nodeType":"YulExpressionStatement","src":"5402:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5375:7:25","nodeType":"YulIdentifier","src":"5375:7:25"},{"name":"headStart","nativeSrc":"5384:9:25","nodeType":"YulIdentifier","src":"5384:9:25"}],"functionName":{"name":"sub","nativeSrc":"5371:3:25","nodeType":"YulIdentifier","src":"5371:3:25"},"nativeSrc":"5371:23:25","nodeType":"YulFunctionCall","src":"5371:23:25"},{"kind":"number","nativeSrc":"5396:2:25","nodeType":"YulLiteral","src":"5396:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5367:3:25","nodeType":"YulIdentifier","src":"5367:3:25"},"nativeSrc":"5367:32:25","nodeType":"YulFunctionCall","src":"5367:32:25"},"nativeSrc":"5364:119:25","nodeType":"YulIf","src":"5364:119:25"},{"nativeSrc":"5493:117:25","nodeType":"YulBlock","src":"5493:117:25","statements":[{"nativeSrc":"5508:15:25","nodeType":"YulVariableDeclaration","src":"5508:15:25","value":{"kind":"number","nativeSrc":"5522:1:25","nodeType":"YulLiteral","src":"5522:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5512:6:25","nodeType":"YulTypedName","src":"5512:6:25","type":""}]},{"nativeSrc":"5537:63:25","nodeType":"YulAssignment","src":"5537:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5572:9:25","nodeType":"YulIdentifier","src":"5572:9:25"},{"name":"offset","nativeSrc":"5583:6:25","nodeType":"YulIdentifier","src":"5583:6:25"}],"functionName":{"name":"add","nativeSrc":"5568:3:25","nodeType":"YulIdentifier","src":"5568:3:25"},"nativeSrc":"5568:22:25","nodeType":"YulFunctionCall","src":"5568:22:25"},{"name":"dataEnd","nativeSrc":"5592:7:25","nodeType":"YulIdentifier","src":"5592:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5547:20:25","nodeType":"YulIdentifier","src":"5547:20:25"},"nativeSrc":"5547:53:25","nodeType":"YulFunctionCall","src":"5547:53:25"},"variableNames":[{"name":"value0","nativeSrc":"5537:6:25","nodeType":"YulIdentifier","src":"5537:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5288:329:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5324:9:25","nodeType":"YulTypedName","src":"5324:9:25","type":""},{"name":"dataEnd","nativeSrc":"5335:7:25","nodeType":"YulTypedName","src":"5335:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5347:6:25","nodeType":"YulTypedName","src":"5347:6:25","type":""}],"src":"5288:329:25"},{"body":{"nativeSrc":"5667:105:25","nodeType":"YulBlock","src":"5667:105:25","statements":[{"nativeSrc":"5677:89:25","nodeType":"YulAssignment","src":"5677:89:25","value":{"arguments":[{"name":"value","nativeSrc":"5692:5:25","nodeType":"YulIdentifier","src":"5692:5:25"},{"kind":"number","nativeSrc":"5699:66:25","nodeType":"YulLiteral","src":"5699:66:25","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"5688:3:25","nodeType":"YulIdentifier","src":"5688:3:25"},"nativeSrc":"5688:78:25","nodeType":"YulFunctionCall","src":"5688:78:25"},"variableNames":[{"name":"cleaned","nativeSrc":"5677:7:25","nodeType":"YulIdentifier","src":"5677:7:25"}]}]},"name":"cleanup_t_bytes1","nativeSrc":"5623:149:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5649:5:25","nodeType":"YulTypedName","src":"5649:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5659:7:25","nodeType":"YulTypedName","src":"5659:7:25","type":""}],"src":"5623:149:25"},{"body":{"nativeSrc":"5841:52:25","nodeType":"YulBlock","src":"5841:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5858:3:25","nodeType":"YulIdentifier","src":"5858:3:25"},{"arguments":[{"name":"value","nativeSrc":"5880:5:25","nodeType":"YulIdentifier","src":"5880:5:25"}],"functionName":{"name":"cleanup_t_bytes1","nativeSrc":"5863:16:25","nodeType":"YulIdentifier","src":"5863:16:25"},"nativeSrc":"5863:23:25","nodeType":"YulFunctionCall","src":"5863:23:25"}],"functionName":{"name":"mstore","nativeSrc":"5851:6:25","nodeType":"YulIdentifier","src":"5851:6:25"},"nativeSrc":"5851:36:25","nodeType":"YulFunctionCall","src":"5851:36:25"},"nativeSrc":"5851:36:25","nodeType":"YulExpressionStatement","src":"5851:36:25"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"5778:115:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5829:5:25","nodeType":"YulTypedName","src":"5829:5:25","type":""},{"name":"pos","nativeSrc":"5836:3:25","nodeType":"YulTypedName","src":"5836:3:25","type":""}],"src":"5778:115:25"},{"body":{"nativeSrc":"5964:53:25","nodeType":"YulBlock","src":"5964:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5981:3:25","nodeType":"YulIdentifier","src":"5981:3:25"},{"arguments":[{"name":"value","nativeSrc":"6004:5:25","nodeType":"YulIdentifier","src":"6004:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5986:17:25","nodeType":"YulIdentifier","src":"5986:17:25"},"nativeSrc":"5986:24:25","nodeType":"YulFunctionCall","src":"5986:24:25"}],"functionName":{"name":"mstore","nativeSrc":"5974:6:25","nodeType":"YulIdentifier","src":"5974:6:25"},"nativeSrc":"5974:37:25","nodeType":"YulFunctionCall","src":"5974:37:25"},"nativeSrc":"5974:37:25","nodeType":"YulExpressionStatement","src":"5974:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5899:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5952:5:25","nodeType":"YulTypedName","src":"5952:5:25","type":""},{"name":"pos","nativeSrc":"5959:3:25","nodeType":"YulTypedName","src":"5959:3:25","type":""}],"src":"5899:118:25"},{"body":{"nativeSrc":"6097:40:25","nodeType":"YulBlock","src":"6097:40:25","statements":[{"nativeSrc":"6108:22:25","nodeType":"YulAssignment","src":"6108:22:25","value":{"arguments":[{"name":"value","nativeSrc":"6124:5:25","nodeType":"YulIdentifier","src":"6124:5:25"}],"functionName":{"name":"mload","nativeSrc":"6118:5:25","nodeType":"YulIdentifier","src":"6118:5:25"},"nativeSrc":"6118:12:25","nodeType":"YulFunctionCall","src":"6118:12:25"},"variableNames":[{"name":"length","nativeSrc":"6108:6:25","nodeType":"YulIdentifier","src":"6108:6:25"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6023:114:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6080:5:25","nodeType":"YulTypedName","src":"6080:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6090:6:25","nodeType":"YulTypedName","src":"6090:6:25","type":""}],"src":"6023:114:25"},{"body":{"nativeSrc":"6254:73:25","nodeType":"YulBlock","src":"6254:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6271:3:25","nodeType":"YulIdentifier","src":"6271:3:25"},{"name":"length","nativeSrc":"6276:6:25","nodeType":"YulIdentifier","src":"6276:6:25"}],"functionName":{"name":"mstore","nativeSrc":"6264:6:25","nodeType":"YulIdentifier","src":"6264:6:25"},"nativeSrc":"6264:19:25","nodeType":"YulFunctionCall","src":"6264:19:25"},"nativeSrc":"6264:19:25","nodeType":"YulExpressionStatement","src":"6264:19:25"},{"nativeSrc":"6292:29:25","nodeType":"YulAssignment","src":"6292:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"6311:3:25","nodeType":"YulIdentifier","src":"6311:3:25"},{"kind":"number","nativeSrc":"6316:4:25","nodeType":"YulLiteral","src":"6316:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6307:3:25","nodeType":"YulIdentifier","src":"6307:3:25"},"nativeSrc":"6307:14:25","nodeType":"YulFunctionCall","src":"6307:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"6292:11:25","nodeType":"YulIdentifier","src":"6292:11:25"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6143:184:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6226:3:25","nodeType":"YulTypedName","src":"6226:3:25","type":""},{"name":"length","nativeSrc":"6231:6:25","nodeType":"YulTypedName","src":"6231:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6242:11:25","nodeType":"YulTypedName","src":"6242:11:25","type":""}],"src":"6143:184:25"},{"body":{"nativeSrc":"6405:60:25","nodeType":"YulBlock","src":"6405:60:25","statements":[{"nativeSrc":"6415:11:25","nodeType":"YulAssignment","src":"6415:11:25","value":{"name":"ptr","nativeSrc":"6423:3:25","nodeType":"YulIdentifier","src":"6423:3:25"},"variableNames":[{"name":"data","nativeSrc":"6415:4:25","nodeType":"YulIdentifier","src":"6415:4:25"}]},{"nativeSrc":"6436:22:25","nodeType":"YulAssignment","src":"6436:22:25","value":{"arguments":[{"name":"ptr","nativeSrc":"6448:3:25","nodeType":"YulIdentifier","src":"6448:3:25"},{"kind":"number","nativeSrc":"6453:4:25","nodeType":"YulLiteral","src":"6453:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6444:3:25","nodeType":"YulIdentifier","src":"6444:3:25"},"nativeSrc":"6444:14:25","nodeType":"YulFunctionCall","src":"6444:14:25"},"variableNames":[{"name":"data","nativeSrc":"6436:4:25","nodeType":"YulIdentifier","src":"6436:4:25"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6333:132:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6392:3:25","nodeType":"YulTypedName","src":"6392:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"6400:4:25","nodeType":"YulTypedName","src":"6400:4:25","type":""}],"src":"6333:132:25"},{"body":{"nativeSrc":"6526:53:25","nodeType":"YulBlock","src":"6526:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6543:3:25","nodeType":"YulIdentifier","src":"6543:3:25"},{"arguments":[{"name":"value","nativeSrc":"6566:5:25","nodeType":"YulIdentifier","src":"6566:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6548:17:25","nodeType":"YulIdentifier","src":"6548:17:25"},"nativeSrc":"6548:24:25","nodeType":"YulFunctionCall","src":"6548:24:25"}],"functionName":{"name":"mstore","nativeSrc":"6536:6:25","nodeType":"YulIdentifier","src":"6536:6:25"},"nativeSrc":"6536:37:25","nodeType":"YulFunctionCall","src":"6536:37:25"},"nativeSrc":"6536:37:25","nodeType":"YulExpressionStatement","src":"6536:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6471:108:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6514:5:25","nodeType":"YulTypedName","src":"6514:5:25","type":""},{"name":"pos","nativeSrc":"6521:3:25","nodeType":"YulTypedName","src":"6521:3:25","type":""}],"src":"6471:108:25"},{"body":{"nativeSrc":"6665:99:25","nodeType":"YulBlock","src":"6665:99:25","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"6709:6:25","nodeType":"YulIdentifier","src":"6709:6:25"},{"name":"pos","nativeSrc":"6717:3:25","nodeType":"YulIdentifier","src":"6717:3:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6675:33:25","nodeType":"YulIdentifier","src":"6675:33:25"},"nativeSrc":"6675:46:25","nodeType":"YulFunctionCall","src":"6675:46:25"},"nativeSrc":"6675:46:25","nodeType":"YulExpressionStatement","src":"6675:46:25"},{"nativeSrc":"6730:28:25","nodeType":"YulAssignment","src":"6730:28:25","value":{"arguments":[{"name":"pos","nativeSrc":"6748:3:25","nodeType":"YulIdentifier","src":"6748:3:25"},{"kind":"number","nativeSrc":"6753:4:25","nodeType":"YulLiteral","src":"6753:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6744:3:25","nodeType":"YulIdentifier","src":"6744:3:25"},"nativeSrc":"6744:14:25","nodeType":"YulFunctionCall","src":"6744:14:25"},"variableNames":[{"name":"updatedPos","nativeSrc":"6730:10:25","nodeType":"YulIdentifier","src":"6730:10:25"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"6585:179:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"6638:6:25","nodeType":"YulTypedName","src":"6638:6:25","type":""},{"name":"pos","nativeSrc":"6646:3:25","nodeType":"YulTypedName","src":"6646:3:25","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"6654:10:25","nodeType":"YulTypedName","src":"6654:10:25","type":""}],"src":"6585:179:25"},{"body":{"nativeSrc":"6845:38:25","nodeType":"YulBlock","src":"6845:38:25","statements":[{"nativeSrc":"6855:22:25","nodeType":"YulAssignment","src":"6855:22:25","value":{"arguments":[{"name":"ptr","nativeSrc":"6867:3:25","nodeType":"YulIdentifier","src":"6867:3:25"},{"kind":"number","nativeSrc":"6872:4:25","nodeType":"YulLiteral","src":"6872:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6863:3:25","nodeType":"YulIdentifier","src":"6863:3:25"},"nativeSrc":"6863:14:25","nodeType":"YulFunctionCall","src":"6863:14:25"},"variableNames":[{"name":"next","nativeSrc":"6855:4:25","nodeType":"YulIdentifier","src":"6855:4:25"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"6770:113:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"6832:3:25","nodeType":"YulTypedName","src":"6832:3:25","type":""}],"returnVariables":[{"name":"next","nativeSrc":"6840:4:25","nodeType":"YulTypedName","src":"6840:4:25","type":""}],"src":"6770:113:25"},{"body":{"nativeSrc":"7043:608:25","nodeType":"YulBlock","src":"7043:608:25","statements":[{"nativeSrc":"7053:68:25","nodeType":"YulVariableDeclaration","src":"7053:68:25","value":{"arguments":[{"name":"value","nativeSrc":"7115:5:25","nodeType":"YulIdentifier","src":"7115:5:25"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7067:47:25","nodeType":"YulIdentifier","src":"7067:47:25"},"nativeSrc":"7067:54:25","nodeType":"YulFunctionCall","src":"7067:54:25"},"variables":[{"name":"length","nativeSrc":"7057:6:25","nodeType":"YulTypedName","src":"7057:6:25","type":""}]},{"nativeSrc":"7130:93:25","nodeType":"YulAssignment","src":"7130:93:25","value":{"arguments":[{"name":"pos","nativeSrc":"7211:3:25","nodeType":"YulIdentifier","src":"7211:3:25"},{"name":"length","nativeSrc":"7216:6:25","nodeType":"YulIdentifier","src":"7216:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"7137:73:25","nodeType":"YulIdentifier","src":"7137:73:25"},"nativeSrc":"7137:86:25","nodeType":"YulFunctionCall","src":"7137:86:25"},"variableNames":[{"name":"pos","nativeSrc":"7130:3:25","nodeType":"YulIdentifier","src":"7130:3:25"}]},{"nativeSrc":"7232:71:25","nodeType":"YulVariableDeclaration","src":"7232:71:25","value":{"arguments":[{"name":"value","nativeSrc":"7297:5:25","nodeType":"YulIdentifier","src":"7297:5:25"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7247:49:25","nodeType":"YulIdentifier","src":"7247:49:25"},"nativeSrc":"7247:56:25","nodeType":"YulFunctionCall","src":"7247:56:25"},"variables":[{"name":"baseRef","nativeSrc":"7236:7:25","nodeType":"YulTypedName","src":"7236:7:25","type":""}]},{"nativeSrc":"7312:21:25","nodeType":"YulVariableDeclaration","src":"7312:21:25","value":{"name":"baseRef","nativeSrc":"7326:7:25","nodeType":"YulIdentifier","src":"7326:7:25"},"variables":[{"name":"srcPtr","nativeSrc":"7316:6:25","nodeType":"YulTypedName","src":"7316:6:25","type":""}]},{"body":{"nativeSrc":"7402:224:25","nodeType":"YulBlock","src":"7402:224:25","statements":[{"nativeSrc":"7416:34:25","nodeType":"YulVariableDeclaration","src":"7416:34:25","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7443:6:25","nodeType":"YulIdentifier","src":"7443:6:25"}],"functionName":{"name":"mload","nativeSrc":"7437:5:25","nodeType":"YulIdentifier","src":"7437:5:25"},"nativeSrc":"7437:13:25","nodeType":"YulFunctionCall","src":"7437:13:25"},"variables":[{"name":"elementValue0","nativeSrc":"7420:13:25","nodeType":"YulTypedName","src":"7420:13:25","type":""}]},{"nativeSrc":"7463:70:25","nodeType":"YulAssignment","src":"7463:70:25","value":{"arguments":[{"name":"elementValue0","nativeSrc":"7514:13:25","nodeType":"YulIdentifier","src":"7514:13:25"},{"name":"pos","nativeSrc":"7529:3:25","nodeType":"YulIdentifier","src":"7529:3:25"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"7470:43:25","nodeType":"YulIdentifier","src":"7470:43:25"},"nativeSrc":"7470:63:25","nodeType":"YulFunctionCall","src":"7470:63:25"},"variableNames":[{"name":"pos","nativeSrc":"7463:3:25","nodeType":"YulIdentifier","src":"7463:3:25"}]},{"nativeSrc":"7546:70:25","nodeType":"YulAssignment","src":"7546:70:25","value":{"arguments":[{"name":"srcPtr","nativeSrc":"7609:6:25","nodeType":"YulIdentifier","src":"7609:6:25"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"7556:52:25","nodeType":"YulIdentifier","src":"7556:52:25"},"nativeSrc":"7556:60:25","nodeType":"YulFunctionCall","src":"7556:60:25"},"variableNames":[{"name":"srcPtr","nativeSrc":"7546:6:25","nodeType":"YulIdentifier","src":"7546:6:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7364:1:25","nodeType":"YulIdentifier","src":"7364:1:25"},{"name":"length","nativeSrc":"7367:6:25","nodeType":"YulIdentifier","src":"7367:6:25"}],"functionName":{"name":"lt","nativeSrc":"7361:2:25","nodeType":"YulIdentifier","src":"7361:2:25"},"nativeSrc":"7361:13:25","nodeType":"YulFunctionCall","src":"7361:13:25"},"nativeSrc":"7342:284:25","nodeType":"YulForLoop","post":{"nativeSrc":"7375:18:25","nodeType":"YulBlock","src":"7375:18:25","statements":[{"nativeSrc":"7377:14:25","nodeType":"YulAssignment","src":"7377:14:25","value":{"arguments":[{"name":"i","nativeSrc":"7386:1:25","nodeType":"YulIdentifier","src":"7386:1:25"},{"kind":"number","nativeSrc":"7389:1:25","nodeType":"YulLiteral","src":"7389:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7382:3:25","nodeType":"YulIdentifier","src":"7382:3:25"},"nativeSrc":"7382:9:25","nodeType":"YulFunctionCall","src":"7382:9:25"},"variableNames":[{"name":"i","nativeSrc":"7377:1:25","nodeType":"YulIdentifier","src":"7377:1:25"}]}]},"pre":{"nativeSrc":"7346:14:25","nodeType":"YulBlock","src":"7346:14:25","statements":[{"nativeSrc":"7348:10:25","nodeType":"YulVariableDeclaration","src":"7348:10:25","value":{"kind":"number","nativeSrc":"7357:1:25","nodeType":"YulLiteral","src":"7357:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7352:1:25","nodeType":"YulTypedName","src":"7352:1:25","type":""}]}]},"src":"7342:284:25"},{"nativeSrc":"7635:10:25","nodeType":"YulAssignment","src":"7635:10:25","value":{"name":"pos","nativeSrc":"7642:3:25","nodeType":"YulIdentifier","src":"7642:3:25"},"variableNames":[{"name":"end","nativeSrc":"7635:3:25","nodeType":"YulIdentifier","src":"7635:3:25"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"6919:732:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7022:5:25","nodeType":"YulTypedName","src":"7022:5:25","type":""},{"name":"pos","nativeSrc":"7029:3:25","nodeType":"YulTypedName","src":"7029:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7038:3:25","nodeType":"YulTypedName","src":"7038:3:25","type":""}],"src":"6919:732:25"},{"body":{"nativeSrc":"8011:861:25","nodeType":"YulBlock","src":"8011:861:25","statements":[{"nativeSrc":"8021:27:25","nodeType":"YulAssignment","src":"8021:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8033:9:25","nodeType":"YulIdentifier","src":"8033:9:25"},{"kind":"number","nativeSrc":"8044:3:25","nodeType":"YulLiteral","src":"8044:3:25","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"8029:3:25","nodeType":"YulIdentifier","src":"8029:3:25"},"nativeSrc":"8029:19:25","nodeType":"YulFunctionCall","src":"8029:19:25"},"variableNames":[{"name":"tail","nativeSrc":"8021:4:25","nodeType":"YulIdentifier","src":"8021:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8100:6:25","nodeType":"YulIdentifier","src":"8100:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"8113:9:25","nodeType":"YulIdentifier","src":"8113:9:25"},{"kind":"number","nativeSrc":"8124:1:25","nodeType":"YulLiteral","src":"8124:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8109:3:25","nodeType":"YulIdentifier","src":"8109:3:25"},"nativeSrc":"8109:17:25","nodeType":"YulFunctionCall","src":"8109:17:25"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nativeSrc":"8058:41:25","nodeType":"YulIdentifier","src":"8058:41:25"},"nativeSrc":"8058:69:25","nodeType":"YulFunctionCall","src":"8058:69:25"},"nativeSrc":"8058:69:25","nodeType":"YulExpressionStatement","src":"8058:69:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8148:9:25","nodeType":"YulIdentifier","src":"8148:9:25"},{"kind":"number","nativeSrc":"8159:2:25","nodeType":"YulLiteral","src":"8159:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8144:3:25","nodeType":"YulIdentifier","src":"8144:3:25"},"nativeSrc":"8144:18:25","nodeType":"YulFunctionCall","src":"8144:18:25"},{"arguments":[{"name":"tail","nativeSrc":"8168:4:25","nodeType":"YulIdentifier","src":"8168:4:25"},{"name":"headStart","nativeSrc":"8174:9:25","nodeType":"YulIdentifier","src":"8174:9:25"}],"functionName":{"name":"sub","nativeSrc":"8164:3:25","nodeType":"YulIdentifier","src":"8164:3:25"},"nativeSrc":"8164:20:25","nodeType":"YulFunctionCall","src":"8164:20:25"}],"functionName":{"name":"mstore","nativeSrc":"8137:6:25","nodeType":"YulIdentifier","src":"8137:6:25"},"nativeSrc":"8137:48:25","nodeType":"YulFunctionCall","src":"8137:48:25"},"nativeSrc":"8137:48:25","nodeType":"YulExpressionStatement","src":"8137:48:25"},{"nativeSrc":"8194:86:25","nodeType":"YulAssignment","src":"8194:86:25","value":{"arguments":[{"name":"value1","nativeSrc":"8266:6:25","nodeType":"YulIdentifier","src":"8266:6:25"},{"name":"tail","nativeSrc":"8275:4:25","nodeType":"YulIdentifier","src":"8275:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8202:63:25","nodeType":"YulIdentifier","src":"8202:63:25"},"nativeSrc":"8202:78:25","nodeType":"YulFunctionCall","src":"8202:78:25"},"variableNames":[{"name":"tail","nativeSrc":"8194:4:25","nodeType":"YulIdentifier","src":"8194:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8301:9:25","nodeType":"YulIdentifier","src":"8301:9:25"},{"kind":"number","nativeSrc":"8312:2:25","nodeType":"YulLiteral","src":"8312:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8297:3:25","nodeType":"YulIdentifier","src":"8297:3:25"},"nativeSrc":"8297:18:25","nodeType":"YulFunctionCall","src":"8297:18:25"},{"arguments":[{"name":"tail","nativeSrc":"8321:4:25","nodeType":"YulIdentifier","src":"8321:4:25"},{"name":"headStart","nativeSrc":"8327:9:25","nodeType":"YulIdentifier","src":"8327:9:25"}],"functionName":{"name":"sub","nativeSrc":"8317:3:25","nodeType":"YulIdentifier","src":"8317:3:25"},"nativeSrc":"8317:20:25","nodeType":"YulFunctionCall","src":"8317:20:25"}],"functionName":{"name":"mstore","nativeSrc":"8290:6:25","nodeType":"YulIdentifier","src":"8290:6:25"},"nativeSrc":"8290:48:25","nodeType":"YulFunctionCall","src":"8290:48:25"},"nativeSrc":"8290:48:25","nodeType":"YulExpressionStatement","src":"8290:48:25"},{"nativeSrc":"8347:86:25","nodeType":"YulAssignment","src":"8347:86:25","value":{"arguments":[{"name":"value2","nativeSrc":"8419:6:25","nodeType":"YulIdentifier","src":"8419:6:25"},{"name":"tail","nativeSrc":"8428:4:25","nodeType":"YulIdentifier","src":"8428:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"8355:63:25","nodeType":"YulIdentifier","src":"8355:63:25"},"nativeSrc":"8355:78:25","nodeType":"YulFunctionCall","src":"8355:78:25"},"variableNames":[{"name":"tail","nativeSrc":"8347:4:25","nodeType":"YulIdentifier","src":"8347:4:25"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"8487:6:25","nodeType":"YulIdentifier","src":"8487:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"8500:9:25","nodeType":"YulIdentifier","src":"8500:9:25"},{"kind":"number","nativeSrc":"8511:2:25","nodeType":"YulLiteral","src":"8511:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8496:3:25","nodeType":"YulIdentifier","src":"8496:3:25"},"nativeSrc":"8496:18:25","nodeType":"YulFunctionCall","src":"8496:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"8443:43:25","nodeType":"YulIdentifier","src":"8443:43:25"},"nativeSrc":"8443:72:25","nodeType":"YulFunctionCall","src":"8443:72:25"},"nativeSrc":"8443:72:25","nodeType":"YulExpressionStatement","src":"8443:72:25"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"8569:6:25","nodeType":"YulIdentifier","src":"8569:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"8582:9:25","nodeType":"YulIdentifier","src":"8582:9:25"},{"kind":"number","nativeSrc":"8593:3:25","nodeType":"YulLiteral","src":"8593:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8578:3:25","nodeType":"YulIdentifier","src":"8578:3:25"},"nativeSrc":"8578:19:25","nodeType":"YulFunctionCall","src":"8578:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8525:43:25","nodeType":"YulIdentifier","src":"8525:43:25"},"nativeSrc":"8525:73:25","nodeType":"YulFunctionCall","src":"8525:73:25"},"nativeSrc":"8525:73:25","nodeType":"YulExpressionStatement","src":"8525:73:25"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"8652:6:25","nodeType":"YulIdentifier","src":"8652:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"8665:9:25","nodeType":"YulIdentifier","src":"8665:9:25"},{"kind":"number","nativeSrc":"8676:3:25","nodeType":"YulLiteral","src":"8676:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"8661:3:25","nodeType":"YulIdentifier","src":"8661:3:25"},"nativeSrc":"8661:19:25","nodeType":"YulFunctionCall","src":"8661:19:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"8608:43:25","nodeType":"YulIdentifier","src":"8608:43:25"},"nativeSrc":"8608:73:25","nodeType":"YulFunctionCall","src":"8608:73:25"},"nativeSrc":"8608:73:25","nodeType":"YulExpressionStatement","src":"8608:73:25"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8702:9:25","nodeType":"YulIdentifier","src":"8702:9:25"},{"kind":"number","nativeSrc":"8713:3:25","nodeType":"YulLiteral","src":"8713:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"8698:3:25","nodeType":"YulIdentifier","src":"8698:3:25"},"nativeSrc":"8698:19:25","nodeType":"YulFunctionCall","src":"8698:19:25"},{"arguments":[{"name":"tail","nativeSrc":"8723:4:25","nodeType":"YulIdentifier","src":"8723:4:25"},{"name":"headStart","nativeSrc":"8729:9:25","nodeType":"YulIdentifier","src":"8729:9:25"}],"functionName":{"name":"sub","nativeSrc":"8719:3:25","nodeType":"YulIdentifier","src":"8719:3:25"},"nativeSrc":"8719:20:25","nodeType":"YulFunctionCall","src":"8719:20:25"}],"functionName":{"name":"mstore","nativeSrc":"8691:6:25","nodeType":"YulIdentifier","src":"8691:6:25"},"nativeSrc":"8691:49:25","nodeType":"YulFunctionCall","src":"8691:49:25"},"nativeSrc":"8691:49:25","nodeType":"YulExpressionStatement","src":"8691:49:25"},{"nativeSrc":"8749:116:25","nodeType":"YulAssignment","src":"8749:116:25","value":{"arguments":[{"name":"value6","nativeSrc":"8851:6:25","nodeType":"YulIdentifier","src":"8851:6:25"},{"name":"tail","nativeSrc":"8860:4:25","nodeType":"YulIdentifier","src":"8860:4:25"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"8757:93:25","nodeType":"YulIdentifier","src":"8757:93:25"},"nativeSrc":"8757:108:25","nodeType":"YulFunctionCall","src":"8757:108:25"},"variableNames":[{"name":"tail","nativeSrc":"8749:4:25","nodeType":"YulIdentifier","src":"8749:4:25"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"7657:1215:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7935:9:25","nodeType":"YulTypedName","src":"7935:9:25","type":""},{"name":"value6","nativeSrc":"7947:6:25","nodeType":"YulTypedName","src":"7947:6:25","type":""},{"name":"value5","nativeSrc":"7955:6:25","nodeType":"YulTypedName","src":"7955:6:25","type":""},{"name":"value4","nativeSrc":"7963:6:25","nodeType":"YulTypedName","src":"7963:6:25","type":""},{"name":"value3","nativeSrc":"7971:6:25","nodeType":"YulTypedName","src":"7971:6:25","type":""},{"name":"value2","nativeSrc":"7979:6:25","nodeType":"YulTypedName","src":"7979:6:25","type":""},{"name":"value1","nativeSrc":"7987:6:25","nodeType":"YulTypedName","src":"7987:6:25","type":""},{"name":"value0","nativeSrc":"7995:6:25","nodeType":"YulTypedName","src":"7995:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8006:4:25","nodeType":"YulTypedName","src":"8006:4:25","type":""}],"src":"7657:1215:25"},{"body":{"nativeSrc":"8976:124:25","nodeType":"YulBlock","src":"8976:124:25","statements":[{"nativeSrc":"8986:26:25","nodeType":"YulAssignment","src":"8986:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"8998:9:25","nodeType":"YulIdentifier","src":"8998:9:25"},{"kind":"number","nativeSrc":"9009:2:25","nodeType":"YulLiteral","src":"9009:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8994:3:25","nodeType":"YulIdentifier","src":"8994:3:25"},"nativeSrc":"8994:18:25","nodeType":"YulFunctionCall","src":"8994:18:25"},"variableNames":[{"name":"tail","nativeSrc":"8986:4:25","nodeType":"YulIdentifier","src":"8986:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9066:6:25","nodeType":"YulIdentifier","src":"9066:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"9079:9:25","nodeType":"YulIdentifier","src":"9079:9:25"},{"kind":"number","nativeSrc":"9090:1:25","nodeType":"YulLiteral","src":"9090:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9075:3:25","nodeType":"YulIdentifier","src":"9075:3:25"},"nativeSrc":"9075:17:25","nodeType":"YulFunctionCall","src":"9075:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"9022:43:25","nodeType":"YulIdentifier","src":"9022:43:25"},"nativeSrc":"9022:71:25","nodeType":"YulFunctionCall","src":"9022:71:25"},"nativeSrc":"9022:71:25","nodeType":"YulExpressionStatement","src":"9022:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"8878:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8948:9:25","nodeType":"YulTypedName","src":"8948:9:25","type":""},{"name":"value0","nativeSrc":"8960:6:25","nodeType":"YulTypedName","src":"8960:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8971:4:25","nodeType":"YulTypedName","src":"8971:4:25","type":""}],"src":"8878:222:25"},{"body":{"nativeSrc":"9147:77:25","nodeType":"YulBlock","src":"9147:77:25","statements":[{"body":{"nativeSrc":"9202:16:25","nodeType":"YulBlock","src":"9202:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9211:1:25","nodeType":"YulLiteral","src":"9211:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9214:1:25","nodeType":"YulLiteral","src":"9214:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9204:6:25","nodeType":"YulIdentifier","src":"9204:6:25"},"nativeSrc":"9204:12:25","nodeType":"YulFunctionCall","src":"9204:12:25"},"nativeSrc":"9204:12:25","nodeType":"YulExpressionStatement","src":"9204:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9170:5:25","nodeType":"YulIdentifier","src":"9170:5:25"},{"arguments":[{"name":"value","nativeSrc":"9193:5:25","nodeType":"YulIdentifier","src":"9193:5:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9177:15:25","nodeType":"YulIdentifier","src":"9177:15:25"},"nativeSrc":"9177:22:25","nodeType":"YulFunctionCall","src":"9177:22:25"}],"functionName":{"name":"eq","nativeSrc":"9167:2:25","nodeType":"YulIdentifier","src":"9167:2:25"},"nativeSrc":"9167:33:25","nodeType":"YulFunctionCall","src":"9167:33:25"}],"functionName":{"name":"iszero","nativeSrc":"9160:6:25","nodeType":"YulIdentifier","src":"9160:6:25"},"nativeSrc":"9160:41:25","nodeType":"YulFunctionCall","src":"9160:41:25"},"nativeSrc":"9157:61:25","nodeType":"YulIf","src":"9157:61:25"}]},"name":"validator_revert_t_uint8","nativeSrc":"9106:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9140:5:25","nodeType":"YulTypedName","src":"9140:5:25","type":""}],"src":"9106:118:25"},{"body":{"nativeSrc":"9280:85:25","nodeType":"YulBlock","src":"9280:85:25","statements":[{"nativeSrc":"9290:29:25","nodeType":"YulAssignment","src":"9290:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"9312:6:25","nodeType":"YulIdentifier","src":"9312:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"9299:12:25","nodeType":"YulIdentifier","src":"9299:12:25"},"nativeSrc":"9299:20:25","nodeType":"YulFunctionCall","src":"9299:20:25"},"variableNames":[{"name":"value","nativeSrc":"9290:5:25","nodeType":"YulIdentifier","src":"9290:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9353:5:25","nodeType":"YulIdentifier","src":"9353:5:25"}],"functionName":{"name":"validator_revert_t_uint8","nativeSrc":"9328:24:25","nodeType":"YulIdentifier","src":"9328:24:25"},"nativeSrc":"9328:31:25","nodeType":"YulFunctionCall","src":"9328:31:25"},"nativeSrc":"9328:31:25","nodeType":"YulExpressionStatement","src":"9328:31:25"}]},"name":"abi_decode_t_uint8","nativeSrc":"9230:135:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9258:6:25","nodeType":"YulTypedName","src":"9258:6:25","type":""},{"name":"end","nativeSrc":"9266:3:25","nodeType":"YulTypedName","src":"9266:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9274:5:25","nodeType":"YulTypedName","src":"9274:5:25","type":""}],"src":"9230:135:25"},{"body":{"nativeSrc":"9414:79:25","nodeType":"YulBlock","src":"9414:79:25","statements":[{"body":{"nativeSrc":"9471:16:25","nodeType":"YulBlock","src":"9471:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9480:1:25","nodeType":"YulLiteral","src":"9480:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9483:1:25","nodeType":"YulLiteral","src":"9483:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9473:6:25","nodeType":"YulIdentifier","src":"9473:6:25"},"nativeSrc":"9473:12:25","nodeType":"YulFunctionCall","src":"9473:12:25"},"nativeSrc":"9473:12:25","nodeType":"YulExpressionStatement","src":"9473:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9437:5:25","nodeType":"YulIdentifier","src":"9437:5:25"},{"arguments":[{"name":"value","nativeSrc":"9462:5:25","nodeType":"YulIdentifier","src":"9462:5:25"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"9444:17:25","nodeType":"YulIdentifier","src":"9444:17:25"},"nativeSrc":"9444:24:25","nodeType":"YulFunctionCall","src":"9444:24:25"}],"functionName":{"name":"eq","nativeSrc":"9434:2:25","nodeType":"YulIdentifier","src":"9434:2:25"},"nativeSrc":"9434:35:25","nodeType":"YulFunctionCall","src":"9434:35:25"}],"functionName":{"name":"iszero","nativeSrc":"9427:6:25","nodeType":"YulIdentifier","src":"9427:6:25"},"nativeSrc":"9427:43:25","nodeType":"YulFunctionCall","src":"9427:43:25"},"nativeSrc":"9424:63:25","nodeType":"YulIf","src":"9424:63:25"}]},"name":"validator_revert_t_bytes32","nativeSrc":"9371:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9407:5:25","nodeType":"YulTypedName","src":"9407:5:25","type":""}],"src":"9371:122:25"},{"body":{"nativeSrc":"9551:87:25","nodeType":"YulBlock","src":"9551:87:25","statements":[{"nativeSrc":"9561:29:25","nodeType":"YulAssignment","src":"9561:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"9583:6:25","nodeType":"YulIdentifier","src":"9583:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"9570:12:25","nodeType":"YulIdentifier","src":"9570:12:25"},"nativeSrc":"9570:20:25","nodeType":"YulFunctionCall","src":"9570:20:25"},"variableNames":[{"name":"value","nativeSrc":"9561:5:25","nodeType":"YulIdentifier","src":"9561:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9626:5:25","nodeType":"YulIdentifier","src":"9626:5:25"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"9599:26:25","nodeType":"YulIdentifier","src":"9599:26:25"},"nativeSrc":"9599:33:25","nodeType":"YulFunctionCall","src":"9599:33:25"},"nativeSrc":"9599:33:25","nodeType":"YulExpressionStatement","src":"9599:33:25"}]},"name":"abi_decode_t_bytes32","nativeSrc":"9499:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9529:6:25","nodeType":"YulTypedName","src":"9529:6:25","type":""},{"name":"end","nativeSrc":"9537:3:25","nodeType":"YulTypedName","src":"9537:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9545:5:25","nodeType":"YulTypedName","src":"9545:5:25","type":""}],"src":"9499:139:25"},{"body":{"nativeSrc":"9810:1033:25","nodeType":"YulBlock","src":"9810:1033:25","statements":[{"body":{"nativeSrc":"9857:83:25","nodeType":"YulBlock","src":"9857:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9859:77:25","nodeType":"YulIdentifier","src":"9859:77:25"},"nativeSrc":"9859:79:25","nodeType":"YulFunctionCall","src":"9859:79:25"},"nativeSrc":"9859:79:25","nodeType":"YulExpressionStatement","src":"9859:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9831:7:25","nodeType":"YulIdentifier","src":"9831:7:25"},{"name":"headStart","nativeSrc":"9840:9:25","nodeType":"YulIdentifier","src":"9840:9:25"}],"functionName":{"name":"sub","nativeSrc":"9827:3:25","nodeType":"YulIdentifier","src":"9827:3:25"},"nativeSrc":"9827:23:25","nodeType":"YulFunctionCall","src":"9827:23:25"},{"kind":"number","nativeSrc":"9852:3:25","nodeType":"YulLiteral","src":"9852:3:25","type":"","value":"224"}],"functionName":{"name":"slt","nativeSrc":"9823:3:25","nodeType":"YulIdentifier","src":"9823:3:25"},"nativeSrc":"9823:33:25","nodeType":"YulFunctionCall","src":"9823:33:25"},"nativeSrc":"9820:120:25","nodeType":"YulIf","src":"9820:120:25"},{"nativeSrc":"9950:117:25","nodeType":"YulBlock","src":"9950:117:25","statements":[{"nativeSrc":"9965:15:25","nodeType":"YulVariableDeclaration","src":"9965:15:25","value":{"kind":"number","nativeSrc":"9979:1:25","nodeType":"YulLiteral","src":"9979:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9969:6:25","nodeType":"YulTypedName","src":"9969:6:25","type":""}]},{"nativeSrc":"9994:63:25","nodeType":"YulAssignment","src":"9994:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10029:9:25","nodeType":"YulIdentifier","src":"10029:9:25"},{"name":"offset","nativeSrc":"10040:6:25","nodeType":"YulIdentifier","src":"10040:6:25"}],"functionName":{"name":"add","nativeSrc":"10025:3:25","nodeType":"YulIdentifier","src":"10025:3:25"},"nativeSrc":"10025:22:25","nodeType":"YulFunctionCall","src":"10025:22:25"},{"name":"dataEnd","nativeSrc":"10049:7:25","nodeType":"YulIdentifier","src":"10049:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10004:20:25","nodeType":"YulIdentifier","src":"10004:20:25"},"nativeSrc":"10004:53:25","nodeType":"YulFunctionCall","src":"10004:53:25"},"variableNames":[{"name":"value0","nativeSrc":"9994:6:25","nodeType":"YulIdentifier","src":"9994:6:25"}]}]},{"nativeSrc":"10077:118:25","nodeType":"YulBlock","src":"10077:118:25","statements":[{"nativeSrc":"10092:16:25","nodeType":"YulVariableDeclaration","src":"10092:16:25","value":{"kind":"number","nativeSrc":"10106:2:25","nodeType":"YulLiteral","src":"10106:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10096:6:25","nodeType":"YulTypedName","src":"10096:6:25","type":""}]},{"nativeSrc":"10122:63:25","nodeType":"YulAssignment","src":"10122:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10157:9:25","nodeType":"YulIdentifier","src":"10157:9:25"},{"name":"offset","nativeSrc":"10168:6:25","nodeType":"YulIdentifier","src":"10168:6:25"}],"functionName":{"name":"add","nativeSrc":"10153:3:25","nodeType":"YulIdentifier","src":"10153:3:25"},"nativeSrc":"10153:22:25","nodeType":"YulFunctionCall","src":"10153:22:25"},{"name":"dataEnd","nativeSrc":"10177:7:25","nodeType":"YulIdentifier","src":"10177:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10132:20:25","nodeType":"YulIdentifier","src":"10132:20:25"},"nativeSrc":"10132:53:25","nodeType":"YulFunctionCall","src":"10132:53:25"},"variableNames":[{"name":"value1","nativeSrc":"10122:6:25","nodeType":"YulIdentifier","src":"10122:6:25"}]}]},{"nativeSrc":"10205:118:25","nodeType":"YulBlock","src":"10205:118:25","statements":[{"nativeSrc":"10220:16:25","nodeType":"YulVariableDeclaration","src":"10220:16:25","value":{"kind":"number","nativeSrc":"10234:2:25","nodeType":"YulLiteral","src":"10234:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"10224:6:25","nodeType":"YulTypedName","src":"10224:6:25","type":""}]},{"nativeSrc":"10250:63:25","nodeType":"YulAssignment","src":"10250:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10285:9:25","nodeType":"YulIdentifier","src":"10285:9:25"},{"name":"offset","nativeSrc":"10296:6:25","nodeType":"YulIdentifier","src":"10296:6:25"}],"functionName":{"name":"add","nativeSrc":"10281:3:25","nodeType":"YulIdentifier","src":"10281:3:25"},"nativeSrc":"10281:22:25","nodeType":"YulFunctionCall","src":"10281:22:25"},{"name":"dataEnd","nativeSrc":"10305:7:25","nodeType":"YulIdentifier","src":"10305:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10260:20:25","nodeType":"YulIdentifier","src":"10260:20:25"},"nativeSrc":"10260:53:25","nodeType":"YulFunctionCall","src":"10260:53:25"},"variableNames":[{"name":"value2","nativeSrc":"10250:6:25","nodeType":"YulIdentifier","src":"10250:6:25"}]}]},{"nativeSrc":"10333:118:25","nodeType":"YulBlock","src":"10333:118:25","statements":[{"nativeSrc":"10348:16:25","nodeType":"YulVariableDeclaration","src":"10348:16:25","value":{"kind":"number","nativeSrc":"10362:2:25","nodeType":"YulLiteral","src":"10362:2:25","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"10352:6:25","nodeType":"YulTypedName","src":"10352:6:25","type":""}]},{"nativeSrc":"10378:63:25","nodeType":"YulAssignment","src":"10378:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10413:9:25","nodeType":"YulIdentifier","src":"10413:9:25"},{"name":"offset","nativeSrc":"10424:6:25","nodeType":"YulIdentifier","src":"10424:6:25"}],"functionName":{"name":"add","nativeSrc":"10409:3:25","nodeType":"YulIdentifier","src":"10409:3:25"},"nativeSrc":"10409:22:25","nodeType":"YulFunctionCall","src":"10409:22:25"},{"name":"dataEnd","nativeSrc":"10433:7:25","nodeType":"YulIdentifier","src":"10433:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10388:20:25","nodeType":"YulIdentifier","src":"10388:20:25"},"nativeSrc":"10388:53:25","nodeType":"YulFunctionCall","src":"10388:53:25"},"variableNames":[{"name":"value3","nativeSrc":"10378:6:25","nodeType":"YulIdentifier","src":"10378:6:25"}]}]},{"nativeSrc":"10461:117:25","nodeType":"YulBlock","src":"10461:117:25","statements":[{"nativeSrc":"10476:17:25","nodeType":"YulVariableDeclaration","src":"10476:17:25","value":{"kind":"number","nativeSrc":"10490:3:25","nodeType":"YulLiteral","src":"10490:3:25","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"10480:6:25","nodeType":"YulTypedName","src":"10480:6:25","type":""}]},{"nativeSrc":"10507:61:25","nodeType":"YulAssignment","src":"10507:61:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10540:9:25","nodeType":"YulIdentifier","src":"10540:9:25"},{"name":"offset","nativeSrc":"10551:6:25","nodeType":"YulIdentifier","src":"10551:6:25"}],"functionName":{"name":"add","nativeSrc":"10536:3:25","nodeType":"YulIdentifier","src":"10536:3:25"},"nativeSrc":"10536:22:25","nodeType":"YulFunctionCall","src":"10536:22:25"},{"name":"dataEnd","nativeSrc":"10560:7:25","nodeType":"YulIdentifier","src":"10560:7:25"}],"functionName":{"name":"abi_decode_t_uint8","nativeSrc":"10517:18:25","nodeType":"YulIdentifier","src":"10517:18:25"},"nativeSrc":"10517:51:25","nodeType":"YulFunctionCall","src":"10517:51:25"},"variableNames":[{"name":"value4","nativeSrc":"10507:6:25","nodeType":"YulIdentifier","src":"10507:6:25"}]}]},{"nativeSrc":"10588:119:25","nodeType":"YulBlock","src":"10588:119:25","statements":[{"nativeSrc":"10603:17:25","nodeType":"YulVariableDeclaration","src":"10603:17:25","value":{"kind":"number","nativeSrc":"10617:3:25","nodeType":"YulLiteral","src":"10617:3:25","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"10607:6:25","nodeType":"YulTypedName","src":"10607:6:25","type":""}]},{"nativeSrc":"10634:63:25","nodeType":"YulAssignment","src":"10634:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10669:9:25","nodeType":"YulIdentifier","src":"10669:9:25"},{"name":"offset","nativeSrc":"10680:6:25","nodeType":"YulIdentifier","src":"10680:6:25"}],"functionName":{"name":"add","nativeSrc":"10665:3:25","nodeType":"YulIdentifier","src":"10665:3:25"},"nativeSrc":"10665:22:25","nodeType":"YulFunctionCall","src":"10665:22:25"},{"name":"dataEnd","nativeSrc":"10689:7:25","nodeType":"YulIdentifier","src":"10689:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10644:20:25","nodeType":"YulIdentifier","src":"10644:20:25"},"nativeSrc":"10644:53:25","nodeType":"YulFunctionCall","src":"10644:53:25"},"variableNames":[{"name":"value5","nativeSrc":"10634:6:25","nodeType":"YulIdentifier","src":"10634:6:25"}]}]},{"nativeSrc":"10717:119:25","nodeType":"YulBlock","src":"10717:119:25","statements":[{"nativeSrc":"10732:17:25","nodeType":"YulVariableDeclaration","src":"10732:17:25","value":{"kind":"number","nativeSrc":"10746:3:25","nodeType":"YulLiteral","src":"10746:3:25","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"10736:6:25","nodeType":"YulTypedName","src":"10736:6:25","type":""}]},{"nativeSrc":"10763:63:25","nodeType":"YulAssignment","src":"10763:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10798:9:25","nodeType":"YulIdentifier","src":"10798:9:25"},{"name":"offset","nativeSrc":"10809:6:25","nodeType":"YulIdentifier","src":"10809:6:25"}],"functionName":{"name":"add","nativeSrc":"10794:3:25","nodeType":"YulIdentifier","src":"10794:3:25"},"nativeSrc":"10794:22:25","nodeType":"YulFunctionCall","src":"10794:22:25"},{"name":"dataEnd","nativeSrc":"10818:7:25","nodeType":"YulIdentifier","src":"10818:7:25"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"10773:20:25","nodeType":"YulIdentifier","src":"10773:20:25"},"nativeSrc":"10773:53:25","nodeType":"YulFunctionCall","src":"10773:53:25"},"variableNames":[{"name":"value6","nativeSrc":"10763:6:25","nodeType":"YulIdentifier","src":"10763:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nativeSrc":"9644:1199:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9732:9:25","nodeType":"YulTypedName","src":"9732:9:25","type":""},{"name":"dataEnd","nativeSrc":"9743:7:25","nodeType":"YulTypedName","src":"9743:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9755:6:25","nodeType":"YulTypedName","src":"9755:6:25","type":""},{"name":"value1","nativeSrc":"9763:6:25","nodeType":"YulTypedName","src":"9763:6:25","type":""},{"name":"value2","nativeSrc":"9771:6:25","nodeType":"YulTypedName","src":"9771:6:25","type":""},{"name":"value3","nativeSrc":"9779:6:25","nodeType":"YulTypedName","src":"9779:6:25","type":""},{"name":"value4","nativeSrc":"9787:6:25","nodeType":"YulTypedName","src":"9787:6:25","type":""},{"name":"value5","nativeSrc":"9795:6:25","nodeType":"YulTypedName","src":"9795:6:25","type":""},{"name":"value6","nativeSrc":"9803:6:25","nodeType":"YulTypedName","src":"9803:6:25","type":""}],"src":"9644:1199:25"},{"body":{"nativeSrc":"10932:391:25","nodeType":"YulBlock","src":"10932:391:25","statements":[{"body":{"nativeSrc":"10978:83:25","nodeType":"YulBlock","src":"10978:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10980:77:25","nodeType":"YulIdentifier","src":"10980:77:25"},"nativeSrc":"10980:79:25","nodeType":"YulFunctionCall","src":"10980:79:25"},"nativeSrc":"10980:79:25","nodeType":"YulExpressionStatement","src":"10980:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10953:7:25","nodeType":"YulIdentifier","src":"10953:7:25"},{"name":"headStart","nativeSrc":"10962:9:25","nodeType":"YulIdentifier","src":"10962:9:25"}],"functionName":{"name":"sub","nativeSrc":"10949:3:25","nodeType":"YulIdentifier","src":"10949:3:25"},"nativeSrc":"10949:23:25","nodeType":"YulFunctionCall","src":"10949:23:25"},{"kind":"number","nativeSrc":"10974:2:25","nodeType":"YulLiteral","src":"10974:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"10945:3:25","nodeType":"YulIdentifier","src":"10945:3:25"},"nativeSrc":"10945:32:25","nodeType":"YulFunctionCall","src":"10945:32:25"},"nativeSrc":"10942:119:25","nodeType":"YulIf","src":"10942:119:25"},{"nativeSrc":"11071:117:25","nodeType":"YulBlock","src":"11071:117:25","statements":[{"nativeSrc":"11086:15:25","nodeType":"YulVariableDeclaration","src":"11086:15:25","value":{"kind":"number","nativeSrc":"11100:1:25","nodeType":"YulLiteral","src":"11100:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11090:6:25","nodeType":"YulTypedName","src":"11090:6:25","type":""}]},{"nativeSrc":"11115:63:25","nodeType":"YulAssignment","src":"11115:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11150:9:25","nodeType":"YulIdentifier","src":"11150:9:25"},{"name":"offset","nativeSrc":"11161:6:25","nodeType":"YulIdentifier","src":"11161:6:25"}],"functionName":{"name":"add","nativeSrc":"11146:3:25","nodeType":"YulIdentifier","src":"11146:3:25"},"nativeSrc":"11146:22:25","nodeType":"YulFunctionCall","src":"11146:22:25"},{"name":"dataEnd","nativeSrc":"11170:7:25","nodeType":"YulIdentifier","src":"11170:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11125:20:25","nodeType":"YulIdentifier","src":"11125:20:25"},"nativeSrc":"11125:53:25","nodeType":"YulFunctionCall","src":"11125:53:25"},"variableNames":[{"name":"value0","nativeSrc":"11115:6:25","nodeType":"YulIdentifier","src":"11115:6:25"}]}]},{"nativeSrc":"11198:118:25","nodeType":"YulBlock","src":"11198:118:25","statements":[{"nativeSrc":"11213:16:25","nodeType":"YulVariableDeclaration","src":"11213:16:25","value":{"kind":"number","nativeSrc":"11227:2:25","nodeType":"YulLiteral","src":"11227:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11217:6:25","nodeType":"YulTypedName","src":"11217:6:25","type":""}]},{"nativeSrc":"11243:63:25","nodeType":"YulAssignment","src":"11243:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11278:9:25","nodeType":"YulIdentifier","src":"11278:9:25"},{"name":"offset","nativeSrc":"11289:6:25","nodeType":"YulIdentifier","src":"11289:6:25"}],"functionName":{"name":"add","nativeSrc":"11274:3:25","nodeType":"YulIdentifier","src":"11274:3:25"},"nativeSrc":"11274:22:25","nodeType":"YulFunctionCall","src":"11274:22:25"},{"name":"dataEnd","nativeSrc":"11298:7:25","nodeType":"YulIdentifier","src":"11298:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11253:20:25","nodeType":"YulIdentifier","src":"11253:20:25"},"nativeSrc":"11253:53:25","nodeType":"YulFunctionCall","src":"11253:53:25"},"variableNames":[{"name":"value1","nativeSrc":"11243:6:25","nodeType":"YulIdentifier","src":"11243:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"10849:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10894:9:25","nodeType":"YulTypedName","src":"10894:9:25","type":""},{"name":"dataEnd","nativeSrc":"10905:7:25","nodeType":"YulTypedName","src":"10905:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10917:6:25","nodeType":"YulTypedName","src":"10917:6:25","type":""},{"name":"value1","nativeSrc":"10925:6:25","nodeType":"YulTypedName","src":"10925:6:25","type":""}],"src":"10849:474:25"},{"body":{"nativeSrc":"11357:152:25","nodeType":"YulBlock","src":"11357:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11374:1:25","nodeType":"YulLiteral","src":"11374:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"11377:77:25","nodeType":"YulLiteral","src":"11377:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11367:6:25","nodeType":"YulIdentifier","src":"11367:6:25"},"nativeSrc":"11367:88:25","nodeType":"YulFunctionCall","src":"11367:88:25"},"nativeSrc":"11367:88:25","nodeType":"YulExpressionStatement","src":"11367:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11471:1:25","nodeType":"YulLiteral","src":"11471:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"11474:4:25","nodeType":"YulLiteral","src":"11474:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"11464:6:25","nodeType":"YulIdentifier","src":"11464:6:25"},"nativeSrc":"11464:15:25","nodeType":"YulFunctionCall","src":"11464:15:25"},"nativeSrc":"11464:15:25","nodeType":"YulExpressionStatement","src":"11464:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11495:1:25","nodeType":"YulLiteral","src":"11495:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"11498:4:25","nodeType":"YulLiteral","src":"11498:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"11488:6:25","nodeType":"YulIdentifier","src":"11488:6:25"},"nativeSrc":"11488:15:25","nodeType":"YulFunctionCall","src":"11488:15:25"},"nativeSrc":"11488:15:25","nodeType":"YulExpressionStatement","src":"11488:15:25"}]},"name":"panic_error_0x22","nativeSrc":"11329:180:25","nodeType":"YulFunctionDefinition","src":"11329:180:25"},{"body":{"nativeSrc":"11566:269:25","nodeType":"YulBlock","src":"11566:269:25","statements":[{"nativeSrc":"11576:22:25","nodeType":"YulAssignment","src":"11576:22:25","value":{"arguments":[{"name":"data","nativeSrc":"11590:4:25","nodeType":"YulIdentifier","src":"11590:4:25"},{"kind":"number","nativeSrc":"11596:1:25","nodeType":"YulLiteral","src":"11596:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"11586:3:25","nodeType":"YulIdentifier","src":"11586:3:25"},"nativeSrc":"11586:12:25","nodeType":"YulFunctionCall","src":"11586:12:25"},"variableNames":[{"name":"length","nativeSrc":"11576:6:25","nodeType":"YulIdentifier","src":"11576:6:25"}]},{"nativeSrc":"11607:38:25","nodeType":"YulVariableDeclaration","src":"11607:38:25","value":{"arguments":[{"name":"data","nativeSrc":"11637:4:25","nodeType":"YulIdentifier","src":"11637:4:25"},{"kind":"number","nativeSrc":"11643:1:25","nodeType":"YulLiteral","src":"11643:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"11633:3:25","nodeType":"YulIdentifier","src":"11633:3:25"},"nativeSrc":"11633:12:25","nodeType":"YulFunctionCall","src":"11633:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"11611:18:25","nodeType":"YulTypedName","src":"11611:18:25","type":""}]},{"body":{"nativeSrc":"11684:51:25","nodeType":"YulBlock","src":"11684:51:25","statements":[{"nativeSrc":"11698:27:25","nodeType":"YulAssignment","src":"11698:27:25","value":{"arguments":[{"name":"length","nativeSrc":"11712:6:25","nodeType":"YulIdentifier","src":"11712:6:25"},{"kind":"number","nativeSrc":"11720:4:25","nodeType":"YulLiteral","src":"11720:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"11708:3:25","nodeType":"YulIdentifier","src":"11708:3:25"},"nativeSrc":"11708:17:25","nodeType":"YulFunctionCall","src":"11708:17:25"},"variableNames":[{"name":"length","nativeSrc":"11698:6:25","nodeType":"YulIdentifier","src":"11698:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11664:18:25","nodeType":"YulIdentifier","src":"11664:18:25"}],"functionName":{"name":"iszero","nativeSrc":"11657:6:25","nodeType":"YulIdentifier","src":"11657:6:25"},"nativeSrc":"11657:26:25","nodeType":"YulFunctionCall","src":"11657:26:25"},"nativeSrc":"11654:81:25","nodeType":"YulIf","src":"11654:81:25"},{"body":{"nativeSrc":"11787:42:25","nodeType":"YulBlock","src":"11787:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"11801:16:25","nodeType":"YulIdentifier","src":"11801:16:25"},"nativeSrc":"11801:18:25","nodeType":"YulFunctionCall","src":"11801:18:25"},"nativeSrc":"11801:18:25","nodeType":"YulExpressionStatement","src":"11801:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"11751:18:25","nodeType":"YulIdentifier","src":"11751:18:25"},{"arguments":[{"name":"length","nativeSrc":"11774:6:25","nodeType":"YulIdentifier","src":"11774:6:25"},{"kind":"number","nativeSrc":"11782:2:25","nodeType":"YulLiteral","src":"11782:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"11771:2:25","nodeType":"YulIdentifier","src":"11771:2:25"},"nativeSrc":"11771:14:25","nodeType":"YulFunctionCall","src":"11771:14:25"}],"functionName":{"name":"eq","nativeSrc":"11748:2:25","nodeType":"YulIdentifier","src":"11748:2:25"},"nativeSrc":"11748:38:25","nodeType":"YulFunctionCall","src":"11748:38:25"},"nativeSrc":"11745:84:25","nodeType":"YulIf","src":"11745:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"11515:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"11550:4:25","nodeType":"YulTypedName","src":"11550:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"11559:6:25","nodeType":"YulTypedName","src":"11559:6:25","type":""}],"src":"11515:320:25"},{"body":{"nativeSrc":"11869:152:25","nodeType":"YulBlock","src":"11869:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11886:1:25","nodeType":"YulLiteral","src":"11886:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"11889:77:25","nodeType":"YulLiteral","src":"11889:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"11879:6:25","nodeType":"YulIdentifier","src":"11879:6:25"},"nativeSrc":"11879:88:25","nodeType":"YulFunctionCall","src":"11879:88:25"},"nativeSrc":"11879:88:25","nodeType":"YulExpressionStatement","src":"11879:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"11983:1:25","nodeType":"YulLiteral","src":"11983:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"11986:4:25","nodeType":"YulLiteral","src":"11986:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"11976:6:25","nodeType":"YulIdentifier","src":"11976:6:25"},"nativeSrc":"11976:15:25","nodeType":"YulFunctionCall","src":"11976:15:25"},"nativeSrc":"11976:15:25","nodeType":"YulExpressionStatement","src":"11976:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12007:1:25","nodeType":"YulLiteral","src":"12007:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"12010:4:25","nodeType":"YulLiteral","src":"12010:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12000:6:25","nodeType":"YulIdentifier","src":"12000:6:25"},"nativeSrc":"12000:15:25","nodeType":"YulFunctionCall","src":"12000:15:25"},"nativeSrc":"12000:15:25","nodeType":"YulExpressionStatement","src":"12000:15:25"}]},"name":"panic_error_0x41","nativeSrc":"11841:180:25","nodeType":"YulFunctionDefinition","src":"11841:180:25"},{"body":{"nativeSrc":"12265:537:25","nodeType":"YulBlock","src":"12265:537:25","statements":[{"nativeSrc":"12275:27:25","nodeType":"YulAssignment","src":"12275:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"12287:9:25","nodeType":"YulIdentifier","src":"12287:9:25"},{"kind":"number","nativeSrc":"12298:3:25","nodeType":"YulLiteral","src":"12298:3:25","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"12283:3:25","nodeType":"YulIdentifier","src":"12283:3:25"},"nativeSrc":"12283:19:25","nodeType":"YulFunctionCall","src":"12283:19:25"},"variableNames":[{"name":"tail","nativeSrc":"12275:4:25","nodeType":"YulIdentifier","src":"12275:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12356:6:25","nodeType":"YulIdentifier","src":"12356:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"12369:9:25","nodeType":"YulIdentifier","src":"12369:9:25"},{"kind":"number","nativeSrc":"12380:1:25","nodeType":"YulLiteral","src":"12380:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12365:3:25","nodeType":"YulIdentifier","src":"12365:3:25"},"nativeSrc":"12365:17:25","nodeType":"YulFunctionCall","src":"12365:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"12312:43:25","nodeType":"YulIdentifier","src":"12312:43:25"},"nativeSrc":"12312:71:25","nodeType":"YulFunctionCall","src":"12312:71:25"},"nativeSrc":"12312:71:25","nodeType":"YulExpressionStatement","src":"12312:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12437:6:25","nodeType":"YulIdentifier","src":"12437:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"12450:9:25","nodeType":"YulIdentifier","src":"12450:9:25"},{"kind":"number","nativeSrc":"12461:2:25","nodeType":"YulLiteral","src":"12461:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12446:3:25","nodeType":"YulIdentifier","src":"12446:3:25"},"nativeSrc":"12446:18:25","nodeType":"YulFunctionCall","src":"12446:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12393:43:25","nodeType":"YulIdentifier","src":"12393:43:25"},"nativeSrc":"12393:72:25","nodeType":"YulFunctionCall","src":"12393:72:25"},"nativeSrc":"12393:72:25","nodeType":"YulExpressionStatement","src":"12393:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12519:6:25","nodeType":"YulIdentifier","src":"12519:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"12532:9:25","nodeType":"YulIdentifier","src":"12532:9:25"},{"kind":"number","nativeSrc":"12543:2:25","nodeType":"YulLiteral","src":"12543:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12528:3:25","nodeType":"YulIdentifier","src":"12528:3:25"},"nativeSrc":"12528:18:25","nodeType":"YulFunctionCall","src":"12528:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12475:43:25","nodeType":"YulIdentifier","src":"12475:43:25"},"nativeSrc":"12475:72:25","nodeType":"YulFunctionCall","src":"12475:72:25"},"nativeSrc":"12475:72:25","nodeType":"YulExpressionStatement","src":"12475:72:25"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"12601:6:25","nodeType":"YulIdentifier","src":"12601:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"12614:9:25","nodeType":"YulIdentifier","src":"12614:9:25"},{"kind":"number","nativeSrc":"12625:2:25","nodeType":"YulLiteral","src":"12625:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12610:3:25","nodeType":"YulIdentifier","src":"12610:3:25"},"nativeSrc":"12610:18:25","nodeType":"YulFunctionCall","src":"12610:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12557:43:25","nodeType":"YulIdentifier","src":"12557:43:25"},"nativeSrc":"12557:72:25","nodeType":"YulFunctionCall","src":"12557:72:25"},"nativeSrc":"12557:72:25","nodeType":"YulExpressionStatement","src":"12557:72:25"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"12683:6:25","nodeType":"YulIdentifier","src":"12683:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"12696:9:25","nodeType":"YulIdentifier","src":"12696:9:25"},{"kind":"number","nativeSrc":"12707:3:25","nodeType":"YulLiteral","src":"12707:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"12692:3:25","nodeType":"YulIdentifier","src":"12692:3:25"},"nativeSrc":"12692:19:25","nodeType":"YulFunctionCall","src":"12692:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12639:43:25","nodeType":"YulIdentifier","src":"12639:43:25"},"nativeSrc":"12639:73:25","nodeType":"YulFunctionCall","src":"12639:73:25"},"nativeSrc":"12639:73:25","nodeType":"YulExpressionStatement","src":"12639:73:25"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"12766:6:25","nodeType":"YulIdentifier","src":"12766:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"12779:9:25","nodeType":"YulIdentifier","src":"12779:9:25"},{"kind":"number","nativeSrc":"12790:3:25","nodeType":"YulLiteral","src":"12790:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"12775:3:25","nodeType":"YulIdentifier","src":"12775:3:25"},"nativeSrc":"12775:19:25","nodeType":"YulFunctionCall","src":"12775:19:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12722:43:25","nodeType":"YulIdentifier","src":"12722:43:25"},"nativeSrc":"12722:73:25","nodeType":"YulFunctionCall","src":"12722:73:25"},"nativeSrc":"12722:73:25","nodeType":"YulExpressionStatement","src":"12722:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12027:775:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12197:9:25","nodeType":"YulTypedName","src":"12197:9:25","type":""},{"name":"value5","nativeSrc":"12209:6:25","nodeType":"YulTypedName","src":"12209:6:25","type":""},{"name":"value4","nativeSrc":"12217:6:25","nodeType":"YulTypedName","src":"12217:6:25","type":""},{"name":"value3","nativeSrc":"12225:6:25","nodeType":"YulTypedName","src":"12225:6:25","type":""},{"name":"value2","nativeSrc":"12233:6:25","nodeType":"YulTypedName","src":"12233:6:25","type":""},{"name":"value1","nativeSrc":"12241:6:25","nodeType":"YulTypedName","src":"12241:6:25","type":""},{"name":"value0","nativeSrc":"12249:6:25","nodeType":"YulTypedName","src":"12249:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12260:4:25","nodeType":"YulTypedName","src":"12260:4:25","type":""}],"src":"12027:775:25"},{"body":{"nativeSrc":"12934:206:25","nodeType":"YulBlock","src":"12934:206:25","statements":[{"nativeSrc":"12944:26:25","nodeType":"YulAssignment","src":"12944:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"12956:9:25","nodeType":"YulIdentifier","src":"12956:9:25"},{"kind":"number","nativeSrc":"12967:2:25","nodeType":"YulLiteral","src":"12967:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12952:3:25","nodeType":"YulIdentifier","src":"12952:3:25"},"nativeSrc":"12952:18:25","nodeType":"YulFunctionCall","src":"12952:18:25"},"variableNames":[{"name":"tail","nativeSrc":"12944:4:25","nodeType":"YulIdentifier","src":"12944:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13024:6:25","nodeType":"YulIdentifier","src":"13024:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"13037:9:25","nodeType":"YulIdentifier","src":"13037:9:25"},{"kind":"number","nativeSrc":"13048:1:25","nodeType":"YulLiteral","src":"13048:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13033:3:25","nodeType":"YulIdentifier","src":"13033:3:25"},"nativeSrc":"13033:17:25","nodeType":"YulFunctionCall","src":"13033:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12980:43:25","nodeType":"YulIdentifier","src":"12980:43:25"},"nativeSrc":"12980:71:25","nodeType":"YulFunctionCall","src":"12980:71:25"},"nativeSrc":"12980:71:25","nodeType":"YulExpressionStatement","src":"12980:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13105:6:25","nodeType":"YulIdentifier","src":"13105:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"13118:9:25","nodeType":"YulIdentifier","src":"13118:9:25"},{"kind":"number","nativeSrc":"13129:2:25","nodeType":"YulLiteral","src":"13129:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13114:3:25","nodeType":"YulIdentifier","src":"13114:3:25"},"nativeSrc":"13114:18:25","nodeType":"YulFunctionCall","src":"13114:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13061:43:25","nodeType":"YulIdentifier","src":"13061:43:25"},"nativeSrc":"13061:72:25","nodeType":"YulFunctionCall","src":"13061:72:25"},"nativeSrc":"13061:72:25","nodeType":"YulExpressionStatement","src":"13061:72:25"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"12808:332:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12898:9:25","nodeType":"YulTypedName","src":"12898:9:25","type":""},{"name":"value1","nativeSrc":"12910:6:25","nodeType":"YulTypedName","src":"12910:6:25","type":""},{"name":"value0","nativeSrc":"12918:6:25","nodeType":"YulTypedName","src":"12918:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12929:4:25","nodeType":"YulTypedName","src":"12929:4:25","type":""}],"src":"12808:332:25"},{"body":{"nativeSrc":"13300:288:25","nodeType":"YulBlock","src":"13300:288:25","statements":[{"nativeSrc":"13310:26:25","nodeType":"YulAssignment","src":"13310:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"13322:9:25","nodeType":"YulIdentifier","src":"13322:9:25"},{"kind":"number","nativeSrc":"13333:2:25","nodeType":"YulLiteral","src":"13333:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"13318:3:25","nodeType":"YulIdentifier","src":"13318:3:25"},"nativeSrc":"13318:18:25","nodeType":"YulFunctionCall","src":"13318:18:25"},"variableNames":[{"name":"tail","nativeSrc":"13310:4:25","nodeType":"YulIdentifier","src":"13310:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"13390:6:25","nodeType":"YulIdentifier","src":"13390:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"13403:9:25","nodeType":"YulIdentifier","src":"13403:9:25"},{"kind":"number","nativeSrc":"13414:1:25","nodeType":"YulLiteral","src":"13414:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13399:3:25","nodeType":"YulIdentifier","src":"13399:3:25"},"nativeSrc":"13399:17:25","nodeType":"YulFunctionCall","src":"13399:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"13346:43:25","nodeType":"YulIdentifier","src":"13346:43:25"},"nativeSrc":"13346:71:25","nodeType":"YulFunctionCall","src":"13346:71:25"},"nativeSrc":"13346:71:25","nodeType":"YulExpressionStatement","src":"13346:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"13471:6:25","nodeType":"YulIdentifier","src":"13471:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"13484:9:25","nodeType":"YulIdentifier","src":"13484:9:25"},{"kind":"number","nativeSrc":"13495:2:25","nodeType":"YulLiteral","src":"13495:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13480:3:25","nodeType":"YulIdentifier","src":"13480:3:25"},"nativeSrc":"13480:18:25","nodeType":"YulFunctionCall","src":"13480:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13427:43:25","nodeType":"YulIdentifier","src":"13427:43:25"},"nativeSrc":"13427:72:25","nodeType":"YulFunctionCall","src":"13427:72:25"},"nativeSrc":"13427:72:25","nodeType":"YulExpressionStatement","src":"13427:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"13553:6:25","nodeType":"YulIdentifier","src":"13553:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"13566:9:25","nodeType":"YulIdentifier","src":"13566:9:25"},{"kind":"number","nativeSrc":"13577:2:25","nodeType":"YulLiteral","src":"13577:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"13562:3:25","nodeType":"YulIdentifier","src":"13562:3:25"},"nativeSrc":"13562:18:25","nodeType":"YulFunctionCall","src":"13562:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"13509:43:25","nodeType":"YulIdentifier","src":"13509:43:25"},"nativeSrc":"13509:72:25","nodeType":"YulFunctionCall","src":"13509:72:25"},"nativeSrc":"13509:72:25","nodeType":"YulExpressionStatement","src":"13509:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13146:442:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13256:9:25","nodeType":"YulTypedName","src":"13256:9:25","type":""},{"name":"value2","nativeSrc":"13268:6:25","nodeType":"YulTypedName","src":"13268:6:25","type":""},{"name":"value1","nativeSrc":"13276:6:25","nodeType":"YulTypedName","src":"13276:6:25","type":""},{"name":"value0","nativeSrc":"13284:6:25","nodeType":"YulTypedName","src":"13284:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13295:4:25","nodeType":"YulTypedName","src":"13295:4:25","type":""}],"src":"13146:442:25"},{"body":{"nativeSrc":"13622:152:25","nodeType":"YulBlock","src":"13622:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"13639:1:25","nodeType":"YulLiteral","src":"13639:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"13642:77:25","nodeType":"YulLiteral","src":"13642:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"13632:6:25","nodeType":"YulIdentifier","src":"13632:6:25"},"nativeSrc":"13632:88:25","nodeType":"YulFunctionCall","src":"13632:88:25"},"nativeSrc":"13632:88:25","nodeType":"YulExpressionStatement","src":"13632:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13736:1:25","nodeType":"YulLiteral","src":"13736:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"13739:4:25","nodeType":"YulLiteral","src":"13739:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"13729:6:25","nodeType":"YulIdentifier","src":"13729:6:25"},"nativeSrc":"13729:15:25","nodeType":"YulFunctionCall","src":"13729:15:25"},"nativeSrc":"13729:15:25","nodeType":"YulExpressionStatement","src":"13729:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"13760:1:25","nodeType":"YulLiteral","src":"13760:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"13763:4:25","nodeType":"YulLiteral","src":"13763:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"13753:6:25","nodeType":"YulIdentifier","src":"13753:6:25"},"nativeSrc":"13753:15:25","nodeType":"YulFunctionCall","src":"13753:15:25"},"nativeSrc":"13753:15:25","nodeType":"YulExpressionStatement","src":"13753:15:25"}]},"name":"panic_error_0x11","nativeSrc":"13594:180:25","nodeType":"YulFunctionDefinition","src":"13594:180:25"},{"body":{"nativeSrc":"13824:147:25","nodeType":"YulBlock","src":"13824:147:25","statements":[{"nativeSrc":"13834:25:25","nodeType":"YulAssignment","src":"13834:25:25","value":{"arguments":[{"name":"x","nativeSrc":"13857:1:25","nodeType":"YulIdentifier","src":"13857:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13839:17:25","nodeType":"YulIdentifier","src":"13839:17:25"},"nativeSrc":"13839:20:25","nodeType":"YulFunctionCall","src":"13839:20:25"},"variableNames":[{"name":"x","nativeSrc":"13834:1:25","nodeType":"YulIdentifier","src":"13834:1:25"}]},{"nativeSrc":"13868:25:25","nodeType":"YulAssignment","src":"13868:25:25","value":{"arguments":[{"name":"y","nativeSrc":"13891:1:25","nodeType":"YulIdentifier","src":"13891:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"13873:17:25","nodeType":"YulIdentifier","src":"13873:17:25"},"nativeSrc":"13873:20:25","nodeType":"YulFunctionCall","src":"13873:20:25"},"variableNames":[{"name":"y","nativeSrc":"13868:1:25","nodeType":"YulIdentifier","src":"13868:1:25"}]},{"nativeSrc":"13902:16:25","nodeType":"YulAssignment","src":"13902:16:25","value":{"arguments":[{"name":"x","nativeSrc":"13913:1:25","nodeType":"YulIdentifier","src":"13913:1:25"},{"name":"y","nativeSrc":"13916:1:25","nodeType":"YulIdentifier","src":"13916:1:25"}],"functionName":{"name":"add","nativeSrc":"13909:3:25","nodeType":"YulIdentifier","src":"13909:3:25"},"nativeSrc":"13909:9:25","nodeType":"YulFunctionCall","src":"13909:9:25"},"variableNames":[{"name":"sum","nativeSrc":"13902:3:25","nodeType":"YulIdentifier","src":"13902:3:25"}]},{"body":{"nativeSrc":"13942:22:25","nodeType":"YulBlock","src":"13942:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13944:16:25","nodeType":"YulIdentifier","src":"13944:16:25"},"nativeSrc":"13944:18:25","nodeType":"YulFunctionCall","src":"13944:18:25"},"nativeSrc":"13944:18:25","nodeType":"YulExpressionStatement","src":"13944:18:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"13934:1:25","nodeType":"YulIdentifier","src":"13934:1:25"},{"name":"sum","nativeSrc":"13937:3:25","nodeType":"YulIdentifier","src":"13937:3:25"}],"functionName":{"name":"gt","nativeSrc":"13931:2:25","nodeType":"YulIdentifier","src":"13931:2:25"},"nativeSrc":"13931:10:25","nodeType":"YulFunctionCall","src":"13931:10:25"},"nativeSrc":"13928:36:25","nodeType":"YulIf","src":"13928:36:25"}]},"name":"checked_add_t_uint256","nativeSrc":"13780:191:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"13811:1:25","nodeType":"YulTypedName","src":"13811:1:25","type":""},{"name":"y","nativeSrc":"13814:1:25","nodeType":"YulTypedName","src":"13814:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"13820:3:25","nodeType":"YulTypedName","src":"13820:3:25","type":""}],"src":"13780:191:25"},{"body":{"nativeSrc":"14187:454:25","nodeType":"YulBlock","src":"14187:454:25","statements":[{"nativeSrc":"14197:27:25","nodeType":"YulAssignment","src":"14197:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"14209:9:25","nodeType":"YulIdentifier","src":"14209:9:25"},{"kind":"number","nativeSrc":"14220:3:25","nodeType":"YulLiteral","src":"14220:3:25","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"14205:3:25","nodeType":"YulIdentifier","src":"14205:3:25"},"nativeSrc":"14205:19:25","nodeType":"YulFunctionCall","src":"14205:19:25"},"variableNames":[{"name":"tail","nativeSrc":"14197:4:25","nodeType":"YulIdentifier","src":"14197:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14278:6:25","nodeType":"YulIdentifier","src":"14278:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14291:9:25","nodeType":"YulIdentifier","src":"14291:9:25"},{"kind":"number","nativeSrc":"14302:1:25","nodeType":"YulLiteral","src":"14302:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14287:3:25","nodeType":"YulIdentifier","src":"14287:3:25"},"nativeSrc":"14287:17:25","nodeType":"YulFunctionCall","src":"14287:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14234:43:25","nodeType":"YulIdentifier","src":"14234:43:25"},"nativeSrc":"14234:71:25","nodeType":"YulFunctionCall","src":"14234:71:25"},"nativeSrc":"14234:71:25","nodeType":"YulExpressionStatement","src":"14234:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14359:6:25","nodeType":"YulIdentifier","src":"14359:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14372:9:25","nodeType":"YulIdentifier","src":"14372:9:25"},{"kind":"number","nativeSrc":"14383:2:25","nodeType":"YulLiteral","src":"14383:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14368:3:25","nodeType":"YulIdentifier","src":"14368:3:25"},"nativeSrc":"14368:18:25","nodeType":"YulFunctionCall","src":"14368:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14315:43:25","nodeType":"YulIdentifier","src":"14315:43:25"},"nativeSrc":"14315:72:25","nodeType":"YulFunctionCall","src":"14315:72:25"},"nativeSrc":"14315:72:25","nodeType":"YulExpressionStatement","src":"14315:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"14441:6:25","nodeType":"YulIdentifier","src":"14441:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14454:9:25","nodeType":"YulIdentifier","src":"14454:9:25"},{"kind":"number","nativeSrc":"14465:2:25","nodeType":"YulLiteral","src":"14465:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14450:3:25","nodeType":"YulIdentifier","src":"14450:3:25"},"nativeSrc":"14450:18:25","nodeType":"YulFunctionCall","src":"14450:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14397:43:25","nodeType":"YulIdentifier","src":"14397:43:25"},"nativeSrc":"14397:72:25","nodeType":"YulFunctionCall","src":"14397:72:25"},"nativeSrc":"14397:72:25","nodeType":"YulExpressionStatement","src":"14397:72:25"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"14523:6:25","nodeType":"YulIdentifier","src":"14523:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14536:9:25","nodeType":"YulIdentifier","src":"14536:9:25"},{"kind":"number","nativeSrc":"14547:2:25","nodeType":"YulLiteral","src":"14547:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14532:3:25","nodeType":"YulIdentifier","src":"14532:3:25"},"nativeSrc":"14532:18:25","nodeType":"YulFunctionCall","src":"14532:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14479:43:25","nodeType":"YulIdentifier","src":"14479:43:25"},"nativeSrc":"14479:72:25","nodeType":"YulFunctionCall","src":"14479:72:25"},"nativeSrc":"14479:72:25","nodeType":"YulExpressionStatement","src":"14479:72:25"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"14605:6:25","nodeType":"YulIdentifier","src":"14605:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14618:9:25","nodeType":"YulIdentifier","src":"14618:9:25"},{"kind":"number","nativeSrc":"14629:3:25","nodeType":"YulLiteral","src":"14629:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14614:3:25","nodeType":"YulIdentifier","src":"14614:3:25"},"nativeSrc":"14614:19:25","nodeType":"YulFunctionCall","src":"14614:19:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14561:43:25","nodeType":"YulIdentifier","src":"14561:43:25"},"nativeSrc":"14561:73:25","nodeType":"YulFunctionCall","src":"14561:73:25"},"nativeSrc":"14561:73:25","nodeType":"YulExpressionStatement","src":"14561:73:25"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nativeSrc":"13977:664:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14127:9:25","nodeType":"YulTypedName","src":"14127:9:25","type":""},{"name":"value4","nativeSrc":"14139:6:25","nodeType":"YulTypedName","src":"14139:6:25","type":""},{"name":"value3","nativeSrc":"14147:6:25","nodeType":"YulTypedName","src":"14147:6:25","type":""},{"name":"value2","nativeSrc":"14155:6:25","nodeType":"YulTypedName","src":"14155:6:25","type":""},{"name":"value1","nativeSrc":"14163:6:25","nodeType":"YulTypedName","src":"14163:6:25","type":""},{"name":"value0","nativeSrc":"14171:6:25","nodeType":"YulTypedName","src":"14171:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14182:4:25","nodeType":"YulTypedName","src":"14182:4:25","type":""}],"src":"13977:664:25"},{"body":{"nativeSrc":"14825:367:25","nodeType":"YulBlock","src":"14825:367:25","statements":[{"nativeSrc":"14835:27:25","nodeType":"YulAssignment","src":"14835:27:25","value":{"arguments":[{"name":"headStart","nativeSrc":"14847:9:25","nodeType":"YulIdentifier","src":"14847:9:25"},{"kind":"number","nativeSrc":"14858:3:25","nodeType":"YulLiteral","src":"14858:3:25","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14843:3:25","nodeType":"YulIdentifier","src":"14843:3:25"},"nativeSrc":"14843:19:25","nodeType":"YulFunctionCall","src":"14843:19:25"},"variableNames":[{"name":"tail","nativeSrc":"14835:4:25","nodeType":"YulIdentifier","src":"14835:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14916:6:25","nodeType":"YulIdentifier","src":"14916:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14929:9:25","nodeType":"YulIdentifier","src":"14929:9:25"},{"kind":"number","nativeSrc":"14940:1:25","nodeType":"YulLiteral","src":"14940:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14925:3:25","nodeType":"YulIdentifier","src":"14925:3:25"},"nativeSrc":"14925:17:25","nodeType":"YulFunctionCall","src":"14925:17:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14872:43:25","nodeType":"YulIdentifier","src":"14872:43:25"},"nativeSrc":"14872:71:25","nodeType":"YulFunctionCall","src":"14872:71:25"},"nativeSrc":"14872:71:25","nodeType":"YulExpressionStatement","src":"14872:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14993:6:25","nodeType":"YulIdentifier","src":"14993:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15006:9:25","nodeType":"YulIdentifier","src":"15006:9:25"},{"kind":"number","nativeSrc":"15017:2:25","nodeType":"YulLiteral","src":"15017:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15002:3:25","nodeType":"YulIdentifier","src":"15002:3:25"},"nativeSrc":"15002:18:25","nodeType":"YulFunctionCall","src":"15002:18:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"14953:39:25","nodeType":"YulIdentifier","src":"14953:39:25"},"nativeSrc":"14953:68:25","nodeType":"YulFunctionCall","src":"14953:68:25"},"nativeSrc":"14953:68:25","nodeType":"YulExpressionStatement","src":"14953:68:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15075:6:25","nodeType":"YulIdentifier","src":"15075:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15088:9:25","nodeType":"YulIdentifier","src":"15088:9:25"},{"kind":"number","nativeSrc":"15099:2:25","nodeType":"YulLiteral","src":"15099:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15084:3:25","nodeType":"YulIdentifier","src":"15084:3:25"},"nativeSrc":"15084:18:25","nodeType":"YulFunctionCall","src":"15084:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15031:43:25","nodeType":"YulIdentifier","src":"15031:43:25"},"nativeSrc":"15031:72:25","nodeType":"YulFunctionCall","src":"15031:72:25"},"nativeSrc":"15031:72:25","nodeType":"YulExpressionStatement","src":"15031:72:25"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15157:6:25","nodeType":"YulIdentifier","src":"15157:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15170:9:25","nodeType":"YulIdentifier","src":"15170:9:25"},{"kind":"number","nativeSrc":"15181:2:25","nodeType":"YulLiteral","src":"15181:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15166:3:25","nodeType":"YulIdentifier","src":"15166:3:25"},"nativeSrc":"15166:18:25","nodeType":"YulFunctionCall","src":"15166:18:25"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15113:43:25","nodeType":"YulIdentifier","src":"15113:43:25"},"nativeSrc":"15113:72:25","nodeType":"YulFunctionCall","src":"15113:72:25"},"nativeSrc":"15113:72:25","nodeType":"YulExpressionStatement","src":"15113:72:25"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"14647:545:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14773:9:25","nodeType":"YulTypedName","src":"14773:9:25","type":""},{"name":"value3","nativeSrc":"14785:6:25","nodeType":"YulTypedName","src":"14785:6:25","type":""},{"name":"value2","nativeSrc":"14793:6:25","nodeType":"YulTypedName","src":"14793:6:25","type":""},{"name":"value1","nativeSrc":"14801:6:25","nodeType":"YulTypedName","src":"14801:6:25","type":""},{"name":"value0","nativeSrc":"14809:6:25","nodeType":"YulTypedName","src":"14809:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14820:4:25","nodeType":"YulTypedName","src":"14820:4:25","type":""}],"src":"14647:545:25"},{"body":{"nativeSrc":"15226:152:25","nodeType":"YulBlock","src":"15226:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15243:1:25","nodeType":"YulLiteral","src":"15243:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"15246:77:25","nodeType":"YulLiteral","src":"15246:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15236:6:25","nodeType":"YulIdentifier","src":"15236:6:25"},"nativeSrc":"15236:88:25","nodeType":"YulFunctionCall","src":"15236:88:25"},"nativeSrc":"15236:88:25","nodeType":"YulExpressionStatement","src":"15236:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15340:1:25","nodeType":"YulLiteral","src":"15340:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"15343:4:25","nodeType":"YulLiteral","src":"15343:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15333:6:25","nodeType":"YulIdentifier","src":"15333:6:25"},"nativeSrc":"15333:15:25","nodeType":"YulFunctionCall","src":"15333:15:25"},"nativeSrc":"15333:15:25","nodeType":"YulExpressionStatement","src":"15333:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15364:1:25","nodeType":"YulLiteral","src":"15364:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"15367:4:25","nodeType":"YulLiteral","src":"15367:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15357:6:25","nodeType":"YulIdentifier","src":"15357:6:25"},"nativeSrc":"15357:15:25","nodeType":"YulFunctionCall","src":"15357:15:25"},"nativeSrc":"15357:15:25","nodeType":"YulExpressionStatement","src":"15357:15:25"}]},"name":"panic_error_0x21","nativeSrc":"15198:180:25","nodeType":"YulFunctionDefinition","src":"15198:180:25"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"3557":[{"length":32,"start":2803}],"3559":[{"length":32,"start":2762}],"3561":[{"length":32,"start":2676}],"3563":[{"length":32,"start":4727}],"3565":[{"length":32,"start":4760}],"3568":[{"length":32,"start":3400}],"3571":[{"length":32,"start":3459}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a257806395d89b411161007157806395d89b41146102b0578063a9059cbb146102ce578063d505accf146102fe578063dd62ed3e1461031a578063f2fde38b1461034a5761010b565b8063715018a6146102345780637ecebe001461023e57806384b0196e1461026e5780638da5cb5b146102925761010b565b8063313ce567116100de578063313ce567146101ac5780633644e515146101ca57806340c10f19146101e857806370a08231146102045761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610366565b6040516101259190611785565b60405180910390f35b61014860048036038101906101439190611840565b6103f8565b604051610155919061189b565b60405180910390f35b61016661041b565b60405161017391906118c5565b60405180910390f35b610196600480360381019061019191906118e0565b610425565b6040516101a3919061189b565b60405180910390f35b6101b4610454565b6040516101c1919061194f565b60405180910390f35b6101d261045d565b6040516101df9190611983565b60405180910390f35b61020260048036038101906101fd9190611840565b61046c565b005b61021e6004803603810190610219919061199e565b610482565b60405161022b91906118c5565b60405180910390f35b61023c6104ca565b005b6102586004803603810190610253919061199e565b6104de565b60405161026591906118c5565b60405180910390f35b6102766104f0565b6040516102899796959493929190611ad3565b60405180910390f35b61029a61059a565b6040516102a79190611b57565b60405180910390f35b6102b86105c4565b6040516102c59190611785565b60405180910390f35b6102e860048036038101906102e39190611840565b610656565b6040516102f5919061189b565b60405180910390f35b61031860048036038101906103139190611bca565b610679565b005b610334600480360381019061032f9190611c6c565b6107c1565b60405161034191906118c5565b60405180910390f35b610364600480360381019061035f919061199e565b610848565b005b60606003805461037590611cdb565b80601f01602080910402602001604051908101604052809291908181526020018280546103a190611cdb565b80156103ee5780601f106103c3576101008083540402835291602001916103ee565b820191906000526020600020905b8154815290600101906020018083116103d157829003601f168201915b5050505050905090565b6000806104036108ce565b90506104108185856108d6565b600191505092915050565b6000600254905090565b6000806104306108ce565b905061043d8582856108e8565b61044885858561097c565b60019150509392505050565b60006012905090565b6000610467610a70565b905090565b610474610b27565b61047e8282610bae565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104d2610b27565b6104dc6000610c30565b565b60006104e982610cf6565b9050919050565b600060608060008060006060610504610d3f565b61050c610d7a565b46306000801b600067ffffffffffffffff81111561052d5761052c611d0c565b5b60405190808252806020026020018201604052801561055b5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105d390611cdb565b80601f01602080910402602001604051908101604052809291908181526020018280546105ff90611cdb565b801561064c5780601f106106215761010080835404028352916020019161064c565b820191906000526020600020905b81548152906001019060200180831161062f57829003601f168201915b5050505050905090565b6000806106616108ce565b905061066e81858561097c565b600191505092915050565b834211156106be57836040517f627913020000000000000000000000000000000000000000000000000000000081526004016106b591906118c5565b60405180910390fd5b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106ed8c610db5565b8960405160200161070396959493929190611d3b565b604051602081830303815290604052805190602001209050600061072682610e0c565b9050600061073682878787610e26565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107aa57808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016107a1929190611d9c565b60405180910390fd5b6107b58a8a8a6108d6565b50505050505050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610850610b27565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c25760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108b99190611b57565b60405180910390fd5b6108cb81610c30565b50565b600033905090565b6108e38383836001610e56565b505050565b60006108f484846107c1565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109765781811015610966578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161095d93929190611dc5565b60405180910390fd5b61097584848484036000610e56565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109ee5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109e59190611b57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a605760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a579190611b57565b60405180910390fd5b610a6b83838361102d565b505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610aec57507f000000000000000000000000000000000000000000000000000000000000000046145b15610b19577f00000000000000000000000000000000000000000000000000000000000000009050610b24565b610b21611252565b90505b90565b610b2f6108ce565b73ffffffffffffffffffffffffffffffffffffffff16610b4d61059a565b73ffffffffffffffffffffffffffffffffffffffff1614610bac57610b706108ce565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ba39190611b57565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c205760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c179190611b57565b60405180910390fd5b610c2c6000838361102d565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060610d7560067f00000000000000000000000000000000000000000000000000000000000000006112e890919063ffffffff16565b905090565b6060610db060077f00000000000000000000000000000000000000000000000000000000000000006112e890919063ffffffff16565b905090565b6000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190600101919050559050919050565b6000610e1f610e19610a70565b83611398565b9050919050565b600080600080610e38888888886113d9565b925092509250610e4882826114cd565b829350505050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ec85760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ebf9190611b57565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f3a5760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f319190611b57565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611027578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161101e91906118c5565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361107f5780600260008282546110739190611e2b565b92505081905550611152565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561110b578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161110293929190611dc5565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361119b57806002600082825403925050819055506111e8565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161124591906118c5565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016112cd959493929190611e5f565b60405160208183030381529060405280519060200120905090565b606060ff60001b8314611305576112fe83611631565b9050611392565b81805461131190611cdb565b80601f016020809104026020016040519081016040528092919081815260200182805461133d90611cdb565b801561138a5780601f1061135f5761010080835404028352916020019161138a565b820191906000526020600020905b81548152906001019060200180831161136d57829003601f168201915b505050505090505b92915050565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c11156114195760006003859250925092506114c3565b60006001888888886040516000815260200160405260405161143e9493929190611eb2565b6020604051602081039080840390855afa158015611460573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114b457600060016000801b935093509350506114c3565b8060008060001b935093509350505b9450945094915050565b600060038111156114e1576114e0611ef7565b5b8260038111156114f4576114f3611ef7565b5b031561162d576001600381111561150e5761150d611ef7565b5b82600381111561152157611520611ef7565b5b03611558576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561156c5761156b611ef7565b5b82600381111561157f5761157e611ef7565b5b036115c4578060001c6040517ffce698f70000000000000000000000000000000000000000000000000000000081526004016115bb91906118c5565b60405180910390fd5b6003808111156115d7576115d6611ef7565b5b8260038111156115ea576115e9611ef7565b5b0361162c57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016116239190611983565b60405180910390fd5b5b5050565b6060600061163e836116a5565b90506000602067ffffffffffffffff81111561165d5761165c611d0c565b5b6040519080825280601f01601f19166020018201604052801561168f5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b60008060ff8360001c169050601f8111156116ec576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561172f578082015181840152602081019050611714565b60008484015250505050565b6000601f19601f8301169050919050565b6000611757826116f5565b6117618185611700565b9350611771818560208601611711565b61177a8161173b565b840191505092915050565b6000602082019050818103600083015261179f818461174c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117d7826117ac565b9050919050565b6117e7816117cc565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000819050919050565b61181d8161180a565b811461182857600080fd5b50565b60008135905061183a81611814565b92915050565b60008060408385031215611857576118566117a7565b5b6000611865858286016117f5565b92505060206118768582860161182b565b9150509250929050565b60008115159050919050565b61189581611880565b82525050565b60006020820190506118b0600083018461188c565b92915050565b6118bf8161180a565b82525050565b60006020820190506118da60008301846118b6565b92915050565b6000806000606084860312156118f9576118f86117a7565b5b6000611907868287016117f5565b9350506020611918868287016117f5565b92505060406119298682870161182b565b9150509250925092565b600060ff82169050919050565b61194981611933565b82525050565b60006020820190506119646000830184611940565b92915050565b6000819050919050565b61197d8161196a565b82525050565b60006020820190506119986000830184611974565b92915050565b6000602082840312156119b4576119b36117a7565b5b60006119c2848285016117f5565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611a00816119cb565b82525050565b611a0f816117cc565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a4a8161180a565b82525050565b6000611a5c8383611a41565b60208301905092915050565b6000602082019050919050565b6000611a8082611a15565b611a8a8185611a20565b9350611a9583611a31565b8060005b83811015611ac6578151611aad8882611a50565b9750611ab883611a68565b925050600181019050611a99565b5085935050505092915050565b600060e082019050611ae8600083018a6119f7565b8181036020830152611afa818961174c565b90508181036040830152611b0e818861174c565b9050611b1d60608301876118b6565b611b2a6080830186611a06565b611b3760a0830185611974565b81810360c0830152611b498184611a75565b905098975050505050505050565b6000602082019050611b6c6000830184611a06565b92915050565b611b7b81611933565b8114611b8657600080fd5b50565b600081359050611b9881611b72565b92915050565b611ba78161196a565b8114611bb257600080fd5b50565b600081359050611bc481611b9e565b92915050565b600080600080600080600060e0888a031215611be957611be86117a7565b5b6000611bf78a828b016117f5565b9750506020611c088a828b016117f5565b9650506040611c198a828b0161182b565b9550506060611c2a8a828b0161182b565b9450506080611c3b8a828b01611b89565b93505060a0611c4c8a828b01611bb5565b92505060c0611c5d8a828b01611bb5565b91505092959891949750929550565b60008060408385031215611c8357611c826117a7565b5b6000611c91858286016117f5565b9250506020611ca2858286016117f5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cf357607f821691505b602082108103611d0657611d05611cac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060c082019050611d506000830189611974565b611d5d6020830188611a06565b611d6a6040830187611a06565b611d7760608301866118b6565b611d8460808301856118b6565b611d9160a08301846118b6565b979650505050505050565b6000604082019050611db16000830185611a06565b611dbe6020830184611a06565b9392505050565b6000606082019050611dda6000830186611a06565b611de760208301856118b6565b611df460408301846118b6565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e368261180a565b9150611e418361180a565b9250828201905080821115611e5957611e58611dfc565b5b92915050565b600060a082019050611e746000830188611974565b611e816020830187611974565b611e8e6040830186611974565b611e9b60608301856118b6565b611ea86080830184611a06565b9695505050505050565b6000608082019050611ec76000830187611974565b611ed46020830186611940565b611ee16040830185611974565b611eee6060830184611974565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fdfea264697066735822122065b5fb9737bfb51cfc1c7253b631bc0e98d090540677cc801f5824020ceefef864736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x34A JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x292 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x204 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x3F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x41B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x18E0 JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x194F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D2 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x202 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x46C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH2 0x4CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x276 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x289 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29A PUSH2 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B8 PUSH2 0x5C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x189B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1BCA JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1C6C JUMP JUMPDEST PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0x848 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A1 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3EE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3EE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x403 PUSH2 0x8CE JUMP JUMPDEST SWAP1 POP PUSH2 0x410 DUP2 DUP6 DUP6 PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x430 PUSH2 0x8CE JUMP JUMPDEST SWAP1 POP PUSH2 0x43D DUP6 DUP3 DUP6 PUSH2 0x8E8 JUMP JUMPDEST PUSH2 0x448 DUP6 DUP6 DUP6 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x467 PUSH2 0xA70 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x474 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x47E DUP3 DUP3 PUSH2 0xBAE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D2 PUSH2 0xB27 JUMP JUMPDEST PUSH2 0x4DC PUSH1 0x0 PUSH2 0xC30 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E9 DUP3 PUSH2 0xCF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x504 PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x50C PUSH2 0xD7A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52D JUMPI PUSH2 0x52C PUSH2 0x1D0C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x55B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5D3 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5FF SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x64C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x621 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x64C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x661 PUSH2 0x8CE JUMP JUMPDEST SWAP1 POP PUSH2 0x66E DUP2 DUP6 DUP6 PUSH2 0x97C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x6BE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x6ED DUP13 PUSH2 0xDB5 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x703 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0x726 DUP3 PUSH2 0xE0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x736 DUP3 DUP8 DUP8 DUP8 PUSH2 0xE26 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7AA JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A1 SWAP3 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B5 DUP11 DUP11 DUP11 PUSH2 0x8D6 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x850 PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8C2 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B9 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8CB DUP2 PUSH2 0xC30 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8E3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE56 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F4 DUP5 DUP5 PUSH2 0x7C1 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x976 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x966 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x975 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xE56 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA60 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6B DUP4 DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xAEC JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xB19 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xB21 PUSH2 0x1252 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB2F PUSH2 0x8CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4D PUSH2 0x59A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAC JUMPI PUSH2 0xB70 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC20 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2C PUSH1 0x0 DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD75 PUSH1 0x6 PUSH32 0x0 PUSH2 0x12E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDB0 PUSH1 0x7 PUSH32 0x0 PUSH2 0x12E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1F PUSH2 0xE19 PUSH2 0xA70 JUMP JUMPDEST DUP4 PUSH2 0x1398 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xE38 DUP9 DUP9 DUP9 DUP9 PUSH2 0x13D9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xE48 DUP3 DUP3 PUSH2 0x14CD JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEC8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBF SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF3A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1027 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x101E SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x107F JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1073 SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x110B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x119B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11E8 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1245 SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x1305 JUMPI PUSH2 0x12FE DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP PUSH2 0x1392 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1311 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x133D SWAP1 PUSH2 0x1CDB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x138A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x135F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x138A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x136D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x143E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B4 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x14C3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14E1 JUMPI PUSH2 0x14E0 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14F4 JUMPI PUSH2 0x14F3 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x162D JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x150E JUMPI PUSH2 0x150D PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1521 JUMPI PUSH2 0x1520 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1558 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x156C JUMPI PUSH2 0x156B PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x157F JUMPI PUSH2 0x157E PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x15C4 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x18C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x15D7 JUMPI PUSH2 0x15D6 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15EA JUMPI PUSH2 0x15E9 PUSH2 0x1EF7 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x162C JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1623 SWAP2 SWAP1 PUSH2 0x1983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x163E DUP4 PUSH2 0x16A5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165D JUMPI PUSH2 0x165C PUSH2 0x1D0C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x168F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x16EC JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x172F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1714 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1757 DUP3 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x1761 DUP2 DUP6 PUSH2 0x1700 JUMP JUMPDEST SWAP4 POP PUSH2 0x1771 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1711 JUMP JUMPDEST PUSH2 0x177A DUP2 PUSH2 0x173B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179F DUP2 DUP5 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D7 DUP3 PUSH2 0x17AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181D DUP2 PUSH2 0x180A JUMP JUMPDEST DUP2 EQ PUSH2 0x1828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x183A DUP2 PUSH2 0x1814 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH2 0x1856 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1865 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1876 DUP6 DUP3 DUP7 ADD PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1895 DUP2 PUSH2 0x1880 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18B0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x188C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18BF DUP2 PUSH2 0x180A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18DA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18F9 JUMPI PUSH2 0x18F8 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1907 DUP7 DUP3 DUP8 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1918 DUP7 DUP3 DUP8 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1929 DUP7 DUP3 DUP8 ADD PUSH2 0x182B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1949 DUP2 PUSH2 0x1933 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1964 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1940 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197D DUP2 PUSH2 0x196A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1998 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1974 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B4 JUMPI PUSH2 0x19B3 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19C2 DUP5 DUP3 DUP6 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A00 DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A0F DUP2 PUSH2 0x17CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4A DUP2 PUSH2 0x180A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5C DUP4 DUP4 PUSH2 0x1A41 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A80 DUP3 PUSH2 0x1A15 JUMP JUMPDEST PUSH2 0x1A8A DUP2 DUP6 PUSH2 0x1A20 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A95 DUP4 PUSH2 0x1A31 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AC6 JUMPI DUP2 MLOAD PUSH2 0x1AAD DUP9 DUP3 PUSH2 0x1A50 JUMP JUMPDEST SWAP8 POP PUSH2 0x1AB8 DUP4 PUSH2 0x1A68 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1A99 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1AE8 PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x19F7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1AFA DUP2 DUP10 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1B0E DUP2 DUP9 PUSH2 0x174C JUMP JUMPDEST SWAP1 POP PUSH2 0x1B1D PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1B2A PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1B37 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1974 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x1B49 DUP2 DUP5 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B7B DUP2 PUSH2 0x1933 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B98 DUP2 PUSH2 0x1B72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA7 DUP2 PUSH2 0x196A JUMP JUMPDEST DUP2 EQ PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BC4 DUP2 PUSH2 0x1B9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1BE9 JUMPI PUSH2 0x1BE8 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF7 DUP11 DUP3 DUP12 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1C08 DUP11 DUP3 DUP12 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1C19 DUP11 DUP3 DUP12 ADD PUSH2 0x182B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1C2A DUP11 DUP3 DUP12 ADD PUSH2 0x182B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1C3B DUP11 DUP3 DUP12 ADD PUSH2 0x1B89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1C4C DUP11 DUP3 DUP12 ADD PUSH2 0x1BB5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1C5D DUP11 DUP3 DUP12 ADD PUSH2 0x1BB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x17A7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C91 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CA2 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CF3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D06 JUMPI PUSH2 0x1D05 PUSH2 0x1CAC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1D50 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1D5D PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1D6A PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1D77 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1D84 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1D91 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x18B6 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1DB1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1DBE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DDA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1A06 JUMP JUMPDEST PUSH2 0x1DE7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1DF4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x18B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E36 DUP3 PUSH2 0x180A JUMP JUMPDEST SWAP2 POP PUSH2 0x1E41 DUP4 PUSH2 0x180A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x1DFC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1E74 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E81 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E8E PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1E9B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x18B6 JUMP JUMPDEST PUSH2 0x1EA8 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1A06 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1EC7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1ED4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1940 JUMP JUMPDEST PUSH2 0x1EE1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1974 JUMP JUMPDEST PUSH2 0x1EEE PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1974 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xB5FB9737BFB5 SHR 0xFC SHR PUSH19 0x53B631BC0E98D090540677CC801F5824020CEE INVALID 0xF8 PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ","sourceMap":"248:271:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2656:112:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;421:95:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2406:143:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5144:557:18;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:672:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:4;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;2656:112:6:-;2715:7;2741:20;:18;:20::i;:::-;2734:27;;2656:112;:::o;421:95:23:-;1531:13:0;:11;:13::i;:::-;491:17:23::1;497:2;501:6;491:5;:17::i;:::-;421:95:::0;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2406:143:6:-;2497:7;2523:19;2536:5;2523:12;:19::i;:::-;2516:26;;2406:143;;;:::o;5144:557:18:-;5242:13;5269:18;5301:21;5336:15;5365:25;5404:12;5430:27;5533:13;:11;:13::i;:::-;5560:16;:14;:16::i;:::-;5590:13;5625:4;5652:1;5644:10;;5682:1;5668:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5482:212;;;;;;;;;;;;;;;;;;;;;5144:557;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1680:672:6:-;1901:8;1883:15;:26;1879:97;;;1956:8;1932:33;;;;;;;;;;;:::i;:::-;;;;;;;;1879:97;1986:18;1022:95;2045:5;2052:7;2061:5;2068:16;2078:5;2068:9;:16::i;:::-;2086:8;2017:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2007:89;;;;;;1986:110;;2107:12;2122:28;2139:10;2122:16;:28::i;:::-;2107:43;;2161:14;2178:28;2192:4;2198:1;2201;2204;2178:13;:28::i;:::-;2161:45;;2230:5;2220:15;;:6;:15;;;2216:88;;2279:6;2287:5;2258:35;;;;;;;;;;;;:::i;:::-;;;;;;;;2216:88;2314:31;2323:5;2330:7;2339:5;2314:8;:31::i;:::-;1869:483;;;1680:672;;;;;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3845:262:18:-;3898:7;3938:11;3921:28;;3929:4;3921:28;;;:63;;;;;3970:14;3953:13;:31;3921:63;3917:184;;;4007:22;4000:29;;;;3917:184;4067:23;:21;:23::i;:::-;4060:30;;3845:262;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;538:107:13:-;598:7;624;:14;632:5;624:14;;;;;;;;;;;;;;;;617:21;;538:107;;;:::o;6021:126:18:-;6067:13;6099:41;6126:13;6099:5;:26;;:41;;;;:::i;:::-;6092:48;;6021:126;:::o;6473:135::-;6522:13;6554:47;6584:16;6554:8;:29;;:47;;;;:::i;:::-;6547:54;;6473:135;:::o;759:395:13:-;819:7;1121;:14;1129:5;1121:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1114:23;;759:395;;;:::o;4917:176:18:-;4994:7;5020:66;5053:20;:18;:20::i;:::-;5075:10;5020:32;:66::i;:::-;5013:73;;4917:176;;;:::o;6803:260:17:-;6888:7;6908:17;6927:18;6947:16;6967:25;6978:4;6984:1;6987;6990;6967:10;:25::i;:::-;6907:85;;;;;;7002:28;7014:5;7021:8;7002:11;:28::i;:::-;7047:9;7040:16;;;;;6803:260;;;;;;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4113:179:18:-;4168:7;2079:95;4226:11;4239:14;4255:13;4278:4;4204:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4194:91;;;;;;4187:98;;4113:179;:::o;3385:267:14:-;3479:13;1390:66;3537:17;;3527:5;3508:46;3504:142;;3577:15;3586:5;3577:8;:15::i;:::-;3570:22;;;;3504:142;3630:5;3623:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:267;;;;;:::o;3353:401:19:-;3446:14;3555:4;3549:11;3585:10;3580:3;3573:23;3632:15;3625:4;3620:3;3616:14;3609:39;3684:10;3677:4;3672:3;3668:14;3661:34;3733:4;3728:3;3718:20;3708:30;;3524:224;3353:401;;;;:::o;5140:1530:17:-;5266:7;5275:12;5289:7;6199:66;6194:1;6186:10;;:79;6182:164;;;6297:1;6301:30;6333:1;6281:54;;;;;;;;6182:164;6440:14;6457:24;6467:4;6473:1;6476;6479;6457:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6440:41;;6513:1;6495:20;;:6;:20;;;6491:113;;6547:1;6551:29;6590:1;6582:10;;6531:62;;;;;;;;;6491:113;6622:6;6630:20;6660:1;6652:10;;6614:49;;;;;;;5140:1530;;;;;;;;;:::o;7196:532::-;7291:20;7282:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7278:444;7327:7;7278:444;7387:29;7378:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7374:348;;7439:23;;;;;;;;;;;;;;7374:348;7492:35;7483:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7479:243;;7586:8;7578:17;;7550:46;;;;;;;;;;;:::i;:::-;;;;;;;;7479:243;7626:30;7617:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7613:109;;7702:8;7679:32;;;;;;;;;;;:::i;:::-;;;;;;;;7613:109;7196:532;;;:::o;2078:405:14:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2402:3;2397;2390:16;2442:4;2435;2430:3;2426:14;2419:28;2473:3;2466:10;;;;2078:405;;;:::o;2555:245::-;2616:7;2635:14;2688:4;2679;2652:33;;:40;2635:57;;2715:2;2706:6;:11;2702:69;;;2740:20;;;;;;;;;;;;;;2702:69;2787:6;2780:13;;;2555:245;;;:::o;7:99:25:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:222::-;8971:4;9009:2;8998:9;8994:18;8986:26;;9022:71;9090:1;9079:9;9075:17;9066:6;9022:71;:::i;:::-;8878:222;;;;:::o;9106:118::-;9177:22;9193:5;9177:22;:::i;:::-;9170:5;9167:33;9157:61;;9214:1;9211;9204:12;9157:61;9106:118;:::o;9230:135::-;9274:5;9312:6;9299:20;9290:29;;9328:31;9353:5;9328:31;:::i;:::-;9230:135;;;;:::o;9371:122::-;9444:24;9462:5;9444:24;:::i;:::-;9437:5;9434:35;9424:63;;9483:1;9480;9473:12;9424:63;9371:122;:::o;9499:139::-;9545:5;9583:6;9570:20;9561:29;;9599:33;9626:5;9599:33;:::i;:::-;9499:139;;;;:::o;9644:1199::-;9755:6;9763;9771;9779;9787;9795;9803;9852:3;9840:9;9831:7;9827:23;9823:33;9820:120;;;9859:79;;:::i;:::-;9820:120;9979:1;10004:53;10049:7;10040:6;10029:9;10025:22;10004:53;:::i;:::-;9994:63;;9950:117;10106:2;10132:53;10177:7;10168:6;10157:9;10153:22;10132:53;:::i;:::-;10122:63;;10077:118;10234:2;10260:53;10305:7;10296:6;10285:9;10281:22;10260:53;:::i;:::-;10250:63;;10205:118;10362:2;10388:53;10433:7;10424:6;10413:9;10409:22;10388:53;:::i;:::-;10378:63;;10333:118;10490:3;10517:51;10560:7;10551:6;10540:9;10536:22;10517:51;:::i;:::-;10507:61;;10461:117;10617:3;10644:53;10689:7;10680:6;10669:9;10665:22;10644:53;:::i;:::-;10634:63;;10588:119;10746:3;10773:53;10818:7;10809:6;10798:9;10794:22;10773:53;:::i;:::-;10763:63;;10717:119;9644:1199;;;;;;;;;;:::o;10849:474::-;10917:6;10925;10974:2;10962:9;10953:7;10949:23;10945:32;10942:119;;;10980:79;;:::i;:::-;10942:119;11100:1;11125:53;11170:7;11161:6;11150:9;11146:22;11125:53;:::i;:::-;11115:63;;11071:117;11227:2;11253:53;11298:7;11289:6;11278:9;11274:22;11253:53;:::i;:::-;11243:63;;11198:118;10849:474;;;;;:::o;11329:180::-;11377:77;11374:1;11367:88;11474:4;11471:1;11464:15;11498:4;11495:1;11488:15;11515:320;11559:6;11596:1;11590:4;11586:12;11576:22;;11643:1;11637:4;11633:12;11664:18;11654:81;;11720:4;11712:6;11708:17;11698:27;;11654:81;11782:2;11774:6;11771:14;11751:18;11748:38;11745:84;;11801:18;;:::i;:::-;11745:84;11566:269;11515:320;;;:::o;11841:180::-;11889:77;11886:1;11879:88;11986:4;11983:1;11976:15;12010:4;12007:1;12000:15;12027:775;12260:4;12298:3;12287:9;12283:19;12275:27;;12312:71;12380:1;12369:9;12365:17;12356:6;12312:71;:::i;:::-;12393:72;12461:2;12450:9;12446:18;12437:6;12393:72;:::i;:::-;12475;12543:2;12532:9;12528:18;12519:6;12475:72;:::i;:::-;12557;12625:2;12614:9;12610:18;12601:6;12557:72;:::i;:::-;12639:73;12707:3;12696:9;12692:19;12683:6;12639:73;:::i;:::-;12722;12790:3;12779:9;12775:19;12766:6;12722:73;:::i;:::-;12027:775;;;;;;;;;:::o;12808:332::-;12929:4;12967:2;12956:9;12952:18;12944:26;;12980:71;13048:1;13037:9;13033:17;13024:6;12980:71;:::i;:::-;13061:72;13129:2;13118:9;13114:18;13105:6;13061:72;:::i;:::-;12808:332;;;;;:::o;13146:442::-;13295:4;13333:2;13322:9;13318:18;13310:26;;13346:71;13414:1;13403:9;13399:17;13390:6;13346:71;:::i;:::-;13427:72;13495:2;13484:9;13480:18;13471:6;13427:72;:::i;:::-;13509;13577:2;13566:9;13562:18;13553:6;13509:72;:::i;:::-;13146:442;;;;;;:::o;13594:180::-;13642:77;13639:1;13632:88;13739:4;13736:1;13729:15;13763:4;13760:1;13753:15;13780:191;13820:3;13839:20;13857:1;13839:20;:::i;:::-;13834:25;;13873:20;13891:1;13873:20;:::i;:::-;13868:25;;13916:1;13913;13909:9;13902:16;;13937:3;13934:1;13931:10;13928:36;;;13944:18;;:::i;:::-;13928:36;13780:191;;;;:::o;13977:664::-;14182:4;14220:3;14209:9;14205:19;14197:27;;14234:71;14302:1;14291:9;14287:17;14278:6;14234:71;:::i;:::-;14315:72;14383:2;14372:9;14368:18;14359:6;14315:72;:::i;:::-;14397;14465:2;14454:9;14450:18;14441:6;14397:72;:::i;:::-;14479;14547:2;14536:9;14532:18;14523:6;14479:72;:::i;:::-;14561:73;14629:3;14618:9;14614:19;14605:6;14561:73;:::i;:::-;13977:664;;;;;;;;:::o;14647:545::-;14820:4;14858:3;14847:9;14843:19;14835:27;;14872:71;14940:1;14929:9;14925:17;14916:6;14872:71;:::i;:::-;14953:68;15017:2;15006:9;15002:18;14993:6;14953:68;:::i;:::-;15031:72;15099:2;15088:9;15084:18;15075:6;15031:72;:::i;:::-;15113;15181:2;15170:9;15166:18;15157:6;15113:72;:::i;:::-;14647:545;;;;;;;:::o;15198:180::-;15246:77;15243:1;15236:88;15343:4;15340:1;15333:15;15367:4;15364:1;15357:15"},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Spark.sol\":\"Spark\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xc858a86a35701004d89022a5e98819aac46ccbdc4072fc9dd43928a676b1a2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18acebb483c512c0eaafcb437f09c839972c3f0d36f0201ea7baa2926b987dd2\",\"dweb:/ipfs/Qmd9bf2noaDSYDtf6FMSzKu7LPhuf91jsVNmcoCuTCuGic\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x18a7171df639a934592915a520ecb97c5bbc9675a1105607aac8a94e72bf62c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7478e1f13da69a2867ccd883001d836b75620362e743f196376d63ed0c422a1c\",\"dweb:/ipfs/QmWywcQ9TNfwtoqAxbn25d8C5VrV12PrPS9UjtGe6pL2BA\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x999f705a027ed6dc2d4e0df2cc4a509852c6bfd11de1c8161bf88832d0503fd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0798def67258d9a3cc20b2b4da7ebf351a5cefe0abfdd665d2d81f8e32f89b21\",\"dweb:/ipfs/QmPEvJosnPfzHNjKvCv2D3891mA2Ww8eUwkqrxBjuYdHCt\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/Spark.sol\":{\"keccak256\":\"0x23c4d75f5cb40f4a0c0e18c0158f1baf6a264b44036ffff856c34cdd8cafc940\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383a2613b0940ac9757f7287cb6878628d494b09bb38b741d8d7545289624308\",\"dweb:/ipfs/QmTdv9anitMAAKJdoC4uAbEJLYUgMuTqL877HnW5UXHkMs\"]}},\"version\":1}"}},"contracts/Vault.sol":{"Vault":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_asset","type":"address"},{"internalType":"uint256","name":"_entryBasisPoints","type":"uint256"},{"internalType":"uint256","name":"_exitBasisPoints","type":"uint256"},{"internalType":"uint32","name":"_duration","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxDeposit","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxMint","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxRedeem","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"name":"ERC4626ExceededMaxWithdraw","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"MathOverflowedMulDiv","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"receiver","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"assets","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"shares","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"changeEntryFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"changeExitFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"entryFeeBasisPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"exitFeeBasisPoints","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWithdrawEpoch","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"maxMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"previewRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint32","name":"_duration","type":"uint32"}],"name":"setDuration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakeDuration","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"lender","type":"address"}],"name":"stakeTimeEpochMapping","outputs":[{"internalType":"uint32","name":"epoch","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1314":{"entryPoint":null,"id":1314,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5029":{"entryPoint":null,"id":5029,"parameterSlots":2,"returnSlots":0},"@_531":{"entryPoint":null,"id":531,"parameterSlots":2,"returnSlots":0},"@_5414":{"entryPoint":null,"id":5414,"parameterSlots":4,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":789,"id":146,"parameterSlots":1,"returnSlots":0},"@_tryGetAssetDecimals_1381":{"entryPoint":507,"id":1381,"parameterSlots":1,"returnSlots":2},"abi_decode_t_contract$_IERC20_$1072_fromMemory":{"entryPoint":1090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1149,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1214,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IERC20_$1072t_uint256t_uint256t_uint32_fromMemory":{"entryPoint":1237,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2398,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2206,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":2373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2223,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1509,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2252,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1351,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":2263,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1820,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1024,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_contract$_IERC20_$1072":{"entryPoint":1044,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":992,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1113,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1172,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1781,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1655,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1975,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":2274,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1530,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1456,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1945,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1645,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1913,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":1409,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1362,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1695,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":987,"id":null,"parameterSlots":0,"returnSlots":0},"shift_left_dynamic":{"entryPoint":1546,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1900,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1753,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1559,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1705,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_contract$_IERC20_$1072":{"entryPoint":1064,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1123,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1188,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1748,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:9636:25","nodeType":"YulBlock","src":"0:9636:25","statements":[{"body":{"nativeSrc":"47:35:25","nodeType":"YulBlock","src":"47:35:25","statements":[{"nativeSrc":"57:19:25","nodeType":"YulAssignment","src":"57:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:25","nodeType":"YulLiteral","src":"73:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:25","nodeType":"YulIdentifier","src":"67:5:25"},"nativeSrc":"67:9:25","nodeType":"YulFunctionCall","src":"67:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:25","nodeType":"YulIdentifier","src":"57:6:25"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:25","nodeType":"YulTypedName","src":"40:6:25","type":""}],"src":"7:75:25"},{"body":{"nativeSrc":"177:28:25","nodeType":"YulBlock","src":"177:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:25","nodeType":"YulLiteral","src":"194:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:25","nodeType":"YulLiteral","src":"197:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:25","nodeType":"YulIdentifier","src":"187:6:25"},"nativeSrc":"187:12:25","nodeType":"YulFunctionCall","src":"187:12:25"},"nativeSrc":"187:12:25","nodeType":"YulExpressionStatement","src":"187:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:25","nodeType":"YulFunctionDefinition","src":"88:117:25"},{"body":{"nativeSrc":"300:28:25","nodeType":"YulBlock","src":"300:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:25","nodeType":"YulLiteral","src":"317:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:25","nodeType":"YulLiteral","src":"320:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:25","nodeType":"YulIdentifier","src":"310:6:25"},"nativeSrc":"310:12:25","nodeType":"YulFunctionCall","src":"310:12:25"},"nativeSrc":"310:12:25","nodeType":"YulExpressionStatement","src":"310:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:25","nodeType":"YulFunctionDefinition","src":"211:117:25"},{"body":{"nativeSrc":"379:81:25","nodeType":"YulBlock","src":"379:81:25","statements":[{"nativeSrc":"389:65:25","nodeType":"YulAssignment","src":"389:65:25","value":{"arguments":[{"name":"value","nativeSrc":"404:5:25","nodeType":"YulIdentifier","src":"404:5:25"},{"kind":"number","nativeSrc":"411:42:25","nodeType":"YulLiteral","src":"411:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:25","nodeType":"YulIdentifier","src":"400:3:25"},"nativeSrc":"400:54:25","nodeType":"YulFunctionCall","src":"400:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:25","nodeType":"YulIdentifier","src":"389:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:25","nodeType":"YulTypedName","src":"361:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:25","nodeType":"YulTypedName","src":"371:7:25","type":""}],"src":"334:126:25"},{"body":{"nativeSrc":"511:51:25","nodeType":"YulBlock","src":"511:51:25","statements":[{"nativeSrc":"521:35:25","nodeType":"YulAssignment","src":"521:35:25","value":{"arguments":[{"name":"value","nativeSrc":"550:5:25","nodeType":"YulIdentifier","src":"550:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:25","nodeType":"YulIdentifier","src":"532:17:25"},"nativeSrc":"532:24:25","nodeType":"YulFunctionCall","src":"532:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:25","nodeType":"YulIdentifier","src":"521:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:25","nodeType":"YulTypedName","src":"493:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:25","nodeType":"YulTypedName","src":"503:7:25","type":""}],"src":"466:96:25"},{"body":{"nativeSrc":"628:51:25","nodeType":"YulBlock","src":"628:51:25","statements":[{"nativeSrc":"638:35:25","nodeType":"YulAssignment","src":"638:35:25","value":{"arguments":[{"name":"value","nativeSrc":"667:5:25","nodeType":"YulIdentifier","src":"667:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"649:17:25","nodeType":"YulIdentifier","src":"649:17:25"},"nativeSrc":"649:24:25","nodeType":"YulFunctionCall","src":"649:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"638:7:25","nodeType":"YulIdentifier","src":"638:7:25"}]}]},"name":"cleanup_t_contract$_IERC20_$1072","nativeSrc":"568:111:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"610:5:25","nodeType":"YulTypedName","src":"610:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"620:7:25","nodeType":"YulTypedName","src":"620:7:25","type":""}],"src":"568:111:25"},{"body":{"nativeSrc":"743:94:25","nodeType":"YulBlock","src":"743:94:25","statements":[{"body":{"nativeSrc":"815:16:25","nodeType":"YulBlock","src":"815:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"824:1:25","nodeType":"YulLiteral","src":"824:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"827:1:25","nodeType":"YulLiteral","src":"827:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"817:6:25","nodeType":"YulIdentifier","src":"817:6:25"},"nativeSrc":"817:12:25","nodeType":"YulFunctionCall","src":"817:12:25"},"nativeSrc":"817:12:25","nodeType":"YulExpressionStatement","src":"817:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"766:5:25","nodeType":"YulIdentifier","src":"766:5:25"},{"arguments":[{"name":"value","nativeSrc":"806:5:25","nodeType":"YulIdentifier","src":"806:5:25"}],"functionName":{"name":"cleanup_t_contract$_IERC20_$1072","nativeSrc":"773:32:25","nodeType":"YulIdentifier","src":"773:32:25"},"nativeSrc":"773:39:25","nodeType":"YulFunctionCall","src":"773:39:25"}],"functionName":{"name":"eq","nativeSrc":"763:2:25","nodeType":"YulIdentifier","src":"763:2:25"},"nativeSrc":"763:50:25","nodeType":"YulFunctionCall","src":"763:50:25"}],"functionName":{"name":"iszero","nativeSrc":"756:6:25","nodeType":"YulIdentifier","src":"756:6:25"},"nativeSrc":"756:58:25","nodeType":"YulFunctionCall","src":"756:58:25"},"nativeSrc":"753:78:25","nodeType":"YulIf","src":"753:78:25"}]},"name":"validator_revert_t_contract$_IERC20_$1072","nativeSrc":"685:152:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"736:5:25","nodeType":"YulTypedName","src":"736:5:25","type":""}],"src":"685:152:25"},{"body":{"nativeSrc":"921:95:25","nodeType":"YulBlock","src":"921:95:25","statements":[{"nativeSrc":"931:22:25","nodeType":"YulAssignment","src":"931:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"946:6:25","nodeType":"YulIdentifier","src":"946:6:25"}],"functionName":{"name":"mload","nativeSrc":"940:5:25","nodeType":"YulIdentifier","src":"940:5:25"},"nativeSrc":"940:13:25","nodeType":"YulFunctionCall","src":"940:13:25"},"variableNames":[{"name":"value","nativeSrc":"931:5:25","nodeType":"YulIdentifier","src":"931:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1004:5:25","nodeType":"YulIdentifier","src":"1004:5:25"}],"functionName":{"name":"validator_revert_t_contract$_IERC20_$1072","nativeSrc":"962:41:25","nodeType":"YulIdentifier","src":"962:41:25"},"nativeSrc":"962:48:25","nodeType":"YulFunctionCall","src":"962:48:25"},"nativeSrc":"962:48:25","nodeType":"YulExpressionStatement","src":"962:48:25"}]},"name":"abi_decode_t_contract$_IERC20_$1072_fromMemory","nativeSrc":"843:173:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"899:6:25","nodeType":"YulTypedName","src":"899:6:25","type":""},{"name":"end","nativeSrc":"907:3:25","nodeType":"YulTypedName","src":"907:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"915:5:25","nodeType":"YulTypedName","src":"915:5:25","type":""}],"src":"843:173:25"},{"body":{"nativeSrc":"1067:32:25","nodeType":"YulBlock","src":"1067:32:25","statements":[{"nativeSrc":"1077:16:25","nodeType":"YulAssignment","src":"1077:16:25","value":{"name":"value","nativeSrc":"1088:5:25","nodeType":"YulIdentifier","src":"1088:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1077:7:25","nodeType":"YulIdentifier","src":"1077:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1022:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1049:5:25","nodeType":"YulTypedName","src":"1049:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1059:7:25","nodeType":"YulTypedName","src":"1059:7:25","type":""}],"src":"1022:77:25"},{"body":{"nativeSrc":"1148:79:25","nodeType":"YulBlock","src":"1148:79:25","statements":[{"body":{"nativeSrc":"1205:16:25","nodeType":"YulBlock","src":"1205:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1214:1:25","nodeType":"YulLiteral","src":"1214:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1217:1:25","nodeType":"YulLiteral","src":"1217:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1207:6:25","nodeType":"YulIdentifier","src":"1207:6:25"},"nativeSrc":"1207:12:25","nodeType":"YulFunctionCall","src":"1207:12:25"},"nativeSrc":"1207:12:25","nodeType":"YulExpressionStatement","src":"1207:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1171:5:25","nodeType":"YulIdentifier","src":"1171:5:25"},{"arguments":[{"name":"value","nativeSrc":"1196:5:25","nodeType":"YulIdentifier","src":"1196:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1178:17:25","nodeType":"YulIdentifier","src":"1178:17:25"},"nativeSrc":"1178:24:25","nodeType":"YulFunctionCall","src":"1178:24:25"}],"functionName":{"name":"eq","nativeSrc":"1168:2:25","nodeType":"YulIdentifier","src":"1168:2:25"},"nativeSrc":"1168:35:25","nodeType":"YulFunctionCall","src":"1168:35:25"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:25","nodeType":"YulIdentifier","src":"1161:6:25"},"nativeSrc":"1161:43:25","nodeType":"YulFunctionCall","src":"1161:43:25"},"nativeSrc":"1158:63:25","nodeType":"YulIf","src":"1158:63:25"}]},"name":"validator_revert_t_uint256","nativeSrc":"1105:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1141:5:25","nodeType":"YulTypedName","src":"1141:5:25","type":""}],"src":"1105:122:25"},{"body":{"nativeSrc":"1296:80:25","nodeType":"YulBlock","src":"1296:80:25","statements":[{"nativeSrc":"1306:22:25","nodeType":"YulAssignment","src":"1306:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"1321:6:25","nodeType":"YulIdentifier","src":"1321:6:25"}],"functionName":{"name":"mload","nativeSrc":"1315:5:25","nodeType":"YulIdentifier","src":"1315:5:25"},"nativeSrc":"1315:13:25","nodeType":"YulFunctionCall","src":"1315:13:25"},"variableNames":[{"name":"value","nativeSrc":"1306:5:25","nodeType":"YulIdentifier","src":"1306:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1364:5:25","nodeType":"YulIdentifier","src":"1364:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1337:26:25","nodeType":"YulIdentifier","src":"1337:26:25"},"nativeSrc":"1337:33:25","nodeType":"YulFunctionCall","src":"1337:33:25"},"nativeSrc":"1337:33:25","nodeType":"YulExpressionStatement","src":"1337:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1233:143:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1274:6:25","nodeType":"YulTypedName","src":"1274:6:25","type":""},{"name":"end","nativeSrc":"1282:3:25","nodeType":"YulTypedName","src":"1282:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1290:5:25","nodeType":"YulTypedName","src":"1290:5:25","type":""}],"src":"1233:143:25"},{"body":{"nativeSrc":"1426:49:25","nodeType":"YulBlock","src":"1426:49:25","statements":[{"nativeSrc":"1436:33:25","nodeType":"YulAssignment","src":"1436:33:25","value":{"arguments":[{"name":"value","nativeSrc":"1451:5:25","nodeType":"YulIdentifier","src":"1451:5:25"},{"kind":"number","nativeSrc":"1458:10:25","nodeType":"YulLiteral","src":"1458:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"1447:3:25","nodeType":"YulIdentifier","src":"1447:3:25"},"nativeSrc":"1447:22:25","nodeType":"YulFunctionCall","src":"1447:22:25"},"variableNames":[{"name":"cleaned","nativeSrc":"1436:7:25","nodeType":"YulIdentifier","src":"1436:7:25"}]}]},"name":"cleanup_t_uint32","nativeSrc":"1382:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1408:5:25","nodeType":"YulTypedName","src":"1408:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1418:7:25","nodeType":"YulTypedName","src":"1418:7:25","type":""}],"src":"1382:93:25"},{"body":{"nativeSrc":"1523:78:25","nodeType":"YulBlock","src":"1523:78:25","statements":[{"body":{"nativeSrc":"1579:16:25","nodeType":"YulBlock","src":"1579:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1588:1:25","nodeType":"YulLiteral","src":"1588:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1591:1:25","nodeType":"YulLiteral","src":"1591:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1581:6:25","nodeType":"YulIdentifier","src":"1581:6:25"},"nativeSrc":"1581:12:25","nodeType":"YulFunctionCall","src":"1581:12:25"},"nativeSrc":"1581:12:25","nodeType":"YulExpressionStatement","src":"1581:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1546:5:25","nodeType":"YulIdentifier","src":"1546:5:25"},{"arguments":[{"name":"value","nativeSrc":"1570:5:25","nodeType":"YulIdentifier","src":"1570:5:25"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"1553:16:25","nodeType":"YulIdentifier","src":"1553:16:25"},"nativeSrc":"1553:23:25","nodeType":"YulFunctionCall","src":"1553:23:25"}],"functionName":{"name":"eq","nativeSrc":"1543:2:25","nodeType":"YulIdentifier","src":"1543:2:25"},"nativeSrc":"1543:34:25","nodeType":"YulFunctionCall","src":"1543:34:25"}],"functionName":{"name":"iszero","nativeSrc":"1536:6:25","nodeType":"YulIdentifier","src":"1536:6:25"},"nativeSrc":"1536:42:25","nodeType":"YulFunctionCall","src":"1536:42:25"},"nativeSrc":"1533:62:25","nodeType":"YulIf","src":"1533:62:25"}]},"name":"validator_revert_t_uint32","nativeSrc":"1481:120:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1516:5:25","nodeType":"YulTypedName","src":"1516:5:25","type":""}],"src":"1481:120:25"},{"body":{"nativeSrc":"1669:79:25","nodeType":"YulBlock","src":"1669:79:25","statements":[{"nativeSrc":"1679:22:25","nodeType":"YulAssignment","src":"1679:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"1694:6:25","nodeType":"YulIdentifier","src":"1694:6:25"}],"functionName":{"name":"mload","nativeSrc":"1688:5:25","nodeType":"YulIdentifier","src":"1688:5:25"},"nativeSrc":"1688:13:25","nodeType":"YulFunctionCall","src":"1688:13:25"},"variableNames":[{"name":"value","nativeSrc":"1679:5:25","nodeType":"YulIdentifier","src":"1679:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1736:5:25","nodeType":"YulIdentifier","src":"1736:5:25"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"1710:25:25","nodeType":"YulIdentifier","src":"1710:25:25"},"nativeSrc":"1710:32:25","nodeType":"YulFunctionCall","src":"1710:32:25"},"nativeSrc":"1710:32:25","nodeType":"YulExpressionStatement","src":"1710:32:25"}]},"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"1607:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1647:6:25","nodeType":"YulTypedName","src":"1647:6:25","type":""},{"name":"end","nativeSrc":"1655:3:25","nodeType":"YulTypedName","src":"1655:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1663:5:25","nodeType":"YulTypedName","src":"1663:5:25","type":""}],"src":"1607:141:25"},{"body":{"nativeSrc":"1896:706:25","nodeType":"YulBlock","src":"1896:706:25","statements":[{"body":{"nativeSrc":"1943:83:25","nodeType":"YulBlock","src":"1943:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1945:77:25","nodeType":"YulIdentifier","src":"1945:77:25"},"nativeSrc":"1945:79:25","nodeType":"YulFunctionCall","src":"1945:79:25"},"nativeSrc":"1945:79:25","nodeType":"YulExpressionStatement","src":"1945:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1917:7:25","nodeType":"YulIdentifier","src":"1917:7:25"},{"name":"headStart","nativeSrc":"1926:9:25","nodeType":"YulIdentifier","src":"1926:9:25"}],"functionName":{"name":"sub","nativeSrc":"1913:3:25","nodeType":"YulIdentifier","src":"1913:3:25"},"nativeSrc":"1913:23:25","nodeType":"YulFunctionCall","src":"1913:23:25"},{"kind":"number","nativeSrc":"1938:3:25","nodeType":"YulLiteral","src":"1938:3:25","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"1909:3:25","nodeType":"YulIdentifier","src":"1909:3:25"},"nativeSrc":"1909:33:25","nodeType":"YulFunctionCall","src":"1909:33:25"},"nativeSrc":"1906:120:25","nodeType":"YulIf","src":"1906:120:25"},{"nativeSrc":"2036:143:25","nodeType":"YulBlock","src":"2036:143:25","statements":[{"nativeSrc":"2051:15:25","nodeType":"YulVariableDeclaration","src":"2051:15:25","value":{"kind":"number","nativeSrc":"2065:1:25","nodeType":"YulLiteral","src":"2065:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2055:6:25","nodeType":"YulTypedName","src":"2055:6:25","type":""}]},{"nativeSrc":"2080:89:25","nodeType":"YulAssignment","src":"2080:89:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2141:9:25","nodeType":"YulIdentifier","src":"2141:9:25"},{"name":"offset","nativeSrc":"2152:6:25","nodeType":"YulIdentifier","src":"2152:6:25"}],"functionName":{"name":"add","nativeSrc":"2137:3:25","nodeType":"YulIdentifier","src":"2137:3:25"},"nativeSrc":"2137:22:25","nodeType":"YulFunctionCall","src":"2137:22:25"},{"name":"dataEnd","nativeSrc":"2161:7:25","nodeType":"YulIdentifier","src":"2161:7:25"}],"functionName":{"name":"abi_decode_t_contract$_IERC20_$1072_fromMemory","nativeSrc":"2090:46:25","nodeType":"YulIdentifier","src":"2090:46:25"},"nativeSrc":"2090:79:25","nodeType":"YulFunctionCall","src":"2090:79:25"},"variableNames":[{"name":"value0","nativeSrc":"2080:6:25","nodeType":"YulIdentifier","src":"2080:6:25"}]}]},{"nativeSrc":"2189:129:25","nodeType":"YulBlock","src":"2189:129:25","statements":[{"nativeSrc":"2204:16:25","nodeType":"YulVariableDeclaration","src":"2204:16:25","value":{"kind":"number","nativeSrc":"2218:2:25","nodeType":"YulLiteral","src":"2218:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2208:6:25","nodeType":"YulTypedName","src":"2208:6:25","type":""}]},{"nativeSrc":"2234:74:25","nodeType":"YulAssignment","src":"2234:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2280:9:25","nodeType":"YulIdentifier","src":"2280:9:25"},{"name":"offset","nativeSrc":"2291:6:25","nodeType":"YulIdentifier","src":"2291:6:25"}],"functionName":{"name":"add","nativeSrc":"2276:3:25","nodeType":"YulIdentifier","src":"2276:3:25"},"nativeSrc":"2276:22:25","nodeType":"YulFunctionCall","src":"2276:22:25"},{"name":"dataEnd","nativeSrc":"2300:7:25","nodeType":"YulIdentifier","src":"2300:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2244:31:25","nodeType":"YulIdentifier","src":"2244:31:25"},"nativeSrc":"2244:64:25","nodeType":"YulFunctionCall","src":"2244:64:25"},"variableNames":[{"name":"value1","nativeSrc":"2234:6:25","nodeType":"YulIdentifier","src":"2234:6:25"}]}]},{"nativeSrc":"2328:129:25","nodeType":"YulBlock","src":"2328:129:25","statements":[{"nativeSrc":"2343:16:25","nodeType":"YulVariableDeclaration","src":"2343:16:25","value":{"kind":"number","nativeSrc":"2357:2:25","nodeType":"YulLiteral","src":"2357:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2347:6:25","nodeType":"YulTypedName","src":"2347:6:25","type":""}]},{"nativeSrc":"2373:74:25","nodeType":"YulAssignment","src":"2373:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2419:9:25","nodeType":"YulIdentifier","src":"2419:9:25"},{"name":"offset","nativeSrc":"2430:6:25","nodeType":"YulIdentifier","src":"2430:6:25"}],"functionName":{"name":"add","nativeSrc":"2415:3:25","nodeType":"YulIdentifier","src":"2415:3:25"},"nativeSrc":"2415:22:25","nodeType":"YulFunctionCall","src":"2415:22:25"},{"name":"dataEnd","nativeSrc":"2439:7:25","nodeType":"YulIdentifier","src":"2439:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2383:31:25","nodeType":"YulIdentifier","src":"2383:31:25"},"nativeSrc":"2383:64:25","nodeType":"YulFunctionCall","src":"2383:64:25"},"variableNames":[{"name":"value2","nativeSrc":"2373:6:25","nodeType":"YulIdentifier","src":"2373:6:25"}]}]},{"nativeSrc":"2467:128:25","nodeType":"YulBlock","src":"2467:128:25","statements":[{"nativeSrc":"2482:16:25","nodeType":"YulVariableDeclaration","src":"2482:16:25","value":{"kind":"number","nativeSrc":"2496:2:25","nodeType":"YulLiteral","src":"2496:2:25","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"2486:6:25","nodeType":"YulTypedName","src":"2486:6:25","type":""}]},{"nativeSrc":"2512:73:25","nodeType":"YulAssignment","src":"2512:73:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2557:9:25","nodeType":"YulIdentifier","src":"2557:9:25"},{"name":"offset","nativeSrc":"2568:6:25","nodeType":"YulIdentifier","src":"2568:6:25"}],"functionName":{"name":"add","nativeSrc":"2553:3:25","nodeType":"YulIdentifier","src":"2553:3:25"},"nativeSrc":"2553:22:25","nodeType":"YulFunctionCall","src":"2553:22:25"},{"name":"dataEnd","nativeSrc":"2577:7:25","nodeType":"YulIdentifier","src":"2577:7:25"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"2522:30:25","nodeType":"YulIdentifier","src":"2522:30:25"},"nativeSrc":"2522:63:25","nodeType":"YulFunctionCall","src":"2522:63:25"},"variableNames":[{"name":"value3","nativeSrc":"2512:6:25","nodeType":"YulIdentifier","src":"2512:6:25"}]}]}]},"name":"abi_decode_tuple_t_contract$_IERC20_$1072t_uint256t_uint256t_uint32_fromMemory","nativeSrc":"1754:848:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1842:9:25","nodeType":"YulTypedName","src":"1842:9:25","type":""},{"name":"dataEnd","nativeSrc":"1853:7:25","nodeType":"YulTypedName","src":"1853:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1865:6:25","nodeType":"YulTypedName","src":"1865:6:25","type":""},{"name":"value1","nativeSrc":"1873:6:25","nodeType":"YulTypedName","src":"1873:6:25","type":""},{"name":"value2","nativeSrc":"1881:6:25","nodeType":"YulTypedName","src":"1881:6:25","type":""},{"name":"value3","nativeSrc":"1889:6:25","nodeType":"YulTypedName","src":"1889:6:25","type":""}],"src":"1754:848:25"},{"body":{"nativeSrc":"2667:40:25","nodeType":"YulBlock","src":"2667:40:25","statements":[{"nativeSrc":"2678:22:25","nodeType":"YulAssignment","src":"2678:22:25","value":{"arguments":[{"name":"value","nativeSrc":"2694:5:25","nodeType":"YulIdentifier","src":"2694:5:25"}],"functionName":{"name":"mload","nativeSrc":"2688:5:25","nodeType":"YulIdentifier","src":"2688:5:25"},"nativeSrc":"2688:12:25","nodeType":"YulFunctionCall","src":"2688:12:25"},"variableNames":[{"name":"length","nativeSrc":"2678:6:25","nodeType":"YulIdentifier","src":"2678:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"2608:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2650:5:25","nodeType":"YulTypedName","src":"2650:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"2660:6:25","nodeType":"YulTypedName","src":"2660:6:25","type":""}],"src":"2608:99:25"},{"body":{"nativeSrc":"2741:152:25","nodeType":"YulBlock","src":"2741:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2758:1:25","nodeType":"YulLiteral","src":"2758:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2761:77:25","nodeType":"YulLiteral","src":"2761:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2751:6:25","nodeType":"YulIdentifier","src":"2751:6:25"},"nativeSrc":"2751:88:25","nodeType":"YulFunctionCall","src":"2751:88:25"},"nativeSrc":"2751:88:25","nodeType":"YulExpressionStatement","src":"2751:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2855:1:25","nodeType":"YulLiteral","src":"2855:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"2858:4:25","nodeType":"YulLiteral","src":"2858:4:25","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2848:6:25","nodeType":"YulIdentifier","src":"2848:6:25"},"nativeSrc":"2848:15:25","nodeType":"YulFunctionCall","src":"2848:15:25"},"nativeSrc":"2848:15:25","nodeType":"YulExpressionStatement","src":"2848:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2879:1:25","nodeType":"YulLiteral","src":"2879:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2882:4:25","nodeType":"YulLiteral","src":"2882:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2872:6:25","nodeType":"YulIdentifier","src":"2872:6:25"},"nativeSrc":"2872:15:25","nodeType":"YulFunctionCall","src":"2872:15:25"},"nativeSrc":"2872:15:25","nodeType":"YulExpressionStatement","src":"2872:15:25"}]},"name":"panic_error_0x41","nativeSrc":"2713:180:25","nodeType":"YulFunctionDefinition","src":"2713:180:25"},{"body":{"nativeSrc":"2927:152:25","nodeType":"YulBlock","src":"2927:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2944:1:25","nodeType":"YulLiteral","src":"2944:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2947:77:25","nodeType":"YulLiteral","src":"2947:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2937:6:25","nodeType":"YulIdentifier","src":"2937:6:25"},"nativeSrc":"2937:88:25","nodeType":"YulFunctionCall","src":"2937:88:25"},"nativeSrc":"2937:88:25","nodeType":"YulExpressionStatement","src":"2937:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3041:1:25","nodeType":"YulLiteral","src":"3041:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"3044:4:25","nodeType":"YulLiteral","src":"3044:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"3034:6:25","nodeType":"YulIdentifier","src":"3034:6:25"},"nativeSrc":"3034:15:25","nodeType":"YulFunctionCall","src":"3034:15:25"},"nativeSrc":"3034:15:25","nodeType":"YulExpressionStatement","src":"3034:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3065:1:25","nodeType":"YulLiteral","src":"3065:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3068:4:25","nodeType":"YulLiteral","src":"3068:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3058:6:25","nodeType":"YulIdentifier","src":"3058:6:25"},"nativeSrc":"3058:15:25","nodeType":"YulFunctionCall","src":"3058:15:25"},"nativeSrc":"3058:15:25","nodeType":"YulExpressionStatement","src":"3058:15:25"}]},"name":"panic_error_0x22","nativeSrc":"2899:180:25","nodeType":"YulFunctionDefinition","src":"2899:180:25"},{"body":{"nativeSrc":"3136:269:25","nodeType":"YulBlock","src":"3136:269:25","statements":[{"nativeSrc":"3146:22:25","nodeType":"YulAssignment","src":"3146:22:25","value":{"arguments":[{"name":"data","nativeSrc":"3160:4:25","nodeType":"YulIdentifier","src":"3160:4:25"},{"kind":"number","nativeSrc":"3166:1:25","nodeType":"YulLiteral","src":"3166:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"3156:3:25","nodeType":"YulIdentifier","src":"3156:3:25"},"nativeSrc":"3156:12:25","nodeType":"YulFunctionCall","src":"3156:12:25"},"variableNames":[{"name":"length","nativeSrc":"3146:6:25","nodeType":"YulIdentifier","src":"3146:6:25"}]},{"nativeSrc":"3177:38:25","nodeType":"YulVariableDeclaration","src":"3177:38:25","value":{"arguments":[{"name":"data","nativeSrc":"3207:4:25","nodeType":"YulIdentifier","src":"3207:4:25"},{"kind":"number","nativeSrc":"3213:1:25","nodeType":"YulLiteral","src":"3213:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"3203:3:25","nodeType":"YulIdentifier","src":"3203:3:25"},"nativeSrc":"3203:12:25","nodeType":"YulFunctionCall","src":"3203:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"3181:18:25","nodeType":"YulTypedName","src":"3181:18:25","type":""}]},{"body":{"nativeSrc":"3254:51:25","nodeType":"YulBlock","src":"3254:51:25","statements":[{"nativeSrc":"3268:27:25","nodeType":"YulAssignment","src":"3268:27:25","value":{"arguments":[{"name":"length","nativeSrc":"3282:6:25","nodeType":"YulIdentifier","src":"3282:6:25"},{"kind":"number","nativeSrc":"3290:4:25","nodeType":"YulLiteral","src":"3290:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"3278:3:25","nodeType":"YulIdentifier","src":"3278:3:25"},"nativeSrc":"3278:17:25","nodeType":"YulFunctionCall","src":"3278:17:25"},"variableNames":[{"name":"length","nativeSrc":"3268:6:25","nodeType":"YulIdentifier","src":"3268:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3234:18:25","nodeType":"YulIdentifier","src":"3234:18:25"}],"functionName":{"name":"iszero","nativeSrc":"3227:6:25","nodeType":"YulIdentifier","src":"3227:6:25"},"nativeSrc":"3227:26:25","nodeType":"YulFunctionCall","src":"3227:26:25"},"nativeSrc":"3224:81:25","nodeType":"YulIf","src":"3224:81:25"},{"body":{"nativeSrc":"3357:42:25","nodeType":"YulBlock","src":"3357:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"3371:16:25","nodeType":"YulIdentifier","src":"3371:16:25"},"nativeSrc":"3371:18:25","nodeType":"YulFunctionCall","src":"3371:18:25"},"nativeSrc":"3371:18:25","nodeType":"YulExpressionStatement","src":"3371:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"3321:18:25","nodeType":"YulIdentifier","src":"3321:18:25"},{"arguments":[{"name":"length","nativeSrc":"3344:6:25","nodeType":"YulIdentifier","src":"3344:6:25"},{"kind":"number","nativeSrc":"3352:2:25","nodeType":"YulLiteral","src":"3352:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3341:2:25","nodeType":"YulIdentifier","src":"3341:2:25"},"nativeSrc":"3341:14:25","nodeType":"YulFunctionCall","src":"3341:14:25"}],"functionName":{"name":"eq","nativeSrc":"3318:2:25","nodeType":"YulIdentifier","src":"3318:2:25"},"nativeSrc":"3318:38:25","nodeType":"YulFunctionCall","src":"3318:38:25"},"nativeSrc":"3315:84:25","nodeType":"YulIf","src":"3315:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"3085:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3120:4:25","nodeType":"YulTypedName","src":"3120:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3129:6:25","nodeType":"YulTypedName","src":"3129:6:25","type":""}],"src":"3085:320:25"},{"body":{"nativeSrc":"3465:87:25","nodeType":"YulBlock","src":"3465:87:25","statements":[{"nativeSrc":"3475:11:25","nodeType":"YulAssignment","src":"3475:11:25","value":{"name":"ptr","nativeSrc":"3483:3:25","nodeType":"YulIdentifier","src":"3483:3:25"},"variableNames":[{"name":"data","nativeSrc":"3475:4:25","nodeType":"YulIdentifier","src":"3475:4:25"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3503:1:25","nodeType":"YulLiteral","src":"3503:1:25","type":"","value":"0"},{"name":"ptr","nativeSrc":"3506:3:25","nodeType":"YulIdentifier","src":"3506:3:25"}],"functionName":{"name":"mstore","nativeSrc":"3496:6:25","nodeType":"YulIdentifier","src":"3496:6:25"},"nativeSrc":"3496:14:25","nodeType":"YulFunctionCall","src":"3496:14:25"},"nativeSrc":"3496:14:25","nodeType":"YulExpressionStatement","src":"3496:14:25"},{"nativeSrc":"3519:26:25","nodeType":"YulAssignment","src":"3519:26:25","value":{"arguments":[{"kind":"number","nativeSrc":"3537:1:25","nodeType":"YulLiteral","src":"3537:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3540:4:25","nodeType":"YulLiteral","src":"3540:4:25","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"3527:9:25","nodeType":"YulIdentifier","src":"3527:9:25"},"nativeSrc":"3527:18:25","nodeType":"YulFunctionCall","src":"3527:18:25"},"variableNames":[{"name":"data","nativeSrc":"3519:4:25","nodeType":"YulIdentifier","src":"3519:4:25"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"3411:141:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"3452:3:25","nodeType":"YulTypedName","src":"3452:3:25","type":""}],"returnVariables":[{"name":"data","nativeSrc":"3460:4:25","nodeType":"YulTypedName","src":"3460:4:25","type":""}],"src":"3411:141:25"},{"body":{"nativeSrc":"3602:49:25","nodeType":"YulBlock","src":"3602:49:25","statements":[{"nativeSrc":"3612:33:25","nodeType":"YulAssignment","src":"3612:33:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3630:5:25","nodeType":"YulIdentifier","src":"3630:5:25"},{"kind":"number","nativeSrc":"3637:2:25","nodeType":"YulLiteral","src":"3637:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3626:3:25","nodeType":"YulIdentifier","src":"3626:3:25"},"nativeSrc":"3626:14:25","nodeType":"YulFunctionCall","src":"3626:14:25"},{"kind":"number","nativeSrc":"3642:2:25","nodeType":"YulLiteral","src":"3642:2:25","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"3622:3:25","nodeType":"YulIdentifier","src":"3622:3:25"},"nativeSrc":"3622:23:25","nodeType":"YulFunctionCall","src":"3622:23:25"},"variableNames":[{"name":"result","nativeSrc":"3612:6:25","nodeType":"YulIdentifier","src":"3612:6:25"}]}]},"name":"divide_by_32_ceil","nativeSrc":"3558:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3585:5:25","nodeType":"YulTypedName","src":"3585:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3595:6:25","nodeType":"YulTypedName","src":"3595:6:25","type":""}],"src":"3558:93:25"},{"body":{"nativeSrc":"3710:54:25","nodeType":"YulBlock","src":"3710:54:25","statements":[{"nativeSrc":"3720:37:25","nodeType":"YulAssignment","src":"3720:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"3745:4:25","nodeType":"YulIdentifier","src":"3745:4:25"},{"name":"value","nativeSrc":"3751:5:25","nodeType":"YulIdentifier","src":"3751:5:25"}],"functionName":{"name":"shl","nativeSrc":"3741:3:25","nodeType":"YulIdentifier","src":"3741:3:25"},"nativeSrc":"3741:16:25","nodeType":"YulFunctionCall","src":"3741:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"3720:8:25","nodeType":"YulIdentifier","src":"3720:8:25"}]}]},"name":"shift_left_dynamic","nativeSrc":"3657:107:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3685:4:25","nodeType":"YulTypedName","src":"3685:4:25","type":""},{"name":"value","nativeSrc":"3691:5:25","nodeType":"YulTypedName","src":"3691:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3701:8:25","nodeType":"YulTypedName","src":"3701:8:25","type":""}],"src":"3657:107:25"},{"body":{"nativeSrc":"3846:317:25","nodeType":"YulBlock","src":"3846:317:25","statements":[{"nativeSrc":"3856:35:25","nodeType":"YulVariableDeclaration","src":"3856:35:25","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"3877:10:25","nodeType":"YulIdentifier","src":"3877:10:25"},{"kind":"number","nativeSrc":"3889:1:25","nodeType":"YulLiteral","src":"3889:1:25","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"3873:3:25","nodeType":"YulIdentifier","src":"3873:3:25"},"nativeSrc":"3873:18:25","nodeType":"YulFunctionCall","src":"3873:18:25"},"variables":[{"name":"shiftBits","nativeSrc":"3860:9:25","nodeType":"YulTypedName","src":"3860:9:25","type":""}]},{"nativeSrc":"3900:109:25","nodeType":"YulVariableDeclaration","src":"3900:109:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"3931:9:25","nodeType":"YulIdentifier","src":"3931:9:25"},{"kind":"number","nativeSrc":"3942:66:25","nodeType":"YulLiteral","src":"3942:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"3912:18:25","nodeType":"YulIdentifier","src":"3912:18:25"},"nativeSrc":"3912:97:25","nodeType":"YulFunctionCall","src":"3912:97:25"},"variables":[{"name":"mask","nativeSrc":"3904:4:25","nodeType":"YulTypedName","src":"3904:4:25","type":""}]},{"nativeSrc":"4018:51:25","nodeType":"YulAssignment","src":"4018:51:25","value":{"arguments":[{"name":"shiftBits","nativeSrc":"4049:9:25","nodeType":"YulIdentifier","src":"4049:9:25"},{"name":"toInsert","nativeSrc":"4060:8:25","nodeType":"YulIdentifier","src":"4060:8:25"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"4030:18:25","nodeType":"YulIdentifier","src":"4030:18:25"},"nativeSrc":"4030:39:25","nodeType":"YulFunctionCall","src":"4030:39:25"},"variableNames":[{"name":"toInsert","nativeSrc":"4018:8:25","nodeType":"YulIdentifier","src":"4018:8:25"}]},{"nativeSrc":"4078:30:25","nodeType":"YulAssignment","src":"4078:30:25","value":{"arguments":[{"name":"value","nativeSrc":"4091:5:25","nodeType":"YulIdentifier","src":"4091:5:25"},{"arguments":[{"name":"mask","nativeSrc":"4102:4:25","nodeType":"YulIdentifier","src":"4102:4:25"}],"functionName":{"name":"not","nativeSrc":"4098:3:25","nodeType":"YulIdentifier","src":"4098:3:25"},"nativeSrc":"4098:9:25","nodeType":"YulFunctionCall","src":"4098:9:25"}],"functionName":{"name":"and","nativeSrc":"4087:3:25","nodeType":"YulIdentifier","src":"4087:3:25"},"nativeSrc":"4087:21:25","nodeType":"YulFunctionCall","src":"4087:21:25"},"variableNames":[{"name":"value","nativeSrc":"4078:5:25","nodeType":"YulIdentifier","src":"4078:5:25"}]},{"nativeSrc":"4117:40:25","nodeType":"YulAssignment","src":"4117:40:25","value":{"arguments":[{"name":"value","nativeSrc":"4130:5:25","nodeType":"YulIdentifier","src":"4130:5:25"},{"arguments":[{"name":"toInsert","nativeSrc":"4141:8:25","nodeType":"YulIdentifier","src":"4141:8:25"},{"name":"mask","nativeSrc":"4151:4:25","nodeType":"YulIdentifier","src":"4151:4:25"}],"functionName":{"name":"and","nativeSrc":"4137:3:25","nodeType":"YulIdentifier","src":"4137:3:25"},"nativeSrc":"4137:19:25","nodeType":"YulFunctionCall","src":"4137:19:25"}],"functionName":{"name":"or","nativeSrc":"4127:2:25","nodeType":"YulIdentifier","src":"4127:2:25"},"nativeSrc":"4127:30:25","nodeType":"YulFunctionCall","src":"4127:30:25"},"variableNames":[{"name":"result","nativeSrc":"4117:6:25","nodeType":"YulIdentifier","src":"4117:6:25"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"3770:393:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3807:5:25","nodeType":"YulTypedName","src":"3807:5:25","type":""},{"name":"shiftBytes","nativeSrc":"3814:10:25","nodeType":"YulTypedName","src":"3814:10:25","type":""},{"name":"toInsert","nativeSrc":"3826:8:25","nodeType":"YulTypedName","src":"3826:8:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3839:6:25","nodeType":"YulTypedName","src":"3839:6:25","type":""}],"src":"3770:393:25"},{"body":{"nativeSrc":"4201:28:25","nodeType":"YulBlock","src":"4201:28:25","statements":[{"nativeSrc":"4211:12:25","nodeType":"YulAssignment","src":"4211:12:25","value":{"name":"value","nativeSrc":"4218:5:25","nodeType":"YulIdentifier","src":"4218:5:25"},"variableNames":[{"name":"ret","nativeSrc":"4211:3:25","nodeType":"YulIdentifier","src":"4211:3:25"}]}]},"name":"identity","nativeSrc":"4169:60:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4187:5:25","nodeType":"YulTypedName","src":"4187:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"4197:3:25","nodeType":"YulTypedName","src":"4197:3:25","type":""}],"src":"4169:60:25"},{"body":{"nativeSrc":"4295:82:25","nodeType":"YulBlock","src":"4295:82:25","statements":[{"nativeSrc":"4305:66:25","nodeType":"YulAssignment","src":"4305:66:25","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4363:5:25","nodeType":"YulIdentifier","src":"4363:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4345:17:25","nodeType":"YulIdentifier","src":"4345:17:25"},"nativeSrc":"4345:24:25","nodeType":"YulFunctionCall","src":"4345:24:25"}],"functionName":{"name":"identity","nativeSrc":"4336:8:25","nodeType":"YulIdentifier","src":"4336:8:25"},"nativeSrc":"4336:34:25","nodeType":"YulFunctionCall","src":"4336:34:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4318:17:25","nodeType":"YulIdentifier","src":"4318:17:25"},"nativeSrc":"4318:53:25","nodeType":"YulFunctionCall","src":"4318:53:25"},"variableNames":[{"name":"converted","nativeSrc":"4305:9:25","nodeType":"YulIdentifier","src":"4305:9:25"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"4235:142:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4275:5:25","nodeType":"YulTypedName","src":"4275:5:25","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4285:9:25","nodeType":"YulTypedName","src":"4285:9:25","type":""}],"src":"4235:142:25"},{"body":{"nativeSrc":"4430:28:25","nodeType":"YulBlock","src":"4430:28:25","statements":[{"nativeSrc":"4440:12:25","nodeType":"YulAssignment","src":"4440:12:25","value":{"name":"value","nativeSrc":"4447:5:25","nodeType":"YulIdentifier","src":"4447:5:25"},"variableNames":[{"name":"ret","nativeSrc":"4440:3:25","nodeType":"YulIdentifier","src":"4440:3:25"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"4383:75:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4416:5:25","nodeType":"YulTypedName","src":"4416:5:25","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"4426:3:25","nodeType":"YulTypedName","src":"4426:3:25","type":""}],"src":"4383:75:25"},{"body":{"nativeSrc":"4540:193:25","nodeType":"YulBlock","src":"4540:193:25","statements":[{"nativeSrc":"4550:63:25","nodeType":"YulVariableDeclaration","src":"4550:63:25","value":{"arguments":[{"name":"value_0","nativeSrc":"4605:7:25","nodeType":"YulIdentifier","src":"4605:7:25"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"4574:30:25","nodeType":"YulIdentifier","src":"4574:30:25"},"nativeSrc":"4574:39:25","nodeType":"YulFunctionCall","src":"4574:39:25"},"variables":[{"name":"convertedValue_0","nativeSrc":"4554:16:25","nodeType":"YulTypedName","src":"4554:16:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4629:4:25","nodeType":"YulIdentifier","src":"4629:4:25"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4669:4:25","nodeType":"YulIdentifier","src":"4669:4:25"}],"functionName":{"name":"sload","nativeSrc":"4663:5:25","nodeType":"YulIdentifier","src":"4663:5:25"},"nativeSrc":"4663:11:25","nodeType":"YulFunctionCall","src":"4663:11:25"},{"name":"offset","nativeSrc":"4676:6:25","nodeType":"YulIdentifier","src":"4676:6:25"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"4708:16:25","nodeType":"YulIdentifier","src":"4708:16:25"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"4684:23:25","nodeType":"YulIdentifier","src":"4684:23:25"},"nativeSrc":"4684:41:25","nodeType":"YulFunctionCall","src":"4684:41:25"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"4635:27:25","nodeType":"YulIdentifier","src":"4635:27:25"},"nativeSrc":"4635:91:25","nodeType":"YulFunctionCall","src":"4635:91:25"}],"functionName":{"name":"sstore","nativeSrc":"4622:6:25","nodeType":"YulIdentifier","src":"4622:6:25"},"nativeSrc":"4622:105:25","nodeType":"YulFunctionCall","src":"4622:105:25"},"nativeSrc":"4622:105:25","nodeType":"YulExpressionStatement","src":"4622:105:25"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"4464:269:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4517:4:25","nodeType":"YulTypedName","src":"4517:4:25","type":""},{"name":"offset","nativeSrc":"4523:6:25","nodeType":"YulTypedName","src":"4523:6:25","type":""},{"name":"value_0","nativeSrc":"4531:7:25","nodeType":"YulTypedName","src":"4531:7:25","type":""}],"src":"4464:269:25"},{"body":{"nativeSrc":"4788:24:25","nodeType":"YulBlock","src":"4788:24:25","statements":[{"nativeSrc":"4798:8:25","nodeType":"YulAssignment","src":"4798:8:25","value":{"kind":"number","nativeSrc":"4805:1:25","nodeType":"YulLiteral","src":"4805:1:25","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"4798:3:25","nodeType":"YulIdentifier","src":"4798:3:25"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"4739:73:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"4784:3:25","nodeType":"YulTypedName","src":"4784:3:25","type":""}],"src":"4739:73:25"},{"body":{"nativeSrc":"4871:136:25","nodeType":"YulBlock","src":"4871:136:25","statements":[{"nativeSrc":"4881:46:25","nodeType":"YulVariableDeclaration","src":"4881:46:25","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"4895:30:25","nodeType":"YulIdentifier","src":"4895:30:25"},"nativeSrc":"4895:32:25","nodeType":"YulFunctionCall","src":"4895:32:25"},"variables":[{"name":"zero_0","nativeSrc":"4885:6:25","nodeType":"YulTypedName","src":"4885:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4980:4:25","nodeType":"YulIdentifier","src":"4980:4:25"},{"name":"offset","nativeSrc":"4986:6:25","nodeType":"YulIdentifier","src":"4986:6:25"},{"name":"zero_0","nativeSrc":"4994:6:25","nodeType":"YulIdentifier","src":"4994:6:25"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"4936:43:25","nodeType":"YulIdentifier","src":"4936:43:25"},"nativeSrc":"4936:65:25","nodeType":"YulFunctionCall","src":"4936:65:25"},"nativeSrc":"4936:65:25","nodeType":"YulExpressionStatement","src":"4936:65:25"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"4818:189:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"4857:4:25","nodeType":"YulTypedName","src":"4857:4:25","type":""},{"name":"offset","nativeSrc":"4863:6:25","nodeType":"YulTypedName","src":"4863:6:25","type":""}],"src":"4818:189:25"},{"body":{"nativeSrc":"5063:136:25","nodeType":"YulBlock","src":"5063:136:25","statements":[{"body":{"nativeSrc":"5130:63:25","nodeType":"YulBlock","src":"5130:63:25","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"5174:5:25","nodeType":"YulIdentifier","src":"5174:5:25"},{"kind":"number","nativeSrc":"5181:1:25","nodeType":"YulLiteral","src":"5181:1:25","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"5144:29:25","nodeType":"YulIdentifier","src":"5144:29:25"},"nativeSrc":"5144:39:25","nodeType":"YulFunctionCall","src":"5144:39:25"},"nativeSrc":"5144:39:25","nodeType":"YulExpressionStatement","src":"5144:39:25"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"5083:5:25","nodeType":"YulIdentifier","src":"5083:5:25"},{"name":"end","nativeSrc":"5090:3:25","nodeType":"YulIdentifier","src":"5090:3:25"}],"functionName":{"name":"lt","nativeSrc":"5080:2:25","nodeType":"YulIdentifier","src":"5080:2:25"},"nativeSrc":"5080:14:25","nodeType":"YulFunctionCall","src":"5080:14:25"},"nativeSrc":"5073:120:25","nodeType":"YulForLoop","post":{"nativeSrc":"5095:26:25","nodeType":"YulBlock","src":"5095:26:25","statements":[{"nativeSrc":"5097:22:25","nodeType":"YulAssignment","src":"5097:22:25","value":{"arguments":[{"name":"start","nativeSrc":"5110:5:25","nodeType":"YulIdentifier","src":"5110:5:25"},{"kind":"number","nativeSrc":"5117:1:25","nodeType":"YulLiteral","src":"5117:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"5106:3:25","nodeType":"YulIdentifier","src":"5106:3:25"},"nativeSrc":"5106:13:25","nodeType":"YulFunctionCall","src":"5106:13:25"},"variableNames":[{"name":"start","nativeSrc":"5097:5:25","nodeType":"YulIdentifier","src":"5097:5:25"}]}]},"pre":{"nativeSrc":"5077:2:25","nodeType":"YulBlock","src":"5077:2:25","statements":[]},"src":"5073:120:25"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"5013:186:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"5051:5:25","nodeType":"YulTypedName","src":"5051:5:25","type":""},{"name":"end","nativeSrc":"5058:3:25","nodeType":"YulTypedName","src":"5058:3:25","type":""}],"src":"5013:186:25"},{"body":{"nativeSrc":"5284:464:25","nodeType":"YulBlock","src":"5284:464:25","statements":[{"body":{"nativeSrc":"5310:431:25","nodeType":"YulBlock","src":"5310:431:25","statements":[{"nativeSrc":"5324:54:25","nodeType":"YulVariableDeclaration","src":"5324:54:25","value":{"arguments":[{"name":"array","nativeSrc":"5372:5:25","nodeType":"YulIdentifier","src":"5372:5:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"5340:31:25","nodeType":"YulIdentifier","src":"5340:31:25"},"nativeSrc":"5340:38:25","nodeType":"YulFunctionCall","src":"5340:38:25"},"variables":[{"name":"dataArea","nativeSrc":"5328:8:25","nodeType":"YulTypedName","src":"5328:8:25","type":""}]},{"nativeSrc":"5391:63:25","nodeType":"YulVariableDeclaration","src":"5391:63:25","value":{"arguments":[{"name":"dataArea","nativeSrc":"5414:8:25","nodeType":"YulIdentifier","src":"5414:8:25"},{"arguments":[{"name":"startIndex","nativeSrc":"5442:10:25","nodeType":"YulIdentifier","src":"5442:10:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"5424:17:25","nodeType":"YulIdentifier","src":"5424:17:25"},"nativeSrc":"5424:29:25","nodeType":"YulFunctionCall","src":"5424:29:25"}],"functionName":{"name":"add","nativeSrc":"5410:3:25","nodeType":"YulIdentifier","src":"5410:3:25"},"nativeSrc":"5410:44:25","nodeType":"YulFunctionCall","src":"5410:44:25"},"variables":[{"name":"deleteStart","nativeSrc":"5395:11:25","nodeType":"YulTypedName","src":"5395:11:25","type":""}]},{"body":{"nativeSrc":"5611:27:25","nodeType":"YulBlock","src":"5611:27:25","statements":[{"nativeSrc":"5613:23:25","nodeType":"YulAssignment","src":"5613:23:25","value":{"name":"dataArea","nativeSrc":"5628:8:25","nodeType":"YulIdentifier","src":"5628:8:25"},"variableNames":[{"name":"deleteStart","nativeSrc":"5613:11:25","nodeType":"YulIdentifier","src":"5613:11:25"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"5595:10:25","nodeType":"YulIdentifier","src":"5595:10:25"},{"kind":"number","nativeSrc":"5607:2:25","nodeType":"YulLiteral","src":"5607:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"5592:2:25","nodeType":"YulIdentifier","src":"5592:2:25"},"nativeSrc":"5592:18:25","nodeType":"YulFunctionCall","src":"5592:18:25"},"nativeSrc":"5589:49:25","nodeType":"YulIf","src":"5589:49:25"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"5680:11:25","nodeType":"YulIdentifier","src":"5680:11:25"},{"arguments":[{"name":"dataArea","nativeSrc":"5697:8:25","nodeType":"YulIdentifier","src":"5697:8:25"},{"arguments":[{"name":"len","nativeSrc":"5725:3:25","nodeType":"YulIdentifier","src":"5725:3:25"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"5707:17:25","nodeType":"YulIdentifier","src":"5707:17:25"},"nativeSrc":"5707:22:25","nodeType":"YulFunctionCall","src":"5707:22:25"}],"functionName":{"name":"add","nativeSrc":"5693:3:25","nodeType":"YulIdentifier","src":"5693:3:25"},"nativeSrc":"5693:37:25","nodeType":"YulFunctionCall","src":"5693:37:25"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"5651:28:25","nodeType":"YulIdentifier","src":"5651:28:25"},"nativeSrc":"5651:80:25","nodeType":"YulFunctionCall","src":"5651:80:25"},"nativeSrc":"5651:80:25","nodeType":"YulExpressionStatement","src":"5651:80:25"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"5301:3:25","nodeType":"YulIdentifier","src":"5301:3:25"},{"kind":"number","nativeSrc":"5306:2:25","nodeType":"YulLiteral","src":"5306:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"5298:2:25","nodeType":"YulIdentifier","src":"5298:2:25"},"nativeSrc":"5298:11:25","nodeType":"YulFunctionCall","src":"5298:11:25"},"nativeSrc":"5295:446:25","nodeType":"YulIf","src":"5295:446:25"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"5205:543:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"5260:5:25","nodeType":"YulTypedName","src":"5260:5:25","type":""},{"name":"len","nativeSrc":"5267:3:25","nodeType":"YulTypedName","src":"5267:3:25","type":""},{"name":"startIndex","nativeSrc":"5272:10:25","nodeType":"YulTypedName","src":"5272:10:25","type":""}],"src":"5205:543:25"},{"body":{"nativeSrc":"5817:54:25","nodeType":"YulBlock","src":"5817:54:25","statements":[{"nativeSrc":"5827:37:25","nodeType":"YulAssignment","src":"5827:37:25","value":{"arguments":[{"name":"bits","nativeSrc":"5852:4:25","nodeType":"YulIdentifier","src":"5852:4:25"},{"name":"value","nativeSrc":"5858:5:25","nodeType":"YulIdentifier","src":"5858:5:25"}],"functionName":{"name":"shr","nativeSrc":"5848:3:25","nodeType":"YulIdentifier","src":"5848:3:25"},"nativeSrc":"5848:16:25","nodeType":"YulFunctionCall","src":"5848:16:25"},"variableNames":[{"name":"newValue","nativeSrc":"5827:8:25","nodeType":"YulIdentifier","src":"5827:8:25"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"5754:117:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"5792:4:25","nodeType":"YulTypedName","src":"5792:4:25","type":""},{"name":"value","nativeSrc":"5798:5:25","nodeType":"YulTypedName","src":"5798:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"5808:8:25","nodeType":"YulTypedName","src":"5808:8:25","type":""}],"src":"5754:117:25"},{"body":{"nativeSrc":"5928:118:25","nodeType":"YulBlock","src":"5928:118:25","statements":[{"nativeSrc":"5938:68:25","nodeType":"YulVariableDeclaration","src":"5938:68:25","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5987:1:25","nodeType":"YulLiteral","src":"5987:1:25","type":"","value":"8"},{"name":"bytes","nativeSrc":"5990:5:25","nodeType":"YulIdentifier","src":"5990:5:25"}],"functionName":{"name":"mul","nativeSrc":"5983:3:25","nodeType":"YulIdentifier","src":"5983:3:25"},"nativeSrc":"5983:13:25","nodeType":"YulFunctionCall","src":"5983:13:25"},{"arguments":[{"kind":"number","nativeSrc":"6002:1:25","nodeType":"YulLiteral","src":"6002:1:25","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5998:3:25","nodeType":"YulIdentifier","src":"5998:3:25"},"nativeSrc":"5998:6:25","nodeType":"YulFunctionCall","src":"5998:6:25"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"5954:28:25","nodeType":"YulIdentifier","src":"5954:28:25"},"nativeSrc":"5954:51:25","nodeType":"YulFunctionCall","src":"5954:51:25"}],"functionName":{"name":"not","nativeSrc":"5950:3:25","nodeType":"YulIdentifier","src":"5950:3:25"},"nativeSrc":"5950:56:25","nodeType":"YulFunctionCall","src":"5950:56:25"},"variables":[{"name":"mask","nativeSrc":"5942:4:25","nodeType":"YulTypedName","src":"5942:4:25","type":""}]},{"nativeSrc":"6015:25:25","nodeType":"YulAssignment","src":"6015:25:25","value":{"arguments":[{"name":"data","nativeSrc":"6029:4:25","nodeType":"YulIdentifier","src":"6029:4:25"},{"name":"mask","nativeSrc":"6035:4:25","nodeType":"YulIdentifier","src":"6035:4:25"}],"functionName":{"name":"and","nativeSrc":"6025:3:25","nodeType":"YulIdentifier","src":"6025:3:25"},"nativeSrc":"6025:15:25","nodeType":"YulFunctionCall","src":"6025:15:25"},"variableNames":[{"name":"result","nativeSrc":"6015:6:25","nodeType":"YulIdentifier","src":"6015:6:25"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"5877:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"5905:4:25","nodeType":"YulTypedName","src":"5905:4:25","type":""},{"name":"bytes","nativeSrc":"5911:5:25","nodeType":"YulTypedName","src":"5911:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"5921:6:25","nodeType":"YulTypedName","src":"5921:6:25","type":""}],"src":"5877:169:25"},{"body":{"nativeSrc":"6132:214:25","nodeType":"YulBlock","src":"6132:214:25","statements":[{"nativeSrc":"6265:37:25","nodeType":"YulAssignment","src":"6265:37:25","value":{"arguments":[{"name":"data","nativeSrc":"6292:4:25","nodeType":"YulIdentifier","src":"6292:4:25"},{"name":"len","nativeSrc":"6298:3:25","nodeType":"YulIdentifier","src":"6298:3:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"6273:18:25","nodeType":"YulIdentifier","src":"6273:18:25"},"nativeSrc":"6273:29:25","nodeType":"YulFunctionCall","src":"6273:29:25"},"variableNames":[{"name":"data","nativeSrc":"6265:4:25","nodeType":"YulIdentifier","src":"6265:4:25"}]},{"nativeSrc":"6311:29:25","nodeType":"YulAssignment","src":"6311:29:25","value":{"arguments":[{"name":"data","nativeSrc":"6322:4:25","nodeType":"YulIdentifier","src":"6322:4:25"},{"arguments":[{"kind":"number","nativeSrc":"6332:1:25","nodeType":"YulLiteral","src":"6332:1:25","type":"","value":"2"},{"name":"len","nativeSrc":"6335:3:25","nodeType":"YulIdentifier","src":"6335:3:25"}],"functionName":{"name":"mul","nativeSrc":"6328:3:25","nodeType":"YulIdentifier","src":"6328:3:25"},"nativeSrc":"6328:11:25","nodeType":"YulFunctionCall","src":"6328:11:25"}],"functionName":{"name":"or","nativeSrc":"6319:2:25","nodeType":"YulIdentifier","src":"6319:2:25"},"nativeSrc":"6319:21:25","nodeType":"YulFunctionCall","src":"6319:21:25"},"variableNames":[{"name":"used","nativeSrc":"6311:4:25","nodeType":"YulIdentifier","src":"6311:4:25"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"6051:295:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6113:4:25","nodeType":"YulTypedName","src":"6113:4:25","type":""},{"name":"len","nativeSrc":"6119:3:25","nodeType":"YulTypedName","src":"6119:3:25","type":""}],"returnVariables":[{"name":"used","nativeSrc":"6127:4:25","nodeType":"YulTypedName","src":"6127:4:25","type":""}],"src":"6051:295:25"},{"body":{"nativeSrc":"6443:1303:25","nodeType":"YulBlock","src":"6443:1303:25","statements":[{"nativeSrc":"6454:51:25","nodeType":"YulVariableDeclaration","src":"6454:51:25","value":{"arguments":[{"name":"src","nativeSrc":"6501:3:25","nodeType":"YulIdentifier","src":"6501:3:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"6468:32:25","nodeType":"YulIdentifier","src":"6468:32:25"},"nativeSrc":"6468:37:25","nodeType":"YulFunctionCall","src":"6468:37:25"},"variables":[{"name":"newLen","nativeSrc":"6458:6:25","nodeType":"YulTypedName","src":"6458:6:25","type":""}]},{"body":{"nativeSrc":"6590:22:25","nodeType":"YulBlock","src":"6590:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"6592:16:25","nodeType":"YulIdentifier","src":"6592:16:25"},"nativeSrc":"6592:18:25","nodeType":"YulFunctionCall","src":"6592:18:25"},"nativeSrc":"6592:18:25","nodeType":"YulExpressionStatement","src":"6592:18:25"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"6562:6:25","nodeType":"YulIdentifier","src":"6562:6:25"},{"kind":"number","nativeSrc":"6570:18:25","nodeType":"YulLiteral","src":"6570:18:25","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6559:2:25","nodeType":"YulIdentifier","src":"6559:2:25"},"nativeSrc":"6559:30:25","nodeType":"YulFunctionCall","src":"6559:30:25"},"nativeSrc":"6556:56:25","nodeType":"YulIf","src":"6556:56:25"},{"nativeSrc":"6622:52:25","nodeType":"YulVariableDeclaration","src":"6622:52:25","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"6668:4:25","nodeType":"YulIdentifier","src":"6668:4:25"}],"functionName":{"name":"sload","nativeSrc":"6662:5:25","nodeType":"YulIdentifier","src":"6662:5:25"},"nativeSrc":"6662:11:25","nodeType":"YulFunctionCall","src":"6662:11:25"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"6636:25:25","nodeType":"YulIdentifier","src":"6636:25:25"},"nativeSrc":"6636:38:25","nodeType":"YulFunctionCall","src":"6636:38:25"},"variables":[{"name":"oldLen","nativeSrc":"6626:6:25","nodeType":"YulTypedName","src":"6626:6:25","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"6767:4:25","nodeType":"YulIdentifier","src":"6767:4:25"},{"name":"oldLen","nativeSrc":"6773:6:25","nodeType":"YulIdentifier","src":"6773:6:25"},{"name":"newLen","nativeSrc":"6781:6:25","nodeType":"YulIdentifier","src":"6781:6:25"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"6721:45:25","nodeType":"YulIdentifier","src":"6721:45:25"},"nativeSrc":"6721:67:25","nodeType":"YulFunctionCall","src":"6721:67:25"},"nativeSrc":"6721:67:25","nodeType":"YulExpressionStatement","src":"6721:67:25"},{"nativeSrc":"6798:18:25","nodeType":"YulVariableDeclaration","src":"6798:18:25","value":{"kind":"number","nativeSrc":"6815:1:25","nodeType":"YulLiteral","src":"6815:1:25","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"6802:9:25","nodeType":"YulTypedName","src":"6802:9:25","type":""}]},{"nativeSrc":"6826:17:25","nodeType":"YulAssignment","src":"6826:17:25","value":{"kind":"number","nativeSrc":"6839:4:25","nodeType":"YulLiteral","src":"6839:4:25","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"6826:9:25","nodeType":"YulIdentifier","src":"6826:9:25"}]},{"cases":[{"body":{"nativeSrc":"6890:611:25","nodeType":"YulBlock","src":"6890:611:25","statements":[{"nativeSrc":"6904:37:25","nodeType":"YulVariableDeclaration","src":"6904:37:25","value":{"arguments":[{"name":"newLen","nativeSrc":"6923:6:25","nodeType":"YulIdentifier","src":"6923:6:25"},{"arguments":[{"kind":"number","nativeSrc":"6935:4:25","nodeType":"YulLiteral","src":"6935:4:25","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"6931:3:25","nodeType":"YulIdentifier","src":"6931:3:25"},"nativeSrc":"6931:9:25","nodeType":"YulFunctionCall","src":"6931:9:25"}],"functionName":{"name":"and","nativeSrc":"6919:3:25","nodeType":"YulIdentifier","src":"6919:3:25"},"nativeSrc":"6919:22:25","nodeType":"YulFunctionCall","src":"6919:22:25"},"variables":[{"name":"loopEnd","nativeSrc":"6908:7:25","nodeType":"YulTypedName","src":"6908:7:25","type":""}]},{"nativeSrc":"6955:51:25","nodeType":"YulVariableDeclaration","src":"6955:51:25","value":{"arguments":[{"name":"slot","nativeSrc":"7001:4:25","nodeType":"YulIdentifier","src":"7001:4:25"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"6969:31:25","nodeType":"YulIdentifier","src":"6969:31:25"},"nativeSrc":"6969:37:25","nodeType":"YulFunctionCall","src":"6969:37:25"},"variables":[{"name":"dstPtr","nativeSrc":"6959:6:25","nodeType":"YulTypedName","src":"6959:6:25","type":""}]},{"nativeSrc":"7019:10:25","nodeType":"YulVariableDeclaration","src":"7019:10:25","value":{"kind":"number","nativeSrc":"7028:1:25","nodeType":"YulLiteral","src":"7028:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"7023:1:25","nodeType":"YulTypedName","src":"7023:1:25","type":""}]},{"body":{"nativeSrc":"7087:163:25","nodeType":"YulBlock","src":"7087:163:25","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"7112:6:25","nodeType":"YulIdentifier","src":"7112:6:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7130:3:25","nodeType":"YulIdentifier","src":"7130:3:25"},{"name":"srcOffset","nativeSrc":"7135:9:25","nodeType":"YulIdentifier","src":"7135:9:25"}],"functionName":{"name":"add","nativeSrc":"7126:3:25","nodeType":"YulIdentifier","src":"7126:3:25"},"nativeSrc":"7126:19:25","nodeType":"YulFunctionCall","src":"7126:19:25"}],"functionName":{"name":"mload","nativeSrc":"7120:5:25","nodeType":"YulIdentifier","src":"7120:5:25"},"nativeSrc":"7120:26:25","nodeType":"YulFunctionCall","src":"7120:26:25"}],"functionName":{"name":"sstore","nativeSrc":"7105:6:25","nodeType":"YulIdentifier","src":"7105:6:25"},"nativeSrc":"7105:42:25","nodeType":"YulFunctionCall","src":"7105:42:25"},"nativeSrc":"7105:42:25","nodeType":"YulExpressionStatement","src":"7105:42:25"},{"nativeSrc":"7164:24:25","nodeType":"YulAssignment","src":"7164:24:25","value":{"arguments":[{"name":"dstPtr","nativeSrc":"7178:6:25","nodeType":"YulIdentifier","src":"7178:6:25"},{"kind":"number","nativeSrc":"7186:1:25","nodeType":"YulLiteral","src":"7186:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7174:3:25","nodeType":"YulIdentifier","src":"7174:3:25"},"nativeSrc":"7174:14:25","nodeType":"YulFunctionCall","src":"7174:14:25"},"variableNames":[{"name":"dstPtr","nativeSrc":"7164:6:25","nodeType":"YulIdentifier","src":"7164:6:25"}]},{"nativeSrc":"7205:31:25","nodeType":"YulAssignment","src":"7205:31:25","value":{"arguments":[{"name":"srcOffset","nativeSrc":"7222:9:25","nodeType":"YulIdentifier","src":"7222:9:25"},{"kind":"number","nativeSrc":"7233:2:25","nodeType":"YulLiteral","src":"7233:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7218:3:25","nodeType":"YulIdentifier","src":"7218:3:25"},"nativeSrc":"7218:18:25","nodeType":"YulFunctionCall","src":"7218:18:25"},"variableNames":[{"name":"srcOffset","nativeSrc":"7205:9:25","nodeType":"YulIdentifier","src":"7205:9:25"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"7053:1:25","nodeType":"YulIdentifier","src":"7053:1:25"},{"name":"loopEnd","nativeSrc":"7056:7:25","nodeType":"YulIdentifier","src":"7056:7:25"}],"functionName":{"name":"lt","nativeSrc":"7050:2:25","nodeType":"YulIdentifier","src":"7050:2:25"},"nativeSrc":"7050:14:25","nodeType":"YulFunctionCall","src":"7050:14:25"},"nativeSrc":"7042:208:25","nodeType":"YulForLoop","post":{"nativeSrc":"7065:21:25","nodeType":"YulBlock","src":"7065:21:25","statements":[{"nativeSrc":"7067:17:25","nodeType":"YulAssignment","src":"7067:17:25","value":{"arguments":[{"name":"i","nativeSrc":"7076:1:25","nodeType":"YulIdentifier","src":"7076:1:25"},{"kind":"number","nativeSrc":"7079:4:25","nodeType":"YulLiteral","src":"7079:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7072:3:25","nodeType":"YulIdentifier","src":"7072:3:25"},"nativeSrc":"7072:12:25","nodeType":"YulFunctionCall","src":"7072:12:25"},"variableNames":[{"name":"i","nativeSrc":"7067:1:25","nodeType":"YulIdentifier","src":"7067:1:25"}]}]},"pre":{"nativeSrc":"7046:3:25","nodeType":"YulBlock","src":"7046:3:25","statements":[]},"src":"7042:208:25"},{"body":{"nativeSrc":"7286:156:25","nodeType":"YulBlock","src":"7286:156:25","statements":[{"nativeSrc":"7304:43:25","nodeType":"YulVariableDeclaration","src":"7304:43:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7331:3:25","nodeType":"YulIdentifier","src":"7331:3:25"},{"name":"srcOffset","nativeSrc":"7336:9:25","nodeType":"YulIdentifier","src":"7336:9:25"}],"functionName":{"name":"add","nativeSrc":"7327:3:25","nodeType":"YulIdentifier","src":"7327:3:25"},"nativeSrc":"7327:19:25","nodeType":"YulFunctionCall","src":"7327:19:25"}],"functionName":{"name":"mload","nativeSrc":"7321:5:25","nodeType":"YulIdentifier","src":"7321:5:25"},"nativeSrc":"7321:26:25","nodeType":"YulFunctionCall","src":"7321:26:25"},"variables":[{"name":"lastValue","nativeSrc":"7308:9:25","nodeType":"YulTypedName","src":"7308:9:25","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"7371:6:25","nodeType":"YulIdentifier","src":"7371:6:25"},{"arguments":[{"name":"lastValue","nativeSrc":"7398:9:25","nodeType":"YulIdentifier","src":"7398:9:25"},{"arguments":[{"name":"newLen","nativeSrc":"7413:6:25","nodeType":"YulIdentifier","src":"7413:6:25"},{"kind":"number","nativeSrc":"7421:4:25","nodeType":"YulLiteral","src":"7421:4:25","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"7409:3:25","nodeType":"YulIdentifier","src":"7409:3:25"},"nativeSrc":"7409:17:25","nodeType":"YulFunctionCall","src":"7409:17:25"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"7379:18:25","nodeType":"YulIdentifier","src":"7379:18:25"},"nativeSrc":"7379:48:25","nodeType":"YulFunctionCall","src":"7379:48:25"}],"functionName":{"name":"sstore","nativeSrc":"7364:6:25","nodeType":"YulIdentifier","src":"7364:6:25"},"nativeSrc":"7364:64:25","nodeType":"YulFunctionCall","src":"7364:64:25"},"nativeSrc":"7364:64:25","nodeType":"YulExpressionStatement","src":"7364:64:25"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"7269:7:25","nodeType":"YulIdentifier","src":"7269:7:25"},{"name":"newLen","nativeSrc":"7278:6:25","nodeType":"YulIdentifier","src":"7278:6:25"}],"functionName":{"name":"lt","nativeSrc":"7266:2:25","nodeType":"YulIdentifier","src":"7266:2:25"},"nativeSrc":"7266:19:25","nodeType":"YulFunctionCall","src":"7266:19:25"},"nativeSrc":"7263:179:25","nodeType":"YulIf","src":"7263:179:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7462:4:25","nodeType":"YulIdentifier","src":"7462:4:25"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"7476:6:25","nodeType":"YulIdentifier","src":"7476:6:25"},{"kind":"number","nativeSrc":"7484:1:25","nodeType":"YulLiteral","src":"7484:1:25","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"7472:3:25","nodeType":"YulIdentifier","src":"7472:3:25"},"nativeSrc":"7472:14:25","nodeType":"YulFunctionCall","src":"7472:14:25"},{"kind":"number","nativeSrc":"7488:1:25","nodeType":"YulLiteral","src":"7488:1:25","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7468:3:25","nodeType":"YulIdentifier","src":"7468:3:25"},"nativeSrc":"7468:22:25","nodeType":"YulFunctionCall","src":"7468:22:25"}],"functionName":{"name":"sstore","nativeSrc":"7455:6:25","nodeType":"YulIdentifier","src":"7455:6:25"},"nativeSrc":"7455:36:25","nodeType":"YulFunctionCall","src":"7455:36:25"},"nativeSrc":"7455:36:25","nodeType":"YulExpressionStatement","src":"7455:36:25"}]},"nativeSrc":"6883:618:25","nodeType":"YulCase","src":"6883:618:25","value":{"kind":"number","nativeSrc":"6888:1:25","nodeType":"YulLiteral","src":"6888:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"7518:222:25","nodeType":"YulBlock","src":"7518:222:25","statements":[{"nativeSrc":"7532:14:25","nodeType":"YulVariableDeclaration","src":"7532:14:25","value":{"kind":"number","nativeSrc":"7545:1:25","nodeType":"YulLiteral","src":"7545:1:25","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"7536:5:25","nodeType":"YulTypedName","src":"7536:5:25","type":""}]},{"body":{"nativeSrc":"7569:67:25","nodeType":"YulBlock","src":"7569:67:25","statements":[{"nativeSrc":"7587:35:25","nodeType":"YulAssignment","src":"7587:35:25","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7606:3:25","nodeType":"YulIdentifier","src":"7606:3:25"},{"name":"srcOffset","nativeSrc":"7611:9:25","nodeType":"YulIdentifier","src":"7611:9:25"}],"functionName":{"name":"add","nativeSrc":"7602:3:25","nodeType":"YulIdentifier","src":"7602:3:25"},"nativeSrc":"7602:19:25","nodeType":"YulFunctionCall","src":"7602:19:25"}],"functionName":{"name":"mload","nativeSrc":"7596:5:25","nodeType":"YulIdentifier","src":"7596:5:25"},"nativeSrc":"7596:26:25","nodeType":"YulFunctionCall","src":"7596:26:25"},"variableNames":[{"name":"value","nativeSrc":"7587:5:25","nodeType":"YulIdentifier","src":"7587:5:25"}]}]},"condition":{"name":"newLen","nativeSrc":"7562:6:25","nodeType":"YulIdentifier","src":"7562:6:25"},"nativeSrc":"7559:77:25","nodeType":"YulIf","src":"7559:77:25"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"7656:4:25","nodeType":"YulIdentifier","src":"7656:4:25"},{"arguments":[{"name":"value","nativeSrc":"7715:5:25","nodeType":"YulIdentifier","src":"7715:5:25"},{"name":"newLen","nativeSrc":"7722:6:25","nodeType":"YulIdentifier","src":"7722:6:25"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"7662:52:25","nodeType":"YulIdentifier","src":"7662:52:25"},"nativeSrc":"7662:67:25","nodeType":"YulFunctionCall","src":"7662:67:25"}],"functionName":{"name":"sstore","nativeSrc":"7649:6:25","nodeType":"YulIdentifier","src":"7649:6:25"},"nativeSrc":"7649:81:25","nodeType":"YulFunctionCall","src":"7649:81:25"},"nativeSrc":"7649:81:25","nodeType":"YulExpressionStatement","src":"7649:81:25"}]},"nativeSrc":"7510:230:25","nodeType":"YulCase","src":"7510:230:25","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"6863:6:25","nodeType":"YulIdentifier","src":"6863:6:25"},{"kind":"number","nativeSrc":"6871:2:25","nodeType":"YulLiteral","src":"6871:2:25","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"6860:2:25","nodeType":"YulIdentifier","src":"6860:2:25"},"nativeSrc":"6860:14:25","nodeType":"YulFunctionCall","src":"6860:14:25"},"nativeSrc":"6853:887:25","nodeType":"YulSwitch","src":"6853:887:25"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"6351:1395:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"6432:4:25","nodeType":"YulTypedName","src":"6432:4:25","type":""},{"name":"src","nativeSrc":"6438:3:25","nodeType":"YulTypedName","src":"6438:3:25","type":""}],"src":"6351:1395:25"},{"body":{"nativeSrc":"7817:53:25","nodeType":"YulBlock","src":"7817:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7834:3:25","nodeType":"YulIdentifier","src":"7834:3:25"},{"arguments":[{"name":"value","nativeSrc":"7857:5:25","nodeType":"YulIdentifier","src":"7857:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"7839:17:25","nodeType":"YulIdentifier","src":"7839:17:25"},"nativeSrc":"7839:24:25","nodeType":"YulFunctionCall","src":"7839:24:25"}],"functionName":{"name":"mstore","nativeSrc":"7827:6:25","nodeType":"YulIdentifier","src":"7827:6:25"},"nativeSrc":"7827:37:25","nodeType":"YulFunctionCall","src":"7827:37:25"},"nativeSrc":"7827:37:25","nodeType":"YulExpressionStatement","src":"7827:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7752:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7805:5:25","nodeType":"YulTypedName","src":"7805:5:25","type":""},{"name":"pos","nativeSrc":"7812:3:25","nodeType":"YulTypedName","src":"7812:3:25","type":""}],"src":"7752:118:25"},{"body":{"nativeSrc":"7974:124:25","nodeType":"YulBlock","src":"7974:124:25","statements":[{"nativeSrc":"7984:26:25","nodeType":"YulAssignment","src":"7984:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"7996:9:25","nodeType":"YulIdentifier","src":"7996:9:25"},{"kind":"number","nativeSrc":"8007:2:25","nodeType":"YulLiteral","src":"8007:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7992:3:25","nodeType":"YulIdentifier","src":"7992:3:25"},"nativeSrc":"7992:18:25","nodeType":"YulFunctionCall","src":"7992:18:25"},"variableNames":[{"name":"tail","nativeSrc":"7984:4:25","nodeType":"YulIdentifier","src":"7984:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8064:6:25","nodeType":"YulIdentifier","src":"8064:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"8077:9:25","nodeType":"YulIdentifier","src":"8077:9:25"},{"kind":"number","nativeSrc":"8088:1:25","nodeType":"YulLiteral","src":"8088:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8073:3:25","nodeType":"YulIdentifier","src":"8073:3:25"},"nativeSrc":"8073:17:25","nodeType":"YulFunctionCall","src":"8073:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"8020:43:25","nodeType":"YulIdentifier","src":"8020:43:25"},"nativeSrc":"8020:71:25","nodeType":"YulFunctionCall","src":"8020:71:25"},"nativeSrc":"8020:71:25","nodeType":"YulExpressionStatement","src":"8020:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"7876:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7946:9:25","nodeType":"YulTypedName","src":"7946:9:25","type":""},{"name":"value0","nativeSrc":"7958:6:25","nodeType":"YulTypedName","src":"7958:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7969:4:25","nodeType":"YulTypedName","src":"7969:4:25","type":""}],"src":"7876:222:25"},{"body":{"nativeSrc":"8162:40:25","nodeType":"YulBlock","src":"8162:40:25","statements":[{"nativeSrc":"8173:22:25","nodeType":"YulAssignment","src":"8173:22:25","value":{"arguments":[{"name":"value","nativeSrc":"8189:5:25","nodeType":"YulIdentifier","src":"8189:5:25"}],"functionName":{"name":"mload","nativeSrc":"8183:5:25","nodeType":"YulIdentifier","src":"8183:5:25"},"nativeSrc":"8183:12:25","nodeType":"YulFunctionCall","src":"8183:12:25"},"variableNames":[{"name":"length","nativeSrc":"8173:6:25","nodeType":"YulIdentifier","src":"8173:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"8104:98:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8145:5:25","nodeType":"YulTypedName","src":"8145:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8155:6:25","nodeType":"YulTypedName","src":"8155:6:25","type":""}],"src":"8104:98:25"},{"body":{"nativeSrc":"8321:34:25","nodeType":"YulBlock","src":"8321:34:25","statements":[{"nativeSrc":"8331:18:25","nodeType":"YulAssignment","src":"8331:18:25","value":{"name":"pos","nativeSrc":"8346:3:25","nodeType":"YulIdentifier","src":"8346:3:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"8331:11:25","nodeType":"YulIdentifier","src":"8331:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8208:147:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8293:3:25","nodeType":"YulTypedName","src":"8293:3:25","type":""},{"name":"length","nativeSrc":"8298:6:25","nodeType":"YulTypedName","src":"8298:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"8309:11:25","nodeType":"YulTypedName","src":"8309:11:25","type":""}],"src":"8208:147:25"},{"body":{"nativeSrc":"8423:184:25","nodeType":"YulBlock","src":"8423:184:25","statements":[{"nativeSrc":"8433:10:25","nodeType":"YulVariableDeclaration","src":"8433:10:25","value":{"kind":"number","nativeSrc":"8442:1:25","nodeType":"YulLiteral","src":"8442:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"8437:1:25","nodeType":"YulTypedName","src":"8437:1:25","type":""}]},{"body":{"nativeSrc":"8502:63:25","nodeType":"YulBlock","src":"8502:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8527:3:25","nodeType":"YulIdentifier","src":"8527:3:25"},{"name":"i","nativeSrc":"8532:1:25","nodeType":"YulIdentifier","src":"8532:1:25"}],"functionName":{"name":"add","nativeSrc":"8523:3:25","nodeType":"YulIdentifier","src":"8523:3:25"},"nativeSrc":"8523:11:25","nodeType":"YulFunctionCall","src":"8523:11:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8546:3:25","nodeType":"YulIdentifier","src":"8546:3:25"},{"name":"i","nativeSrc":"8551:1:25","nodeType":"YulIdentifier","src":"8551:1:25"}],"functionName":{"name":"add","nativeSrc":"8542:3:25","nodeType":"YulIdentifier","src":"8542:3:25"},"nativeSrc":"8542:11:25","nodeType":"YulFunctionCall","src":"8542:11:25"}],"functionName":{"name":"mload","nativeSrc":"8536:5:25","nodeType":"YulIdentifier","src":"8536:5:25"},"nativeSrc":"8536:18:25","nodeType":"YulFunctionCall","src":"8536:18:25"}],"functionName":{"name":"mstore","nativeSrc":"8516:6:25","nodeType":"YulIdentifier","src":"8516:6:25"},"nativeSrc":"8516:39:25","nodeType":"YulFunctionCall","src":"8516:39:25"},"nativeSrc":"8516:39:25","nodeType":"YulExpressionStatement","src":"8516:39:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"8463:1:25","nodeType":"YulIdentifier","src":"8463:1:25"},{"name":"length","nativeSrc":"8466:6:25","nodeType":"YulIdentifier","src":"8466:6:25"}],"functionName":{"name":"lt","nativeSrc":"8460:2:25","nodeType":"YulIdentifier","src":"8460:2:25"},"nativeSrc":"8460:13:25","nodeType":"YulFunctionCall","src":"8460:13:25"},"nativeSrc":"8452:113:25","nodeType":"YulForLoop","post":{"nativeSrc":"8474:19:25","nodeType":"YulBlock","src":"8474:19:25","statements":[{"nativeSrc":"8476:15:25","nodeType":"YulAssignment","src":"8476:15:25","value":{"arguments":[{"name":"i","nativeSrc":"8485:1:25","nodeType":"YulIdentifier","src":"8485:1:25"},{"kind":"number","nativeSrc":"8488:2:25","nodeType":"YulLiteral","src":"8488:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8481:3:25","nodeType":"YulIdentifier","src":"8481:3:25"},"nativeSrc":"8481:10:25","nodeType":"YulFunctionCall","src":"8481:10:25"},"variableNames":[{"name":"i","nativeSrc":"8476:1:25","nodeType":"YulIdentifier","src":"8476:1:25"}]}]},"pre":{"nativeSrc":"8456:3:25","nodeType":"YulBlock","src":"8456:3:25","statements":[]},"src":"8452:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"8585:3:25","nodeType":"YulIdentifier","src":"8585:3:25"},{"name":"length","nativeSrc":"8590:6:25","nodeType":"YulIdentifier","src":"8590:6:25"}],"functionName":{"name":"add","nativeSrc":"8581:3:25","nodeType":"YulIdentifier","src":"8581:3:25"},"nativeSrc":"8581:16:25","nodeType":"YulFunctionCall","src":"8581:16:25"},{"kind":"number","nativeSrc":"8599:1:25","nodeType":"YulLiteral","src":"8599:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"8574:6:25","nodeType":"YulIdentifier","src":"8574:6:25"},"nativeSrc":"8574:27:25","nodeType":"YulFunctionCall","src":"8574:27:25"},"nativeSrc":"8574:27:25","nodeType":"YulExpressionStatement","src":"8574:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8361:246:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8405:3:25","nodeType":"YulTypedName","src":"8405:3:25","type":""},{"name":"dst","nativeSrc":"8410:3:25","nodeType":"YulTypedName","src":"8410:3:25","type":""},{"name":"length","nativeSrc":"8415:6:25","nodeType":"YulTypedName","src":"8415:6:25","type":""}],"src":"8361:246:25"},{"body":{"nativeSrc":"8721:278:25","nodeType":"YulBlock","src":"8721:278:25","statements":[{"nativeSrc":"8731:52:25","nodeType":"YulVariableDeclaration","src":"8731:52:25","value":{"arguments":[{"name":"value","nativeSrc":"8777:5:25","nodeType":"YulIdentifier","src":"8777:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"8745:31:25","nodeType":"YulIdentifier","src":"8745:31:25"},"nativeSrc":"8745:38:25","nodeType":"YulFunctionCall","src":"8745:38:25"},"variables":[{"name":"length","nativeSrc":"8735:6:25","nodeType":"YulTypedName","src":"8735:6:25","type":""}]},{"nativeSrc":"8792:95:25","nodeType":"YulAssignment","src":"8792:95:25","value":{"arguments":[{"name":"pos","nativeSrc":"8875:3:25","nodeType":"YulIdentifier","src":"8875:3:25"},{"name":"length","nativeSrc":"8880:6:25","nodeType":"YulIdentifier","src":"8880:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8799:75:25","nodeType":"YulIdentifier","src":"8799:75:25"},"nativeSrc":"8799:88:25","nodeType":"YulFunctionCall","src":"8799:88:25"},"variableNames":[{"name":"pos","nativeSrc":"8792:3:25","nodeType":"YulIdentifier","src":"8792:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8935:5:25","nodeType":"YulIdentifier","src":"8935:5:25"},{"kind":"number","nativeSrc":"8942:4:25","nodeType":"YulLiteral","src":"8942:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8931:3:25","nodeType":"YulIdentifier","src":"8931:3:25"},"nativeSrc":"8931:16:25","nodeType":"YulFunctionCall","src":"8931:16:25"},{"name":"pos","nativeSrc":"8949:3:25","nodeType":"YulIdentifier","src":"8949:3:25"},{"name":"length","nativeSrc":"8954:6:25","nodeType":"YulIdentifier","src":"8954:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"8896:34:25","nodeType":"YulIdentifier","src":"8896:34:25"},"nativeSrc":"8896:65:25","nodeType":"YulFunctionCall","src":"8896:65:25"},"nativeSrc":"8896:65:25","nodeType":"YulExpressionStatement","src":"8896:65:25"},{"nativeSrc":"8970:23:25","nodeType":"YulAssignment","src":"8970:23:25","value":{"arguments":[{"name":"pos","nativeSrc":"8981:3:25","nodeType":"YulIdentifier","src":"8981:3:25"},{"name":"length","nativeSrc":"8986:6:25","nodeType":"YulIdentifier","src":"8986:6:25"}],"functionName":{"name":"add","nativeSrc":"8977:3:25","nodeType":"YulIdentifier","src":"8977:3:25"},"nativeSrc":"8977:16:25","nodeType":"YulFunctionCall","src":"8977:16:25"},"variableNames":[{"name":"end","nativeSrc":"8970:3:25","nodeType":"YulIdentifier","src":"8970:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"8613:386:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8702:5:25","nodeType":"YulTypedName","src":"8702:5:25","type":""},{"name":"pos","nativeSrc":"8709:3:25","nodeType":"YulTypedName","src":"8709:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8717:3:25","nodeType":"YulTypedName","src":"8717:3:25","type":""}],"src":"8613:386:25"},{"body":{"nativeSrc":"9139:137:25","nodeType":"YulBlock","src":"9139:137:25","statements":[{"nativeSrc":"9150:100:25","nodeType":"YulAssignment","src":"9150:100:25","value":{"arguments":[{"name":"value0","nativeSrc":"9237:6:25","nodeType":"YulIdentifier","src":"9237:6:25"},{"name":"pos","nativeSrc":"9246:3:25","nodeType":"YulIdentifier","src":"9246:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"9157:79:25","nodeType":"YulIdentifier","src":"9157:79:25"},"nativeSrc":"9157:93:25","nodeType":"YulFunctionCall","src":"9157:93:25"},"variableNames":[{"name":"pos","nativeSrc":"9150:3:25","nodeType":"YulIdentifier","src":"9150:3:25"}]},{"nativeSrc":"9260:10:25","nodeType":"YulAssignment","src":"9260:10:25","value":{"name":"pos","nativeSrc":"9267:3:25","nodeType":"YulIdentifier","src":"9267:3:25"},"variableNames":[{"name":"end","nativeSrc":"9260:3:25","nodeType":"YulIdentifier","src":"9260:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"9005:271:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9118:3:25","nodeType":"YulTypedName","src":"9118:3:25","type":""},{"name":"value0","nativeSrc":"9124:6:25","nodeType":"YulTypedName","src":"9124:6:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9135:3:25","nodeType":"YulTypedName","src":"9135:3:25","type":""}],"src":"9005:271:25"},{"body":{"nativeSrc":"9359:274:25","nodeType":"YulBlock","src":"9359:274:25","statements":[{"body":{"nativeSrc":"9405:83:25","nodeType":"YulBlock","src":"9405:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"9407:77:25","nodeType":"YulIdentifier","src":"9407:77:25"},"nativeSrc":"9407:79:25","nodeType":"YulFunctionCall","src":"9407:79:25"},"nativeSrc":"9407:79:25","nodeType":"YulExpressionStatement","src":"9407:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9380:7:25","nodeType":"YulIdentifier","src":"9380:7:25"},{"name":"headStart","nativeSrc":"9389:9:25","nodeType":"YulIdentifier","src":"9389:9:25"}],"functionName":{"name":"sub","nativeSrc":"9376:3:25","nodeType":"YulIdentifier","src":"9376:3:25"},"nativeSrc":"9376:23:25","nodeType":"YulFunctionCall","src":"9376:23:25"},{"kind":"number","nativeSrc":"9401:2:25","nodeType":"YulLiteral","src":"9401:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9372:3:25","nodeType":"YulIdentifier","src":"9372:3:25"},"nativeSrc":"9372:32:25","nodeType":"YulFunctionCall","src":"9372:32:25"},"nativeSrc":"9369:119:25","nodeType":"YulIf","src":"9369:119:25"},{"nativeSrc":"9498:128:25","nodeType":"YulBlock","src":"9498:128:25","statements":[{"nativeSrc":"9513:15:25","nodeType":"YulVariableDeclaration","src":"9513:15:25","value":{"kind":"number","nativeSrc":"9527:1:25","nodeType":"YulLiteral","src":"9527:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"9517:6:25","nodeType":"YulTypedName","src":"9517:6:25","type":""}]},{"nativeSrc":"9542:74:25","nodeType":"YulAssignment","src":"9542:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9588:9:25","nodeType":"YulIdentifier","src":"9588:9:25"},{"name":"offset","nativeSrc":"9599:6:25","nodeType":"YulIdentifier","src":"9599:6:25"}],"functionName":{"name":"add","nativeSrc":"9584:3:25","nodeType":"YulIdentifier","src":"9584:3:25"},"nativeSrc":"9584:22:25","nodeType":"YulFunctionCall","src":"9584:22:25"},{"name":"dataEnd","nativeSrc":"9608:7:25","nodeType":"YulIdentifier","src":"9608:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"9552:31:25","nodeType":"YulIdentifier","src":"9552:31:25"},"nativeSrc":"9552:64:25","nodeType":"YulFunctionCall","src":"9552:64:25"},"variableNames":[{"name":"value0","nativeSrc":"9542:6:25","nodeType":"YulIdentifier","src":"9542:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"9282:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9329:9:25","nodeType":"YulTypedName","src":"9329:9:25","type":""},{"name":"dataEnd","nativeSrc":"9340:7:25","nodeType":"YulTypedName","src":"9340:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9352:6:25","nodeType":"YulTypedName","src":"9352:6:25","type":""}],"src":"9282:351:25"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$1072(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1072(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1072(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1072_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$1072(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1072t_uint256t_uint256t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1072_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c06040523480156200001157600080fd5b50604051620036cb380380620036cb8339818101604052810190620000379190620004d5565b828233866040518060400160405280601181526020017f5661756c74204f6365616e20546f6b656e0000000000000000000000000000008152506040518060400160405280600481526020017f764f4354000000000000000000000000000000000000000000000000000000008152508160039081620000b89190620007b7565b508060049081620000ca9190620007b7565b505050600080620000e183620001fb60201b60201c565b9150915081620000f3576012620000f5565b805b60ff1660a08160ff16815250508273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620001ae5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001a59190620008af565b60405180910390fd5b620001bf816200031560201b60201c565b508160068190555080600781905550505080600860006101000a81548163ffffffff021916908363ffffffff1602179055505050505062000990565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1660405160240160405160208183030381529060405263313ce56760e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405162000272919062000945565b600060405180830381855afa9150503d8060008114620002af576040519150601f19603f3d011682016040523d82523d6000602084013e620002b4565b606091505b5091509150818015620002c957506020815110155b156200030657600081806020019051810190620002e791906200095e565b905060ff8016811162000304576001819450945050505062000310565b505b6000809350935050505b915091565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200040d82620003e0565b9050919050565b6000620004218262000400565b9050919050565b620004338162000414565b81146200043f57600080fd5b50565b600081519050620004538162000428565b92915050565b6000819050919050565b6200046e8162000459565b81146200047a57600080fd5b50565b6000815190506200048e8162000463565b92915050565b600063ffffffff82169050919050565b620004af8162000494565b8114620004bb57600080fd5b50565b600081519050620004cf81620004a4565b92915050565b60008060008060808587031215620004f257620004f1620003db565b5b6000620005028782880162000442565b945050602062000515878288016200047d565b935050604062000528878288016200047d565b92505060606200053b87828801620004be565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005c957607f821691505b602082108103620005df57620005de62000581565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006497fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200060a565b6200065586836200060a565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000698620006926200068c8462000459565b6200066d565b62000459565b9050919050565b6000819050919050565b620006b48362000677565b620006cc620006c3826200069f565b84845462000617565b825550505050565b600090565b620006e3620006d4565b620006f0818484620006a9565b505050565b5b8181101562000718576200070c600082620006d9565b600181019050620006f6565b5050565b601f82111562000767576200073181620005e5565b6200073c84620005fa565b810160208510156200074c578190505b620007646200075b85620005fa565b830182620006f5565b50505b505050565b600082821c905092915050565b60006200078c600019846008026200076c565b1980831691505092915050565b6000620007a7838362000779565b9150826002028217905092915050565b620007c28262000547565b67ffffffffffffffff811115620007de57620007dd62000552565b5b620007ea8254620005b0565b620007f78282856200071c565b600060209050601f8311600181146200082f57600084156200081a578287015190505b62000826858262000799565b86555062000896565b601f1984166200083f86620005e5565b60005b82811015620008695784890151825560018201915060208501945060208101905062000842565b8683101562000889578489015162000885601f89168262000779565b8355505b6001600288020188555050505b505050505050565b620008a98162000400565b82525050565b6000602082019050620008c660008301846200089e565b92915050565b600081519050919050565b600081905092915050565b60005b8381101562000902578082015181840152602081019050620008e5565b60008484015250505050565b60006200091b82620008cc565b620009278185620008d7565b935062000939818560208601620008e2565b80840191505092915050565b60006200095382846200090e565b915081905092915050565b600060208284031215620009775762000976620003db565b5b600062000987848285016200047d565b91505092915050565b60805160a051612d00620009cb60003960006109860152600081816107a9015281816109b801528181611b880152611cfb0152612d006000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c806395d89b4111610125578063ce96cb77116100ad578063e97add571161007c578063e97add5714610703578063ef5ddcba14610721578063ef8b30f71461073d578063f2fde38b1461076d578063f7d978a2146107895761021c565b8063ce96cb7714610643578063d040542114610673578063d905777e146106a3578063dd62ed3e146106d35761021c565b8063b460af94116100f4578063b460af9414610565578063ba08765214610595578063ba0af7a9146105c5578063c63d75b6146105e3578063c6e6f592146106135761021c565b806395d89b41146104cb5780639732e720146104e9578063a9059cbb14610505578063b3d7f6b9146105355761021c565b8063402d267d116101a857806370a082311161017757806370a0823114610425578063715018a614610455578063869155731461045f5780638da5cb5b1461047d57806394bf804d1461049b5761021c565b8063402d267d1461037757806340f02ab6146103a75780634cdad506146103c55780636e553f65146103f55761021c565b80630a28a477116101ef5780630a28a477146102bd57806318160ddd146102ed57806323b872dd1461030b578063313ce5671461033b57806338d52e0f146103595761021c565b806301e1d1141461022157806306fdde031461023f57806307a2d13a1461025d578063095ea7b31461028d575b600080fd5b6102296107a5565b60405161023691906122c8565b60405180910390f35b610247610846565b6040516102549190612373565b60405180910390f35b610277600480360381019061027291906123c6565b6108d8565b60405161028491906122c8565b60405180910390f35b6102a760048036038101906102a29190612451565b6108ec565b6040516102b491906124ac565b60405180910390f35b6102d760048036038101906102d291906123c6565b61090f565b6040516102e491906122c8565b60405180910390f35b6102f5610941565b60405161030291906122c8565b60405180910390f35b610325600480360381019061032091906124c7565b61094b565b60405161033291906124ac565b60405180910390f35b61034361097a565b6040516103509190612536565b60405180910390f35b6103616109b4565b60405161036e9190612560565b60405180910390f35b610391600480360381019061038c919061257b565b6109dc565b60405161039e91906122c8565b60405180910390f35b6103af610a06565b6040516103bc91906125c7565b60405180910390f35b6103df60048036038101906103da91906123c6565b610a1c565b6040516103ec91906122c8565b60405180910390f35b61040f600480360381019061040a91906125e2565b610a4e565b60405161041c91906122c8565b60405180910390f35b61043f600480360381019061043a919061257b565b610b38565b60405161044c91906122c8565b60405180910390f35b61045d610b80565b005b610467610b94565b60405161047491906122c8565b60405180910390f35b610485610b9a565b6040516104929190612560565b60405180910390f35b6104b560048036038101906104b091906125e2565b610bc4565b6040516104c291906122c8565b60405180910390f35b6104d3610c50565b6040516104e09190612373565b60405180910390f35b61050360048036038101906104fe919061264e565b610ce2565b005b61051f600480360381019061051a9190612451565b610d0e565b60405161052c91906124ac565b60405180910390f35b61054f600480360381019061054a91906123c6565b610d31565b60405161055c91906122c8565b60405180910390f35b61057f600480360381019061057a919061267b565b610d63565b60405161058c91906122c8565b60405180910390f35b6105af60048036038101906105aa919061267b565b610e4f565b6040516105bc91906122c8565b60405180910390f35b6105cd610f3b565b6040516105da91906122c8565b60405180910390f35b6105fd60048036038101906105f8919061257b565b610f41565b60405161060a91906122c8565b60405180910390f35b61062d600480360381019061062891906123c6565b610f6b565b60405161063a91906122c8565b60405180910390f35b61065d6004803603810190610658919061257b565b610f7f565b60405161066a91906122c8565b60405180910390f35b61068d6004803603810190610688919061257b565b610f9b565b60405161069a91906125c7565b60405180910390f35b6106bd60048036038101906106b8919061257b565b610fbe565b6040516106ca91906122c8565b60405180910390f35b6106ed60048036038101906106e891906126ce565b610fd0565b6040516106fa91906122c8565b60405180910390f35b61070b611057565b60405161071891906125c7565b60405180910390f35b61073b600480360381019061073691906123c6565b6110cb565b005b610757600480360381019061075291906123c6565b6110dd565b60405161076491906122c8565b60405180910390f35b6107876004803603810190610782919061257b565b61110f565b005b6107a3600480360381019061079e91906123c6565b611195565b005b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108009190612560565b602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190612723565b905090565b6060600380546108559061277f565b80601f01602080910402602001604051908101604052809291908181526020018280546108819061277f565b80156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b5050505050905090565b60006108e58260006111a7565b9050919050565b6000806108f7611200565b9050610904818585611208565b600191505092915050565b6000806109238361091e61121a565b611224565b9050610939818461093491906127df565b611248565b915050919050565b6000600254905090565b600080610956611200565b905061096385828561125c565b61096e8585856112f0565b60019150509392505050565b60006109846113e4565b7f00000000000000000000000000000000000000000000000000000000000000006109af9190612813565b905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b600860009054906101000a900463ffffffff1681565b600080610a28836113e9565b9050610a3b81610a3661121a565b6113fd565b81610a469190612848565b915050919050565b600080610a5a836109dc565b905080841115610aa5578284826040517f79012fb2000000000000000000000000000000000000000000000000000000008152600401610a9c9392919061287c565b60405180910390fd5b6000610ab0856110dd565b9050610ac5610abd611200565b85878461142c565b610acf85826114b5565b42600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550809250505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b886114b9565b610b926000611540565b565b60075481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610bd083610f41565b905080841115610c1b578284826040517f284ff667000000000000000000000000000000000000000000000000000000008152600401610c129392919061287c565b60405180910390fd5b6000610c2685610d31565b9050610c3b610c33611200565b85838861142c565b610c4581866114b5565b809250505092915050565b606060048054610c5f9061277f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8b9061277f565b8015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b610cea6114b9565b80600860006101000a81548163ffffffff021916908363ffffffff16021790555050565b600080610d19611200565b9050610d268185856112f0565b600191505092915050565b600080610d3d83611606565b9050610d5081610d4b61161a565b611224565b81610d5b91906127df565b915050919050565b6000610d6d611624565b63ffffffff16610d7b611057565b63ffffffff161115610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db990612925565b60405180910390fd5b6000610dcd83610f7f565b905080851115610e18578285826040517ffe9cceec000000000000000000000000000000000000000000000000000000008152600401610e0f9392919061287c565b60405180910390fd5b6000610e238661090f565b9050610e2f868261162c565b610e43610e3a611200565b86868985611630565b80925050509392505050565b6000610e59611624565b63ffffffff16610e67611057565b63ffffffff161115610eae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea590612925565b60405180910390fd5b6000610eb983610fbe565b905080851115610f04578285826040517fb94abeec000000000000000000000000000000000000000000000000000000008152600401610efb9392919061287c565b60405180910390fd5b6000610f0f86610a1c565b9050610f1b818761162c565b610f2f610f26611200565b8686848a611630565b80925050509392505050565b60065481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b6000610f788260006116bb565b9050919050565b6000610f94610f8d83610b38565b60006111a7565b9050919050565b60096020528060005260406000206000915054906101000a900463ffffffff1681565b6000610fc982610b38565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600860009054906101000a900463ffffffff16600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff166110c69190612945565b905090565b6110d36114b9565b8060078190555050565b6000806110f1836110ec61161a565b6113fd565b905061110781846111029190612848565b611714565b915050919050565b6111176114b9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111895760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111809190612560565b60405180910390fd5b61119281611540565b50565b61119d6114b9565b8060068190555050565b60006111f860016111b66107a5565b6111c091906127df565b6111c86113e4565b600a6111d49190612ab0565b6111dc610941565b6111e691906127df565b8486611728909392919063ffffffff16565b905092915050565b600033905090565b611215838383600161177f565b505050565b6000600754905090565b600061124082612710600186611728909392919063ffffffff16565b905092915050565b60006112558260016116bb565b9050919050565b60006112688484610fd0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112ea57818110156112da578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016112d19392919061287c565b60405180910390fd5b6112e98484848403600061177f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113625760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113599190612560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113d45760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113cb9190612560565b60405180910390fd5b6113df838383611956565b505050565b600090565b60006113f68260006111a7565b9050919050565b6000611424826127108461141191906127df565b600186611728909392919063ffffffff16565b905092915050565b600061143f8361143a61161a565b6113fd565b9050600061144b611b7b565b905061145986868686611b83565b60008211801561149557503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156114ad576114ac6114a56109b4565b8284611c26565b5b505050505050565b5050565b6114c1611200565b73ffffffffffffffffffffffffffffffffffffffff166114df610b9a565b73ffffffffffffffffffffffffffffffffffffffff161461153e57611502611200565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115359190612560565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006116138260016111a7565b9050919050565b6000600654905090565b600042905090565b5050565b60006116438361163e61121a565b611224565b9050600061164f611ca5565b905061165e8787878787611cad565b60008211801561169a57503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156116b2576116b16116aa6109b4565b8284611c26565b5b50505050505050565b600061170c6116c86113e4565b600a6116d49190612ab0565b6116dc610941565b6116e691906127df565b60016116f06107a5565b6116fa91906127df565b8486611728909392919063ffffffff16565b905092915050565b60006117218260006116bb565b9050919050565b600080611736868686611da6565b905061174183611ead565b801561175e57506000848061175957611758612afb565b5b868809115b156117735760018161177091906127df565b90505b80915050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117f15760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117e89190612560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118635760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161185a9190612560565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611950578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161194791906122c8565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119a857806002600082825461199c91906127df565b92505081905550611a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a34578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a2b9392919061287c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ac45780600260008282540392505081905550611b11565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b6e91906122c8565b60405180910390a3505050565b600030905090565b611baf7f0000000000000000000000000000000000000000000000000000000000000000853085611edb565b611bb98382611f5d565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051611c18929190612b2a565b60405180910390a350505050565b611ca0838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611c59929190612b53565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fdf565b505050565b600030905090565b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611cec57611ceb83868361125c565b5b611cf68382612076565b611d217f00000000000000000000000000000000000000000000000000000000000000008584611c26565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051611d97929190612b2a565b60405180910390a45050505050565b6000808385029050600080198587098281108382030391505060008103611de157838281611dd757611dd6612afb565b5b0492505050611ea6565b808411611e1a576040517f227bc15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084868809905082811182039150808303925060008560000386169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b600060016002836003811115611ec657611ec5612b7c565b5b611ed09190612bab565b60ff16149050919050565b611f57848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611f1093929190612bdc565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fdf565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fcf5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611fc69190612560565b60405180910390fd5b611fdb60008383611956565b5050565b600061200a828473ffffffffffffffffffffffffffffffffffffffff166120f890919063ffffffff16565b9050600081511415801561202f57508080602001905181019061202d9190612c3f565b155b1561207157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016120689190612560565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120e85760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016120df9190612560565b60405180910390fd5b6120f482600083611956565b5050565b60606121068383600061210e565b905092915050565b60608147101561215557306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161214c9190612560565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161217e9190612cb3565b60006040518083038185875af1925050503d80600081146121bb576040519150601f19603f3d011682016040523d82523d6000602084013e6121c0565b606091505b50915091506121d08683836121db565b925050509392505050565b6060826121f0576121eb8261226a565b612262565b60008251148015612218575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561225a57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016122519190612560565b60405180910390fd5b819050612263565b5b9392505050565b60008151111561227d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b6122c2816122af565b82525050565b60006020820190506122dd60008301846122b9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561231d578082015181840152602081019050612302565b60008484015250505050565b6000601f19601f8301169050919050565b6000612345826122e3565b61234f81856122ee565b935061235f8185602086016122ff565b61236881612329565b840191505092915050565b6000602082019050818103600083015261238d818461233a565b905092915050565b600080fd5b6123a3816122af565b81146123ae57600080fd5b50565b6000813590506123c08161239a565b92915050565b6000602082840312156123dc576123db612395565b5b60006123ea848285016123b1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061241e826123f3565b9050919050565b61242e81612413565b811461243957600080fd5b50565b60008135905061244b81612425565b92915050565b6000806040838503121561246857612467612395565b5b60006124768582860161243c565b9250506020612487858286016123b1565b9150509250929050565b60008115159050919050565b6124a681612491565b82525050565b60006020820190506124c1600083018461249d565b92915050565b6000806000606084860312156124e0576124df612395565b5b60006124ee8682870161243c565b93505060206124ff8682870161243c565b9250506040612510868287016123b1565b9150509250925092565b600060ff82169050919050565b6125308161251a565b82525050565b600060208201905061254b6000830184612527565b92915050565b61255a81612413565b82525050565b60006020820190506125756000830184612551565b92915050565b60006020828403121561259157612590612395565b5b600061259f8482850161243c565b91505092915050565b600063ffffffff82169050919050565b6125c1816125a8565b82525050565b60006020820190506125dc60008301846125b8565b92915050565b600080604083850312156125f9576125f8612395565b5b6000612607858286016123b1565b92505060206126188582860161243c565b9150509250929050565b61262b816125a8565b811461263657600080fd5b50565b60008135905061264881612622565b92915050565b60006020828403121561266457612663612395565b5b600061267284828501612639565b91505092915050565b60008060006060848603121561269457612693612395565b5b60006126a2868287016123b1565b93505060206126b38682870161243c565b92505060406126c48682870161243c565b9150509250925092565b600080604083850312156126e5576126e4612395565b5b60006126f38582860161243c565b92505060206127048582860161243c565b9150509250929050565b60008151905061271d8161239a565b92915050565b60006020828403121561273957612738612395565b5b60006127478482850161270e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061279757607f821691505b6020821081036127aa576127a9612750565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127ea826122af565b91506127f5836122af565b925082820190508082111561280d5761280c6127b0565b5b92915050565b600061281e8261251a565b91506128298361251a565b9250828201905060ff811115612842576128416127b0565b5b92915050565b6000612853826122af565b915061285e836122af565b9250828203905081811115612876576128756127b0565b5b92915050565b60006060820190506128916000830186612551565b61289e60208301856122b9565b6128ab60408301846122b9565b949350505050565b7f4e6f7420656c696769626c65207269676874206e6f772c2066756e647320636160008201527f6e2062652072656465656d206166746572206c6f636b696e6720706572696f64602082015250565b600061290f6040836122ee565b915061291a826128b3565b604082019050919050565b6000602082019050818103600083015261293e81612902565b9050919050565b6000612950826125a8565b915061295b836125a8565b9250828201905063ffffffff811115612977576129766127b0565b5b92915050565b60008160011c9050919050565b6000808291508390505b60018511156129d4578086048111156129b0576129af6127b0565b5b60018516156129bf5780820291505b80810290506129cd8561297d565b9450612994565b94509492505050565b6000826129ed5760019050612aa9565b816129fb5760009050612aa9565b8160018114612a115760028114612a1b57612a4a565b6001915050612aa9565b60ff841115612a2d57612a2c6127b0565b5b8360020a915084821115612a4457612a436127b0565b5b50612aa9565b5060208310610133831016604e8410600b8410161715612a7f5782820a905083811115612a7a57612a796127b0565b5b612aa9565b612a8c848484600161298a565b92509050818404811115612aa357612aa26127b0565b5b81810290505b9392505050565b6000612abb826122af565b9150612ac68361251a565b9250612af37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846129dd565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050612b3f60008301856122b9565b612b4c60208301846122b9565b9392505050565b6000604082019050612b686000830185612551565b612b7560208301846122b9565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000612bb68261251a565b9150612bc18361251a565b925082612bd157612bd0612afb565b5b828206905092915050565b6000606082019050612bf16000830186612551565b612bfe6020830185612551565b612c0b60408301846122b9565b949350505050565b612c1c81612491565b8114612c2757600080fd5b50565b600081519050612c3981612c13565b92915050565b600060208284031215612c5557612c54612395565b5b6000612c6384828501612c2a565b91505092915050565b600081519050919050565b600081905092915050565b6000612c8d82612c6c565b612c978185612c77565b9350612ca78185602086016122ff565b80840191505092915050565b6000612cbf8284612c82565b91508190509291505056fea2646970667358221220de802220d8eb1c66f4881d656c7ec4357c2b4a3f67c38c0f86d8aac7241b18f964736f6c63430008150033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x36CB CODESIZE SUB DUP1 PUSH3 0x36CB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4D5 JUMP JUMPDEST DUP3 DUP3 CALLER DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5661756C74204F6365616E20546F6B656E000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x764F435400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB8 SWAP2 SWAP1 PUSH3 0x7B7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xCA SWAP2 SWAP1 PUSH3 0x7B7 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP1 PUSH3 0xE1 DUP4 PUSH3 0x1FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH3 0xF3 JUMPI PUSH1 0x12 PUSH3 0xF5 JUMP JUMPDEST DUP1 JUMPDEST PUSH1 0xFF AND PUSH1 0xA0 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1AE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A5 SWAP2 SWAP1 PUSH3 0x8AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1BF DUP2 PUSH3 0x315 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x990 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x313CE567 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH3 0x272 SWAP2 SWAP1 PUSH3 0x945 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x2AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x2B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH3 0x2C9 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT ISZERO JUMPDEST ISZERO PUSH3 0x306 JUMPI PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH3 0x2E7 SWAP2 SWAP1 PUSH3 0x95E JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP1 AND DUP2 GT PUSH3 0x304 JUMPI PUSH1 0x1 DUP2 SWAP5 POP SWAP5 POP POP POP POP PUSH3 0x310 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 DUP1 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x40D DUP3 PUSH3 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x421 DUP3 PUSH3 0x400 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x433 DUP2 PUSH3 0x414 JUMP JUMPDEST DUP2 EQ PUSH3 0x43F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x453 DUP2 PUSH3 0x428 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x46E DUP2 PUSH3 0x459 JUMP JUMPDEST DUP2 EQ PUSH3 0x47A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x48E DUP2 PUSH3 0x463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4AF DUP2 PUSH3 0x494 JUMP JUMPDEST DUP2 EQ PUSH3 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4CF DUP2 PUSH3 0x4A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x4F2 JUMPI PUSH3 0x4F1 PUSH3 0x3DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x502 DUP8 DUP3 DUP9 ADD PUSH3 0x442 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x515 DUP8 DUP3 DUP9 ADD PUSH3 0x47D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x528 DUP8 DUP3 DUP9 ADD PUSH3 0x47D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x53B DUP8 DUP3 DUP9 ADD PUSH3 0x4BE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5C9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5DF JUMPI PUSH3 0x5DE PUSH3 0x581 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x649 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x60A JUMP JUMPDEST PUSH3 0x655 DUP7 DUP4 PUSH3 0x60A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x698 PUSH3 0x692 PUSH3 0x68C DUP5 PUSH3 0x459 JUMP JUMPDEST PUSH3 0x66D JUMP JUMPDEST PUSH3 0x459 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6B4 DUP4 PUSH3 0x677 JUMP JUMPDEST PUSH3 0x6CC PUSH3 0x6C3 DUP3 PUSH3 0x69F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x617 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x6E3 PUSH3 0x6D4 JUMP JUMPDEST PUSH3 0x6F0 DUP2 DUP5 DUP5 PUSH3 0x6A9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x718 JUMPI PUSH3 0x70C PUSH1 0x0 DUP3 PUSH3 0x6D9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x6F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x767 JUMPI PUSH3 0x731 DUP2 PUSH3 0x5E5 JUMP JUMPDEST PUSH3 0x73C DUP5 PUSH3 0x5FA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x74C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x764 PUSH3 0x75B DUP6 PUSH3 0x5FA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x6F5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x78C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x76C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x7A7 DUP4 DUP4 PUSH3 0x779 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x7C2 DUP3 PUSH3 0x547 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7DE JUMPI PUSH3 0x7DD PUSH3 0x552 JUMP JUMPDEST JUMPDEST PUSH3 0x7EA DUP3 SLOAD PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x7F7 DUP3 DUP3 DUP6 PUSH3 0x71C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x82F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x81A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x826 DUP6 DUP3 PUSH3 0x799 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x896 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x83F DUP7 PUSH3 0x5E5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x869 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x842 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x889 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x885 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x779 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x8A9 DUP2 PUSH3 0x400 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x8C6 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x89E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x902 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8E5 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x91B DUP3 PUSH3 0x8CC JUMP JUMPDEST PUSH3 0x927 DUP2 DUP6 PUSH3 0x8D7 JUMP JUMPDEST SWAP4 POP PUSH3 0x939 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x8E2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x953 DUP3 DUP5 PUSH3 0x90E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x977 JUMPI PUSH3 0x976 PUSH3 0x3DB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x987 DUP5 DUP3 DUP6 ADD PUSH3 0x47D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2D00 PUSH3 0x9CB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x986 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7A9 ADD MSTORE DUP2 DUP2 PUSH2 0x9B8 ADD MSTORE DUP2 DUP2 PUSH2 0x1B88 ADD MSTORE PUSH2 0x1CFB ADD MSTORE PUSH2 0x2D00 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE97ADD57 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE97ADD57 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xEF5DDCBA EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xF7D978A2 EQ PUSH2 0x789 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xD0405421 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6D3 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xB460AF94 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xBA087652 EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xBA0AF7A9 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x613 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x9732E720 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x535 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x402D267D GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x86915573 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x49B JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x402D267D EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x3F5 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA28A477 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x359 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xB80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D3 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x267B JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x267B JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CD PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x26CE JUMP JUMPDEST PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x757 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x787 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x110F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x855 SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x881 SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E5 DUP3 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F7 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP PUSH2 0x904 DUP2 DUP6 DUP6 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x923 DUP4 PUSH2 0x91E PUSH2 0x121A JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP PUSH2 0x939 DUP2 DUP5 PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x956 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP PUSH2 0x963 DUP6 DUP3 DUP6 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x96E DUP6 DUP6 DUP6 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x984 PUSH2 0x13E4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA28 DUP4 PUSH2 0x13E9 JUMP JUMPDEST SWAP1 POP PUSH2 0xA3B DUP2 PUSH2 0xA36 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST DUP2 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA5A DUP4 PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0xAA5 JUMPI DUP3 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH32 0x79012FB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAB0 DUP6 PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP PUSH2 0xAC5 PUSH2 0xABD PUSH2 0x1200 JUMP JUMPDEST DUP6 DUP8 DUP5 PUSH2 0x142C JUMP JUMPDEST PUSH2 0xACF DUP6 DUP3 PUSH2 0x14B5 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB88 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xB92 PUSH1 0x0 PUSH2 0x1540 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD0 DUP4 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0xC1B JUMPI DUP3 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH32 0x284FF66700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP6 PUSH2 0xD31 JUMP JUMPDEST SWAP1 POP PUSH2 0xC3B PUSH2 0xC33 PUSH2 0x1200 JUMP JUMPDEST DUP6 DUP4 DUP9 PUSH2 0x142C JUMP JUMPDEST PUSH2 0xC45 DUP2 DUP7 PUSH2 0x14B5 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC5F SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC8B SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCEA PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD19 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP PUSH2 0xD26 DUP2 DUP6 DUP6 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD3D DUP4 PUSH2 0x1606 JUMP JUMPDEST SWAP1 POP PUSH2 0xD50 DUP2 PUSH2 0xD4B PUSH2 0x161A JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST DUP2 PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6D PUSH2 0x1624 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH2 0xD7B PUSH2 0x1057 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB9 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDCD DUP4 PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xE18 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH32 0xFE9CCEEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE23 DUP7 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP PUSH2 0xE2F DUP7 DUP3 PUSH2 0x162C JUMP JUMPDEST PUSH2 0xE43 PUSH2 0xE3A PUSH2 0x1200 JUMP JUMPDEST DUP7 DUP7 DUP10 DUP6 PUSH2 0x1630 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE59 PUSH2 0x1624 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH2 0xE67 PUSH2 0x1057 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEB9 DUP4 PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xF04 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH32 0xB94ABEEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF0F DUP7 PUSH2 0xA1C JUMP JUMPDEST SWAP1 POP PUSH2 0xF1B DUP2 DUP8 PUSH2 0x162C JUMP JUMPDEST PUSH2 0xF2F PUSH2 0xF26 PUSH2 0x1200 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP11 PUSH2 0x1630 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF78 DUP3 PUSH1 0x0 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 PUSH2 0xF8D DUP4 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 DUP3 PUSH2 0xB38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10D3 PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10F1 DUP4 PUSH2 0x10EC PUSH2 0x161A JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP PUSH2 0x1107 DUP2 DUP5 PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x1714 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1117 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1189 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1192 DUP2 PUSH2 0x1540 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x119D PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F8 PUSH1 0x1 PUSH2 0x11B6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH2 0x11C8 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0xA PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x11DC PUSH2 0x941 JUMP JUMPDEST PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST DUP5 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1215 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x177F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1240 DUP3 PUSH2 0x2710 PUSH1 0x1 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1255 DUP3 PUSH1 0x1 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1268 DUP5 DUP5 PUSH2 0xFD0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x12EA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12DA JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x177F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1362 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13DF DUP4 DUP4 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F6 DUP3 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1424 DUP3 PUSH2 0x2710 DUP5 PUSH2 0x1411 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x1 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP4 PUSH2 0x143A PUSH2 0x161A JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x144B PUSH2 0x1B7B JUMP JUMPDEST SWAP1 POP PUSH2 0x1459 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1495 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14AD JUMPI PUSH2 0x14AC PUSH2 0x14A5 PUSH2 0x9B4 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C1 PUSH2 0x1200 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DF PUSH2 0xB9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH2 0x1502 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1613 DUP3 PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1643 DUP4 PUSH2 0x163E PUSH2 0x121A JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x164F PUSH2 0x1CA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x165E DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x169A JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x16AA PUSH2 0x9B4 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170C PUSH2 0x16C8 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0xA PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x941 JUMP JUMPDEST PUSH2 0x16E6 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x1 PUSH2 0x16F0 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST DUP5 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1721 DUP3 PUSH1 0x0 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1736 DUP7 DUP7 DUP7 PUSH2 0x1DA6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1741 DUP4 PUSH2 0x1EAD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x175E JUMPI POP PUSH1 0x0 DUP5 DUP1 PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x2AFB JUMP JUMPDEST JUMPDEST DUP7 DUP9 MULMOD GT JUMPDEST ISZERO PUSH2 0x1773 JUMPI PUSH1 0x1 DUP2 PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1863 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185A SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1950 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1947 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x199C SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A34 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AC4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B11 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B6E SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BAF PUSH32 0x0 DUP6 ADDRESS DUP6 PUSH2 0x1EDB JUMP JUMPDEST PUSH2 0x1BB9 DUP4 DUP3 PUSH2 0x1F5D JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C18 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1CA0 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C59 SWAP3 SWAP2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CEC JUMPI PUSH2 0x1CEB DUP4 DUP7 DUP4 PUSH2 0x125C JUMP JUMPDEST JUMPDEST PUSH2 0x1CF6 DUP4 DUP3 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x1D21 PUSH32 0x0 DUP6 DUP5 PUSH2 0x1C26 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1D97 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 MUL SWAP1 POP PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x1DE1 JUMPI DUP4 DUP3 DUP2 PUSH2 0x1DD7 JUMPI PUSH2 0x1DD6 PUSH2 0x2AFB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1EA6 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1E1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x227BC15300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 PUSH1 0x0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x2B7C JUMP JUMPDEST JUMPDEST PUSH2 0x1ED0 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0xFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F10 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FDF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FCF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC6 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FDB PUSH1 0x0 DUP4 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200A DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x202F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x202D SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2071 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20E8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DF SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20F4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2106 DUP4 DUP4 PUSH1 0x0 PUSH2 0x210E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x2155 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214C SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x217E SWAP2 SWAP1 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21D0 DUP7 DUP4 DUP4 PUSH2 0x21DB JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x21F0 JUMPI PUSH2 0x21EB DUP3 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2218 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x225A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2263 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x227D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x231D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2302 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2345 DUP3 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x234F DUP2 DUP6 PUSH2 0x22EE JUMP JUMPDEST SWAP4 POP PUSH2 0x235F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x2368 DUP2 PUSH2 0x2329 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238D DUP2 DUP5 PUSH2 0x233A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A3 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP2 EQ PUSH2 0x23AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C0 DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DB PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23EA DUP5 DUP3 DUP6 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241E DUP3 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242E DUP2 PUSH2 0x2413 JUMP JUMPDEST DUP2 EQ PUSH2 0x2439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244B DUP2 PUSH2 0x2425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2476 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2487 DUP6 DUP3 DUP7 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A6 DUP2 PUSH2 0x2491 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x249D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24E0 JUMPI PUSH2 0x24DF PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24EE DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24FF DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2510 DUP7 DUP3 DUP8 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2530 DUP2 PUSH2 0x251A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x254B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2527 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x255A DUP2 PUSH2 0x2413 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2575 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2591 JUMPI PUSH2 0x2590 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x259F DUP5 DUP3 DUP6 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C1 DUP2 PUSH2 0x25A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2607 DUP6 DUP3 DUP7 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2618 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x262B DUP2 PUSH2 0x25A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2648 DUP2 PUSH2 0x2622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2672 DUP5 DUP3 DUP6 ADD PUSH2 0x2639 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A2 DUP7 DUP3 DUP8 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x26B3 DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x26C4 DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26E5 JUMPI PUSH2 0x26E4 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F3 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2704 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x271D DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2739 JUMPI PUSH2 0x2738 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2747 DUP5 DUP3 DUP6 ADD PUSH2 0x270E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2797 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27AA JUMPI PUSH2 0x27A9 PUSH2 0x2750 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27EA DUP3 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x27F5 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281E DUP3 PUSH2 0x251A JUMP JUMPDEST SWAP2 POP PUSH2 0x2829 DUP4 PUSH2 0x251A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2841 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2853 DUP3 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x285E DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2876 JUMPI PUSH2 0x2875 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2891 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x289E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x28AB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656C696769626C65207269676874206E6F772C2066756E6473206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E2062652072656465656D206166746572206C6F636B696E6720706572696F64 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290F PUSH1 0x40 DUP4 PUSH2 0x22EE JUMP JUMPDEST SWAP2 POP PUSH2 0x291A DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293E DUP2 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2950 DUP3 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x295B DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x2977 JUMPI PUSH2 0x2976 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x29D4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29AF PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x29BF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x29CD DUP6 PUSH2 0x297D JUMP JUMPDEST SWAP5 POP PUSH2 0x2994 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29ED JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST DUP2 PUSH2 0x29FB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2A11 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2A1B JUMPI PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2A44 JUMPI PUSH2 0x2A43 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2AA9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2A7F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2A7A JUMPI PUSH2 0x2A79 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2A8C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x298A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x2AA2 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABB DUP3 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC6 DUP4 PUSH2 0x251A JUMP JUMPDEST SWAP3 POP PUSH2 0x2AF3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x29DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x2B4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B68 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x2B75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BB6 DUP3 PUSH2 0x251A JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC1 DUP4 PUSH2 0x251A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BD1 JUMPI PUSH2 0x2BD0 PUSH2 0x2AFB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x2BFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x2C0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2491 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C39 DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C55 JUMPI PUSH2 0x2C54 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C63 DUP5 DUP3 DUP6 ADD PUSH2 0x2C2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8D DUP3 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x2C97 DUP2 DUP6 PUSH2 0x2C77 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBF DUP3 DUP5 PUSH2 0x2C82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE DUP1 0x22 KECCAK256 0xD8 0xEB SHR PUSH7 0xF4881D656C7EC4 CALLDATALOAD PUSH29 0x2B4A3F67C38C0F86D8AAC7241B18F964736F6C63430008150033000000 ","sourceMap":"88:4624:24:-:0;;;163:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;272:17;290:16;527:10:22;316:6:24;1896:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;4203:12:7;4217:19;4240:28;4261:6;4240:20;;;:28;;:::i;:::-;4202:66;;;;4300:7;:28;;4326:2;4300:28;;;4310:13;4300:28;4278:50;;;;;;;;;;4347:6;4338:15;;;;;;;;;;4192:168;;4165:195;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;571:17:22::1;549:19;:39;;;;620:16;599:18;:37;;;;455:189:::0;;385:9:24::3;369:13;;:25;;;;;;;;;;;;;;;;;;163:238:::0;;;;88:4624;;4503:533:7;4570:4;4576:5;4594:12;4608:28;4648:6;4640:26;;4680:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4640:93;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4593:140;;;;4747:7;:39;;;;;4784:2;4758:15;:22;:28;;4747:39;4743:260;;;4802:24;4840:15;4829:38;;;;;;;;;;;;:::i;:::-;4802:65;;4905:15;4885:35;;:16;:35;4881:112;;4948:4;4960:16;4940:38;;;;;;;;;4881:112;4788:215;4743:260;5020:5;5027:1;5012:17;;;;;;4503:533;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:25:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:77::-;1059:7;1088:5;1077:16;;1022:77;;;:::o;1105:122::-;1178:24;1196:5;1178:24;:::i;:::-;1171:5;1168:35;1158:63;;1217:1;1214;1207:12;1158:63;1105:122;:::o;1233:143::-;1290:5;1321:6;1315:13;1306:22;;1337:33;1364:5;1337:33;:::i;:::-;1233:143;;;;:::o;1382:93::-;1418:7;1458:10;1451:5;1447:22;1436:33;;1382:93;;;:::o;1481:120::-;1553:23;1570:5;1553:23;:::i;:::-;1546:5;1543:34;1533:62;;1591:1;1588;1581:12;1533:62;1481:120;:::o;1607:141::-;1663:5;1694:6;1688:13;1679:22;;1710:32;1736:5;1710:32;:::i;:::-;1607:141;;;;:::o;1754:848::-;1865:6;1873;1881;1889;1938:3;1926:9;1917:7;1913:23;1909:33;1906:120;;;1945:79;;:::i;:::-;1906:120;2065:1;2090:79;2161:7;2152:6;2141:9;2137:22;2090:79;:::i;:::-;2080:89;;2036:143;2218:2;2244:64;2300:7;2291:6;2280:9;2276:22;2244:64;:::i;:::-;2234:74;;2189:129;2357:2;2383:64;2439:7;2430:6;2419:9;2415:22;2383:64;:::i;:::-;2373:74;;2328:129;2496:2;2522:63;2577:7;2568:6;2557:9;2553:22;2522:63;:::i;:::-;2512:73;;2467:128;1754:848;;;;;;;:::o;2608:99::-;2660:6;2694:5;2688:12;2678:22;;2608:99;;;:::o;2713:180::-;2761:77;2758:1;2751:88;2858:4;2855:1;2848:15;2882:4;2879:1;2872:15;2899:180;2947:77;2944:1;2937:88;3044:4;3041:1;3034:15;3068:4;3065:1;3058:15;3085:320;3129:6;3166:1;3160:4;3156:12;3146:22;;3213:1;3207:4;3203:12;3234:18;3224:81;;3290:4;3282:6;3278:17;3268:27;;3224:81;3352:2;3344:6;3341:14;3321:18;3318:38;3315:84;;3371:18;;:::i;:::-;3315:84;3136:269;3085:320;;;:::o;3411:141::-;3460:4;3483:3;3475:11;;3506:3;3503:1;3496:14;3540:4;3537:1;3527:18;3519:26;;3411:141;;;:::o;3558:93::-;3595:6;3642:2;3637;3630:5;3626:14;3622:23;3612:33;;3558:93;;;:::o;3657:107::-;3701:8;3751:5;3745:4;3741:16;3720:37;;3657:107;;;;:::o;3770:393::-;3839:6;3889:1;3877:10;3873:18;3912:97;3942:66;3931:9;3912:97;:::i;:::-;4030:39;4060:8;4049:9;4030:39;:::i;:::-;4018:51;;4102:4;4098:9;4091:5;4087:21;4078:30;;4151:4;4141:8;4137:19;4130:5;4127:30;4117:40;;3846:317;;3770:393;;;;;:::o;4169:60::-;4197:3;4218:5;4211:12;;4169:60;;;:::o;4235:142::-;4285:9;4318:53;4336:34;4345:24;4363:5;4345:24;:::i;:::-;4336:34;:::i;:::-;4318:53;:::i;:::-;4305:66;;4235:142;;;:::o;4383:75::-;4426:3;4447:5;4440:12;;4383:75;;;:::o;4464:269::-;4574:39;4605:7;4574:39;:::i;:::-;4635:91;4684:41;4708:16;4684:41;:::i;:::-;4676:6;4669:4;4663:11;4635:91;:::i;:::-;4629:4;4622:105;4540:193;4464:269;;;:::o;4739:73::-;4784:3;4739:73;:::o;4818:189::-;4895:32;;:::i;:::-;4936:65;4994:6;4986;4980:4;4936:65;:::i;:::-;4871:136;4818:189;;:::o;5013:186::-;5073:120;5090:3;5083:5;5080:14;5073:120;;;5144:39;5181:1;5174:5;5144:39;:::i;:::-;5117:1;5110:5;5106:13;5097:22;;5073:120;;;5013:186;;:::o;5205:543::-;5306:2;5301:3;5298:11;5295:446;;;5340:38;5372:5;5340:38;:::i;:::-;5424:29;5442:10;5424:29;:::i;:::-;5414:8;5410:44;5607:2;5595:10;5592:18;5589:49;;;5628:8;5613:23;;5589:49;5651:80;5707:22;5725:3;5707:22;:::i;:::-;5697:8;5693:37;5680:11;5651:80;:::i;:::-;5310:431;;5295:446;5205:543;;;:::o;5754:117::-;5808:8;5858:5;5852:4;5848:16;5827:37;;5754:117;;;;:::o;5877:169::-;5921:6;5954:51;6002:1;5998:6;5990:5;5987:1;5983:13;5954:51;:::i;:::-;5950:56;6035:4;6029;6025:15;6015:25;;5928:118;5877:169;;;;:::o;6051:295::-;6127:4;6273:29;6298:3;6292:4;6273:29;:::i;:::-;6265:37;;6335:3;6332:1;6328:11;6322:4;6319:21;6311:29;;6051:295;;;;:::o;6351:1395::-;6468:37;6501:3;6468:37;:::i;:::-;6570:18;6562:6;6559:30;6556:56;;;6592:18;;:::i;:::-;6556:56;6636:38;6668:4;6662:11;6636:38;:::i;:::-;6721:67;6781:6;6773;6767:4;6721:67;:::i;:::-;6815:1;6839:4;6826:17;;6871:2;6863:6;6860:14;6888:1;6883:618;;;;7545:1;7562:6;7559:77;;;7611:9;7606:3;7602:19;7596:26;7587:35;;7559:77;7662:67;7722:6;7715:5;7662:67;:::i;:::-;7656:4;7649:81;7518:222;6853:887;;6883:618;6935:4;6931:9;6923:6;6919:22;6969:37;7001:4;6969:37;:::i;:::-;7028:1;7042:208;7056:7;7053:1;7050:14;7042:208;;;7135:9;7130:3;7126:19;7120:26;7112:6;7105:42;7186:1;7178:6;7174:14;7164:24;;7233:2;7222:9;7218:18;7205:31;;7079:4;7076:1;7072:12;7067:17;;7042:208;;;7278:6;7269:7;7266:19;7263:179;;;7336:9;7331:3;7327:19;7321:26;7379:48;7421:4;7413:6;7409:17;7398:9;7379:48;:::i;:::-;7371:6;7364:64;7286:156;7263:179;7488:1;7484;7476:6;7472:14;7468:22;7462:4;7455:36;6890:611;;;6853:887;;6443:1303;;;6351:1395;;:::o;7752:118::-;7839:24;7857:5;7839:24;:::i;:::-;7834:3;7827:37;7752:118;;:::o;7876:222::-;7969:4;8007:2;7996:9;7992:18;7984:26;;8020:71;8088:1;8077:9;8073:17;8064:6;8020:71;:::i;:::-;7876:222;;;;:::o;8104:98::-;8155:6;8189:5;8183:12;8173:22;;8104:98;;;:::o;8208:147::-;8309:11;8346:3;8331:18;;8208:147;;;;:::o;8361:246::-;8442:1;8452:113;8466:6;8463:1;8460:13;8452:113;;;8551:1;8546:3;8542:11;8536:18;8532:1;8527:3;8523:11;8516:39;8488:2;8485:1;8481:10;8476:15;;8452:113;;;8599:1;8590:6;8585:3;8581:16;8574:27;8423:184;8361:246;;;:::o;8613:386::-;8717:3;8745:38;8777:5;8745:38;:::i;:::-;8799:88;8880:6;8875:3;8799:88;:::i;:::-;8792:95;;8896:65;8954:6;8949:3;8942:4;8935:5;8931:16;8896:65;:::i;:::-;8986:6;8981:3;8977:16;8970:23;;8721:278;8613:386;;;;:::o;9005:271::-;9135:3;9157:93;9246:3;9237:6;9157:93;:::i;:::-;9150:100;;9267:3;9260:10;;9005:271;;;;:::o;9282:351::-;9352:6;9401:2;9389:9;9380:7;9376:23;9372:32;9369:119;;;9407:79;;:::i;:::-;9369:119;9527:1;9552:64;9608:7;9599:6;9588:9;9584:22;9552:64;:::i;:::-;9542:74;;9498:128;9282:351;;;;:::o;88:4624:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_885":{"entryPoint":4616,"id":885,"parameterSlots":3,"returnSlots":0},"@_approve_945":{"entryPoint":6015,"id":945,"parameterSlots":4,"returnSlots":0},"@_blockTimestamp_5455":{"entryPoint":5668,"id":5455,"parameterSlots":0,"returnSlots":1},"@_burn_867":{"entryPoint":8310,"id":867,"parameterSlots":2,"returnSlots":0},"@_callOptionalReturn_2213":{"entryPoint":8159,"id":2213,"parameterSlots":2,"returnSlots":0},"@_checkOwner_84":{"entryPoint":5305,"id":84,"parameterSlots":0,"returnSlots":0},"@_convertToAssets_1818":{"entryPoint":4519,"id":1818,"parameterSlots":2,"returnSlots":1},"@_convertToShares_1790":{"entryPoint":5819,"id":1790,"parameterSlots":2,"returnSlots":1},"@_decimalsOffset_1910":{"entryPoint":5092,"id":1910,"parameterSlots":0,"returnSlots":1},"@_deposit_1855":{"entryPoint":7043,"id":1855,"parameterSlots":4,"returnSlots":0},"@_deposit_5194":{"entryPoint":5164,"id":5194,"parameterSlots":4,"returnSlots":0},"@_entryFeeBasisPoints_5264":{"entryPoint":5658,"id":5264,"parameterSlots":0,"returnSlots":1},"@_entryFeeRecipient_5283":{"entryPoint":7035,"id":5283,"parameterSlots":0,"returnSlots":1},"@_exitFeeBasisPoints_5272":{"entryPoint":4634,"id":5272,"parameterSlots":0,"returnSlots":1},"@_exitFeeRecipient_5294":{"entryPoint":7333,"id":5294,"parameterSlots":0,"returnSlots":1},"@_feeOnRaw_5314":{"entryPoint":4644,"id":5314,"parameterSlots":2,"returnSlots":1},"@_feeOnTotal_5336":{"entryPoint":5117,"id":5336,"parameterSlots":2,"returnSlots":1},"@_mint_834":{"entryPoint":8029,"id":834,"parameterSlots":2,"returnSlots":0},"@_msgSender_2528":{"entryPoint":4608,"id":2528,"parameterSlots":0,"returnSlots":1},"@_revert_2515":{"entryPoint":8810,"id":2515,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_993":{"entryPoint":4700,"id":993,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5440,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_724":{"entryPoint":4848,"id":724,"parameterSlots":3,"returnSlots":0},"@_update_801":{"entryPoint":6486,"id":801,"parameterSlots":3,"returnSlots":0},"@_withdraw_1902":{"entryPoint":7341,"id":1902,"parameterSlots":5,"returnSlots":0},"@_withdraw_5256":{"entryPoint":5680,"id":5256,"parameterSlots":5,"returnSlots":0},"@afterDeposit_5722":{"entryPoint":5301,"id":5722,"parameterSlots":2,"returnSlots":0},"@allowance_621":{"entryPoint":4048,"id":621,"parameterSlots":2,"returnSlots":1},"@approve_645":{"entryPoint":2284,"id":645,"parameterSlots":2,"returnSlots":1},"@asset_1408":{"entryPoint":2484,"id":1408,"parameterSlots":0,"returnSlots":1},"@balanceOf_580":{"entryPoint":2872,"id":580,"parameterSlots":1,"returnSlots":1},"@beforeWithdraw_5730":{"entryPoint":5676,"id":5730,"parameterSlots":2,"returnSlots":0},"@changeEntryFee_5702":{"entryPoint":4501,"id":5702,"parameterSlots":1,"returnSlots":0},"@changeExitFee_5714":{"entryPoint":4299,"id":5714,"parameterSlots":1,"returnSlots":0},"@convertToAssets_1455":{"entryPoint":2264,"id":1455,"parameterSlots":1,"returnSlots":1},"@convertToShares_1439":{"entryPoint":3947,"id":1439,"parameterSlots":1,"returnSlots":1},"@decimals_1396":{"entryPoint":2426,"id":1396,"parameterSlots":0,"returnSlots":1},"@deposit_5516":{"entryPoint":2638,"id":5516,"parameterSlots":2,"returnSlots":1},"@entryFeeBasisPoints_5007":{"entryPoint":3899,"id":5007,"parameterSlots":0,"returnSlots":0},"@exitFeeBasisPoints_5009":{"entryPoint":2964,"id":5009,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_2383":{"entryPoint":8462,"id":2383,"parameterSlots":3,"returnSlots":1},"@functionCall_2337":{"entryPoint":8440,"id":2337,"parameterSlots":2,"returnSlots":1},"@getWithdrawEpoch_5431":{"entryPoint":4183,"id":5431,"parameterSlots":0,"returnSlots":1},"@maxDeposit_1470":{"entryPoint":2524,"id":1470,"parameterSlots":1,"returnSlots":1},"@maxMint_1485":{"entryPoint":3905,"id":1485,"parameterSlots":1,"returnSlots":1},"@maxRedeem_1516":{"entryPoint":4030,"id":1516,"parameterSlots":1,"returnSlots":1},"@maxWithdraw_1503":{"entryPoint":3967,"id":1503,"parameterSlots":1,"returnSlots":1},"@mint_5566":{"entryPoint":3012,"id":5566,"parameterSlots":2,"returnSlots":1},"@mulDiv_4225":{"entryPoint":7590,"id":4225,"parameterSlots":3,"returnSlots":1},"@mulDiv_4268":{"entryPoint":5928,"id":4268,"parameterSlots":4,"returnSlots":1},"@name_540":{"entryPoint":2118,"id":540,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":2970,"id":67,"parameterSlots":0,"returnSlots":1},"@previewDeposit_1532":{"entryPoint":5908,"id":1532,"parameterSlots":1,"returnSlots":1},"@previewDeposit_5060":{"entryPoint":4317,"id":5060,"parameterSlots":1,"returnSlots":1},"@previewMint_1548":{"entryPoint":5638,"id":1548,"parameterSlots":1,"returnSlots":1},"@previewMint_5085":{"entryPoint":3377,"id":5085,"parameterSlots":1,"returnSlots":1},"@previewRedeem_1580":{"entryPoint":5097,"id":1580,"parameterSlots":1,"returnSlots":1},"@previewRedeem_5135":{"entryPoint":2588,"id":5135,"parameterSlots":1,"returnSlots":1},"@previewWithdraw_1564":{"entryPoint":4680,"id":1564,"parameterSlots":1,"returnSlots":1},"@previewWithdraw_5110":{"entryPoint":2319,"id":5110,"parameterSlots":1,"returnSlots":1},"@redeem_5690":{"entryPoint":3663,"id":5690,"parameterSlots":3,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2944,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_2050":{"entryPoint":7899,"id":2050,"parameterSlots":4,"returnSlots":0},"@safeTransfer_2023":{"entryPoint":7206,"id":2023,"parameterSlots":3,"returnSlots":0},"@setDuration_5443":{"entryPoint":3298,"id":5443,"parameterSlots":1,"returnSlots":0},"@stakeDuration_5386":{"entryPoint":2566,"id":5386,"parameterSlots":0,"returnSlots":0},"@stakeTimeEpochMapping_5418":{"entryPoint":3995,"id":5418,"parameterSlots":0,"returnSlots":0},"@symbol_549":{"entryPoint":3152,"id":549,"parameterSlots":0,"returnSlots":1},"@totalAssets_1423":{"entryPoint":1957,"id":1423,"parameterSlots":0,"returnSlots":1},"@totalSupply_567":{"entryPoint":2369,"id":567,"parameterSlots":0,"returnSlots":1},"@transferFrom_677":{"entryPoint":2379,"id":677,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4367,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_604":{"entryPoint":3342,"id":604,"parameterSlots":2,"returnSlots":1},"@unsignedRoundsUp_4890":{"entryPoint":7853,"id":4890,"parameterSlots":1,"returnSlots":1},"@verifyCallResultFromTarget_2475":{"entryPoint":8667,"id":2475,"parameterSlots":3,"returnSlots":1},"@withdraw_5628":{"entryPoint":3427,"id":5628,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":9276,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":11306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9137,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":9785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9595,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9934,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9415,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9297,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":11327,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9158,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":10019,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":9698,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_address":{"entryPoint":9851,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint32":{"entryPoint":9806,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9553,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11394,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9_to_t_string_memory_ptr_fromStack":{"entryPoint":10498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8889,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":9656,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":9511,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":11443,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":11228,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11091,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10364,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10533,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11050,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":9671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":9526,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11372,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8931,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":11383,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8942,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10207,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint32":{"entryPoint":10565,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint8":{"entryPoint":10259,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":10634,"id":null,"parameterSlots":4,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":10928,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":10717,"id":null,"parameterSlots":3,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10312,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9235,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9361,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9203,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":9640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":9498,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":8959,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":10111,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint8":{"entryPoint":11179,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":10160,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":11003,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11132,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":10064,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9001,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_1_unsigned":{"entryPoint":10621,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9":{"entryPoint":10419,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":9253,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11283,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9114,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":9762,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:17545:25","nodeType":"YulBlock","src":"0:17545:25","statements":[{"body":{"nativeSrc":"52:32:25","nodeType":"YulBlock","src":"52:32:25","statements":[{"nativeSrc":"62:16:25","nodeType":"YulAssignment","src":"62:16:25","value":{"name":"value","nativeSrc":"73:5:25","nodeType":"YulIdentifier","src":"73:5:25"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:25","nodeType":"YulIdentifier","src":"62:7:25"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:25","nodeType":"YulTypedName","src":"34:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:25","nodeType":"YulTypedName","src":"44:7:25","type":""}],"src":"7:77:25"},{"body":{"nativeSrc":"155:53:25","nodeType":"YulBlock","src":"155:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:25","nodeType":"YulIdentifier","src":"172:3:25"},{"arguments":[{"name":"value","nativeSrc":"195:5:25","nodeType":"YulIdentifier","src":"195:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:25","nodeType":"YulIdentifier","src":"177:17:25"},"nativeSrc":"177:24:25","nodeType":"YulFunctionCall","src":"177:24:25"}],"functionName":{"name":"mstore","nativeSrc":"165:6:25","nodeType":"YulIdentifier","src":"165:6:25"},"nativeSrc":"165:37:25","nodeType":"YulFunctionCall","src":"165:37:25"},"nativeSrc":"165:37:25","nodeType":"YulExpressionStatement","src":"165:37:25"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:25","nodeType":"YulTypedName","src":"143:5:25","type":""},{"name":"pos","nativeSrc":"150:3:25","nodeType":"YulTypedName","src":"150:3:25","type":""}],"src":"90:118:25"},{"body":{"nativeSrc":"312:124:25","nodeType":"YulBlock","src":"312:124:25","statements":[{"nativeSrc":"322:26:25","nodeType":"YulAssignment","src":"322:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:25","nodeType":"YulIdentifier","src":"334:9:25"},{"kind":"number","nativeSrc":"345:2:25","nodeType":"YulLiteral","src":"345:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:25","nodeType":"YulIdentifier","src":"330:3:25"},"nativeSrc":"330:18:25","nodeType":"YulFunctionCall","src":"330:18:25"},"variableNames":[{"name":"tail","nativeSrc":"322:4:25","nodeType":"YulIdentifier","src":"322:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:25","nodeType":"YulIdentifier","src":"402:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:25","nodeType":"YulIdentifier","src":"415:9:25"},{"kind":"number","nativeSrc":"426:1:25","nodeType":"YulLiteral","src":"426:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:25","nodeType":"YulIdentifier","src":"411:3:25"},"nativeSrc":"411:17:25","nodeType":"YulFunctionCall","src":"411:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:25","nodeType":"YulIdentifier","src":"358:43:25"},"nativeSrc":"358:71:25","nodeType":"YulFunctionCall","src":"358:71:25"},"nativeSrc":"358:71:25","nodeType":"YulExpressionStatement","src":"358:71:25"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:25","nodeType":"YulTypedName","src":"284:9:25","type":""},{"name":"value0","nativeSrc":"296:6:25","nodeType":"YulTypedName","src":"296:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:25","nodeType":"YulTypedName","src":"307:4:25","type":""}],"src":"214:222:25"},{"body":{"nativeSrc":"501:40:25","nodeType":"YulBlock","src":"501:40:25","statements":[{"nativeSrc":"512:22:25","nodeType":"YulAssignment","src":"512:22:25","value":{"arguments":[{"name":"value","nativeSrc":"528:5:25","nodeType":"YulIdentifier","src":"528:5:25"}],"functionName":{"name":"mload","nativeSrc":"522:5:25","nodeType":"YulIdentifier","src":"522:5:25"},"nativeSrc":"522:12:25","nodeType":"YulFunctionCall","src":"522:12:25"},"variableNames":[{"name":"length","nativeSrc":"512:6:25","nodeType":"YulIdentifier","src":"512:6:25"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"442:99:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"484:5:25","nodeType":"YulTypedName","src":"484:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"494:6:25","nodeType":"YulTypedName","src":"494:6:25","type":""}],"src":"442:99:25"},{"body":{"nativeSrc":"643:73:25","nodeType":"YulBlock","src":"643:73:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"660:3:25","nodeType":"YulIdentifier","src":"660:3:25"},{"name":"length","nativeSrc":"665:6:25","nodeType":"YulIdentifier","src":"665:6:25"}],"functionName":{"name":"mstore","nativeSrc":"653:6:25","nodeType":"YulIdentifier","src":"653:6:25"},"nativeSrc":"653:19:25","nodeType":"YulFunctionCall","src":"653:19:25"},"nativeSrc":"653:19:25","nodeType":"YulExpressionStatement","src":"653:19:25"},{"nativeSrc":"681:29:25","nodeType":"YulAssignment","src":"681:29:25","value":{"arguments":[{"name":"pos","nativeSrc":"700:3:25","nodeType":"YulIdentifier","src":"700:3:25"},{"kind":"number","nativeSrc":"705:4:25","nodeType":"YulLiteral","src":"705:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"696:3:25","nodeType":"YulIdentifier","src":"696:3:25"},"nativeSrc":"696:14:25","nodeType":"YulFunctionCall","src":"696:14:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"681:11:25","nodeType":"YulIdentifier","src":"681:11:25"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"547:169:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"615:3:25","nodeType":"YulTypedName","src":"615:3:25","type":""},{"name":"length","nativeSrc":"620:6:25","nodeType":"YulTypedName","src":"620:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"631:11:25","nodeType":"YulTypedName","src":"631:11:25","type":""}],"src":"547:169:25"},{"body":{"nativeSrc":"784:184:25","nodeType":"YulBlock","src":"784:184:25","statements":[{"nativeSrc":"794:10:25","nodeType":"YulVariableDeclaration","src":"794:10:25","value":{"kind":"number","nativeSrc":"803:1:25","nodeType":"YulLiteral","src":"803:1:25","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"798:1:25","nodeType":"YulTypedName","src":"798:1:25","type":""}]},{"body":{"nativeSrc":"863:63:25","nodeType":"YulBlock","src":"863:63:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"888:3:25","nodeType":"YulIdentifier","src":"888:3:25"},{"name":"i","nativeSrc":"893:1:25","nodeType":"YulIdentifier","src":"893:1:25"}],"functionName":{"name":"add","nativeSrc":"884:3:25","nodeType":"YulIdentifier","src":"884:3:25"},"nativeSrc":"884:11:25","nodeType":"YulFunctionCall","src":"884:11:25"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"907:3:25","nodeType":"YulIdentifier","src":"907:3:25"},{"name":"i","nativeSrc":"912:1:25","nodeType":"YulIdentifier","src":"912:1:25"}],"functionName":{"name":"add","nativeSrc":"903:3:25","nodeType":"YulIdentifier","src":"903:3:25"},"nativeSrc":"903:11:25","nodeType":"YulFunctionCall","src":"903:11:25"}],"functionName":{"name":"mload","nativeSrc":"897:5:25","nodeType":"YulIdentifier","src":"897:5:25"},"nativeSrc":"897:18:25","nodeType":"YulFunctionCall","src":"897:18:25"}],"functionName":{"name":"mstore","nativeSrc":"877:6:25","nodeType":"YulIdentifier","src":"877:6:25"},"nativeSrc":"877:39:25","nodeType":"YulFunctionCall","src":"877:39:25"},"nativeSrc":"877:39:25","nodeType":"YulExpressionStatement","src":"877:39:25"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"824:1:25","nodeType":"YulIdentifier","src":"824:1:25"},{"name":"length","nativeSrc":"827:6:25","nodeType":"YulIdentifier","src":"827:6:25"}],"functionName":{"name":"lt","nativeSrc":"821:2:25","nodeType":"YulIdentifier","src":"821:2:25"},"nativeSrc":"821:13:25","nodeType":"YulFunctionCall","src":"821:13:25"},"nativeSrc":"813:113:25","nodeType":"YulForLoop","post":{"nativeSrc":"835:19:25","nodeType":"YulBlock","src":"835:19:25","statements":[{"nativeSrc":"837:15:25","nodeType":"YulAssignment","src":"837:15:25","value":{"arguments":[{"name":"i","nativeSrc":"846:1:25","nodeType":"YulIdentifier","src":"846:1:25"},{"kind":"number","nativeSrc":"849:2:25","nodeType":"YulLiteral","src":"849:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"842:3:25","nodeType":"YulIdentifier","src":"842:3:25"},"nativeSrc":"842:10:25","nodeType":"YulFunctionCall","src":"842:10:25"},"variableNames":[{"name":"i","nativeSrc":"837:1:25","nodeType":"YulIdentifier","src":"837:1:25"}]}]},"pre":{"nativeSrc":"817:3:25","nodeType":"YulBlock","src":"817:3:25","statements":[]},"src":"813:113:25"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"946:3:25","nodeType":"YulIdentifier","src":"946:3:25"},{"name":"length","nativeSrc":"951:6:25","nodeType":"YulIdentifier","src":"951:6:25"}],"functionName":{"name":"add","nativeSrc":"942:3:25","nodeType":"YulIdentifier","src":"942:3:25"},"nativeSrc":"942:16:25","nodeType":"YulFunctionCall","src":"942:16:25"},{"kind":"number","nativeSrc":"960:1:25","nodeType":"YulLiteral","src":"960:1:25","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"935:6:25","nodeType":"YulIdentifier","src":"935:6:25"},"nativeSrc":"935:27:25","nodeType":"YulFunctionCall","src":"935:27:25"},"nativeSrc":"935:27:25","nodeType":"YulExpressionStatement","src":"935:27:25"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"722:246:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"766:3:25","nodeType":"YulTypedName","src":"766:3:25","type":""},{"name":"dst","nativeSrc":"771:3:25","nodeType":"YulTypedName","src":"771:3:25","type":""},{"name":"length","nativeSrc":"776:6:25","nodeType":"YulTypedName","src":"776:6:25","type":""}],"src":"722:246:25"},{"body":{"nativeSrc":"1022:54:25","nodeType":"YulBlock","src":"1022:54:25","statements":[{"nativeSrc":"1032:38:25","nodeType":"YulAssignment","src":"1032:38:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1050:5:25","nodeType":"YulIdentifier","src":"1050:5:25"},{"kind":"number","nativeSrc":"1057:2:25","nodeType":"YulLiteral","src":"1057:2:25","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1046:3:25","nodeType":"YulIdentifier","src":"1046:3:25"},"nativeSrc":"1046:14:25","nodeType":"YulFunctionCall","src":"1046:14:25"},{"arguments":[{"kind":"number","nativeSrc":"1066:2:25","nodeType":"YulLiteral","src":"1066:2:25","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"1062:3:25","nodeType":"YulIdentifier","src":"1062:3:25"},"nativeSrc":"1062:7:25","nodeType":"YulFunctionCall","src":"1062:7:25"}],"functionName":{"name":"and","nativeSrc":"1042:3:25","nodeType":"YulIdentifier","src":"1042:3:25"},"nativeSrc":"1042:28:25","nodeType":"YulFunctionCall","src":"1042:28:25"},"variableNames":[{"name":"result","nativeSrc":"1032:6:25","nodeType":"YulIdentifier","src":"1032:6:25"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"974:102:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1005:5:25","nodeType":"YulTypedName","src":"1005:5:25","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1015:6:25","nodeType":"YulTypedName","src":"1015:6:25","type":""}],"src":"974:102:25"},{"body":{"nativeSrc":"1174:285:25","nodeType":"YulBlock","src":"1174:285:25","statements":[{"nativeSrc":"1184:53:25","nodeType":"YulVariableDeclaration","src":"1184:53:25","value":{"arguments":[{"name":"value","nativeSrc":"1231:5:25","nodeType":"YulIdentifier","src":"1231:5:25"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"1198:32:25","nodeType":"YulIdentifier","src":"1198:32:25"},"nativeSrc":"1198:39:25","nodeType":"YulFunctionCall","src":"1198:39:25"},"variables":[{"name":"length","nativeSrc":"1188:6:25","nodeType":"YulTypedName","src":"1188:6:25","type":""}]},{"nativeSrc":"1246:78:25","nodeType":"YulAssignment","src":"1246:78:25","value":{"arguments":[{"name":"pos","nativeSrc":"1312:3:25","nodeType":"YulIdentifier","src":"1312:3:25"},{"name":"length","nativeSrc":"1317:6:25","nodeType":"YulIdentifier","src":"1317:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1253:58:25","nodeType":"YulIdentifier","src":"1253:58:25"},"nativeSrc":"1253:71:25","nodeType":"YulFunctionCall","src":"1253:71:25"},"variableNames":[{"name":"pos","nativeSrc":"1246:3:25","nodeType":"YulIdentifier","src":"1246:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1372:5:25","nodeType":"YulIdentifier","src":"1372:5:25"},{"kind":"number","nativeSrc":"1379:4:25","nodeType":"YulLiteral","src":"1379:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1368:3:25","nodeType":"YulIdentifier","src":"1368:3:25"},"nativeSrc":"1368:16:25","nodeType":"YulFunctionCall","src":"1368:16:25"},{"name":"pos","nativeSrc":"1386:3:25","nodeType":"YulIdentifier","src":"1386:3:25"},{"name":"length","nativeSrc":"1391:6:25","nodeType":"YulIdentifier","src":"1391:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1333:34:25","nodeType":"YulIdentifier","src":"1333:34:25"},"nativeSrc":"1333:65:25","nodeType":"YulFunctionCall","src":"1333:65:25"},"nativeSrc":"1333:65:25","nodeType":"YulExpressionStatement","src":"1333:65:25"},{"nativeSrc":"1407:46:25","nodeType":"YulAssignment","src":"1407:46:25","value":{"arguments":[{"name":"pos","nativeSrc":"1418:3:25","nodeType":"YulIdentifier","src":"1418:3:25"},{"arguments":[{"name":"length","nativeSrc":"1445:6:25","nodeType":"YulIdentifier","src":"1445:6:25"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"1423:21:25","nodeType":"YulIdentifier","src":"1423:21:25"},"nativeSrc":"1423:29:25","nodeType":"YulFunctionCall","src":"1423:29:25"}],"functionName":{"name":"add","nativeSrc":"1414:3:25","nodeType":"YulIdentifier","src":"1414:3:25"},"nativeSrc":"1414:39:25","nodeType":"YulFunctionCall","src":"1414:39:25"},"variableNames":[{"name":"end","nativeSrc":"1407:3:25","nodeType":"YulIdentifier","src":"1407:3:25"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1082:377:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1155:5:25","nodeType":"YulTypedName","src":"1155:5:25","type":""},{"name":"pos","nativeSrc":"1162:3:25","nodeType":"YulTypedName","src":"1162:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1170:3:25","nodeType":"YulTypedName","src":"1170:3:25","type":""}],"src":"1082:377:25"},{"body":{"nativeSrc":"1583:195:25","nodeType":"YulBlock","src":"1583:195:25","statements":[{"nativeSrc":"1593:26:25","nodeType":"YulAssignment","src":"1593:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"1605:9:25","nodeType":"YulIdentifier","src":"1605:9:25"},{"kind":"number","nativeSrc":"1616:2:25","nodeType":"YulLiteral","src":"1616:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1601:3:25","nodeType":"YulIdentifier","src":"1601:3:25"},"nativeSrc":"1601:18:25","nodeType":"YulFunctionCall","src":"1601:18:25"},"variableNames":[{"name":"tail","nativeSrc":"1593:4:25","nodeType":"YulIdentifier","src":"1593:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1640:9:25","nodeType":"YulIdentifier","src":"1640:9:25"},{"kind":"number","nativeSrc":"1651:1:25","nodeType":"YulLiteral","src":"1651:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1636:3:25","nodeType":"YulIdentifier","src":"1636:3:25"},"nativeSrc":"1636:17:25","nodeType":"YulFunctionCall","src":"1636:17:25"},{"arguments":[{"name":"tail","nativeSrc":"1659:4:25","nodeType":"YulIdentifier","src":"1659:4:25"},{"name":"headStart","nativeSrc":"1665:9:25","nodeType":"YulIdentifier","src":"1665:9:25"}],"functionName":{"name":"sub","nativeSrc":"1655:3:25","nodeType":"YulIdentifier","src":"1655:3:25"},"nativeSrc":"1655:20:25","nodeType":"YulFunctionCall","src":"1655:20:25"}],"functionName":{"name":"mstore","nativeSrc":"1629:6:25","nodeType":"YulIdentifier","src":"1629:6:25"},"nativeSrc":"1629:47:25","nodeType":"YulFunctionCall","src":"1629:47:25"},"nativeSrc":"1629:47:25","nodeType":"YulExpressionStatement","src":"1629:47:25"},{"nativeSrc":"1685:86:25","nodeType":"YulAssignment","src":"1685:86:25","value":{"arguments":[{"name":"value0","nativeSrc":"1757:6:25","nodeType":"YulIdentifier","src":"1757:6:25"},{"name":"tail","nativeSrc":"1766:4:25","nodeType":"YulIdentifier","src":"1766:4:25"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1693:63:25","nodeType":"YulIdentifier","src":"1693:63:25"},"nativeSrc":"1693:78:25","nodeType":"YulFunctionCall","src":"1693:78:25"},"variableNames":[{"name":"tail","nativeSrc":"1685:4:25","nodeType":"YulIdentifier","src":"1685:4:25"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1465:313:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1555:9:25","nodeType":"YulTypedName","src":"1555:9:25","type":""},{"name":"value0","nativeSrc":"1567:6:25","nodeType":"YulTypedName","src":"1567:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1578:4:25","nodeType":"YulTypedName","src":"1578:4:25","type":""}],"src":"1465:313:25"},{"body":{"nativeSrc":"1824:35:25","nodeType":"YulBlock","src":"1824:35:25","statements":[{"nativeSrc":"1834:19:25","nodeType":"YulAssignment","src":"1834:19:25","value":{"arguments":[{"kind":"number","nativeSrc":"1850:2:25","nodeType":"YulLiteral","src":"1850:2:25","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1844:5:25","nodeType":"YulIdentifier","src":"1844:5:25"},"nativeSrc":"1844:9:25","nodeType":"YulFunctionCall","src":"1844:9:25"},"variableNames":[{"name":"memPtr","nativeSrc":"1834:6:25","nodeType":"YulIdentifier","src":"1834:6:25"}]}]},"name":"allocate_unbounded","nativeSrc":"1784:75:25","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1817:6:25","nodeType":"YulTypedName","src":"1817:6:25","type":""}],"src":"1784:75:25"},{"body":{"nativeSrc":"1954:28:25","nodeType":"YulBlock","src":"1954:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1971:1:25","nodeType":"YulLiteral","src":"1971:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"1974:1:25","nodeType":"YulLiteral","src":"1974:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1964:6:25","nodeType":"YulIdentifier","src":"1964:6:25"},"nativeSrc":"1964:12:25","nodeType":"YulFunctionCall","src":"1964:12:25"},"nativeSrc":"1964:12:25","nodeType":"YulExpressionStatement","src":"1964:12:25"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1865:117:25","nodeType":"YulFunctionDefinition","src":"1865:117:25"},{"body":{"nativeSrc":"2077:28:25","nodeType":"YulBlock","src":"2077:28:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2094:1:25","nodeType":"YulLiteral","src":"2094:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2097:1:25","nodeType":"YulLiteral","src":"2097:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2087:6:25","nodeType":"YulIdentifier","src":"2087:6:25"},"nativeSrc":"2087:12:25","nodeType":"YulFunctionCall","src":"2087:12:25"},"nativeSrc":"2087:12:25","nodeType":"YulExpressionStatement","src":"2087:12:25"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1988:117:25","nodeType":"YulFunctionDefinition","src":"1988:117:25"},{"body":{"nativeSrc":"2154:79:25","nodeType":"YulBlock","src":"2154:79:25","statements":[{"body":{"nativeSrc":"2211:16:25","nodeType":"YulBlock","src":"2211:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2220:1:25","nodeType":"YulLiteral","src":"2220:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"2223:1:25","nodeType":"YulLiteral","src":"2223:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2213:6:25","nodeType":"YulIdentifier","src":"2213:6:25"},"nativeSrc":"2213:12:25","nodeType":"YulFunctionCall","src":"2213:12:25"},"nativeSrc":"2213:12:25","nodeType":"YulExpressionStatement","src":"2213:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2177:5:25","nodeType":"YulIdentifier","src":"2177:5:25"},{"arguments":[{"name":"value","nativeSrc":"2202:5:25","nodeType":"YulIdentifier","src":"2202:5:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2184:17:25","nodeType":"YulIdentifier","src":"2184:17:25"},"nativeSrc":"2184:24:25","nodeType":"YulFunctionCall","src":"2184:24:25"}],"functionName":{"name":"eq","nativeSrc":"2174:2:25","nodeType":"YulIdentifier","src":"2174:2:25"},"nativeSrc":"2174:35:25","nodeType":"YulFunctionCall","src":"2174:35:25"}],"functionName":{"name":"iszero","nativeSrc":"2167:6:25","nodeType":"YulIdentifier","src":"2167:6:25"},"nativeSrc":"2167:43:25","nodeType":"YulFunctionCall","src":"2167:43:25"},"nativeSrc":"2164:63:25","nodeType":"YulIf","src":"2164:63:25"}]},"name":"validator_revert_t_uint256","nativeSrc":"2111:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2147:5:25","nodeType":"YulTypedName","src":"2147:5:25","type":""}],"src":"2111:122:25"},{"body":{"nativeSrc":"2291:87:25","nodeType":"YulBlock","src":"2291:87:25","statements":[{"nativeSrc":"2301:29:25","nodeType":"YulAssignment","src":"2301:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"2323:6:25","nodeType":"YulIdentifier","src":"2323:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"2310:12:25","nodeType":"YulIdentifier","src":"2310:12:25"},"nativeSrc":"2310:20:25","nodeType":"YulFunctionCall","src":"2310:20:25"},"variableNames":[{"name":"value","nativeSrc":"2301:5:25","nodeType":"YulIdentifier","src":"2301:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2366:5:25","nodeType":"YulIdentifier","src":"2366:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2339:26:25","nodeType":"YulIdentifier","src":"2339:26:25"},"nativeSrc":"2339:33:25","nodeType":"YulFunctionCall","src":"2339:33:25"},"nativeSrc":"2339:33:25","nodeType":"YulExpressionStatement","src":"2339:33:25"}]},"name":"abi_decode_t_uint256","nativeSrc":"2239:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2269:6:25","nodeType":"YulTypedName","src":"2269:6:25","type":""},{"name":"end","nativeSrc":"2277:3:25","nodeType":"YulTypedName","src":"2277:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2285:5:25","nodeType":"YulTypedName","src":"2285:5:25","type":""}],"src":"2239:139:25"},{"body":{"nativeSrc":"2450:263:25","nodeType":"YulBlock","src":"2450:263:25","statements":[{"body":{"nativeSrc":"2496:83:25","nodeType":"YulBlock","src":"2496:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2498:77:25","nodeType":"YulIdentifier","src":"2498:77:25"},"nativeSrc":"2498:79:25","nodeType":"YulFunctionCall","src":"2498:79:25"},"nativeSrc":"2498:79:25","nodeType":"YulExpressionStatement","src":"2498:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2471:7:25","nodeType":"YulIdentifier","src":"2471:7:25"},{"name":"headStart","nativeSrc":"2480:9:25","nodeType":"YulIdentifier","src":"2480:9:25"}],"functionName":{"name":"sub","nativeSrc":"2467:3:25","nodeType":"YulIdentifier","src":"2467:3:25"},"nativeSrc":"2467:23:25","nodeType":"YulFunctionCall","src":"2467:23:25"},{"kind":"number","nativeSrc":"2492:2:25","nodeType":"YulLiteral","src":"2492:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2463:3:25","nodeType":"YulIdentifier","src":"2463:3:25"},"nativeSrc":"2463:32:25","nodeType":"YulFunctionCall","src":"2463:32:25"},"nativeSrc":"2460:119:25","nodeType":"YulIf","src":"2460:119:25"},{"nativeSrc":"2589:117:25","nodeType":"YulBlock","src":"2589:117:25","statements":[{"nativeSrc":"2604:15:25","nodeType":"YulVariableDeclaration","src":"2604:15:25","value":{"kind":"number","nativeSrc":"2618:1:25","nodeType":"YulLiteral","src":"2618:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2608:6:25","nodeType":"YulTypedName","src":"2608:6:25","type":""}]},{"nativeSrc":"2633:63:25","nodeType":"YulAssignment","src":"2633:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2668:9:25","nodeType":"YulIdentifier","src":"2668:9:25"},{"name":"offset","nativeSrc":"2679:6:25","nodeType":"YulIdentifier","src":"2679:6:25"}],"functionName":{"name":"add","nativeSrc":"2664:3:25","nodeType":"YulIdentifier","src":"2664:3:25"},"nativeSrc":"2664:22:25","nodeType":"YulFunctionCall","src":"2664:22:25"},{"name":"dataEnd","nativeSrc":"2688:7:25","nodeType":"YulIdentifier","src":"2688:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2643:20:25","nodeType":"YulIdentifier","src":"2643:20:25"},"nativeSrc":"2643:53:25","nodeType":"YulFunctionCall","src":"2643:53:25"},"variableNames":[{"name":"value0","nativeSrc":"2633:6:25","nodeType":"YulIdentifier","src":"2633:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2384:329:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2420:9:25","nodeType":"YulTypedName","src":"2420:9:25","type":""},{"name":"dataEnd","nativeSrc":"2431:7:25","nodeType":"YulTypedName","src":"2431:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2443:6:25","nodeType":"YulTypedName","src":"2443:6:25","type":""}],"src":"2384:329:25"},{"body":{"nativeSrc":"2764:81:25","nodeType":"YulBlock","src":"2764:81:25","statements":[{"nativeSrc":"2774:65:25","nodeType":"YulAssignment","src":"2774:65:25","value":{"arguments":[{"name":"value","nativeSrc":"2789:5:25","nodeType":"YulIdentifier","src":"2789:5:25"},{"kind":"number","nativeSrc":"2796:42:25","nodeType":"YulLiteral","src":"2796:42:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2785:3:25","nodeType":"YulIdentifier","src":"2785:3:25"},"nativeSrc":"2785:54:25","nodeType":"YulFunctionCall","src":"2785:54:25"},"variableNames":[{"name":"cleaned","nativeSrc":"2774:7:25","nodeType":"YulIdentifier","src":"2774:7:25"}]}]},"name":"cleanup_t_uint160","nativeSrc":"2719:126:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2746:5:25","nodeType":"YulTypedName","src":"2746:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2756:7:25","nodeType":"YulTypedName","src":"2756:7:25","type":""}],"src":"2719:126:25"},{"body":{"nativeSrc":"2896:51:25","nodeType":"YulBlock","src":"2896:51:25","statements":[{"nativeSrc":"2906:35:25","nodeType":"YulAssignment","src":"2906:35:25","value":{"arguments":[{"name":"value","nativeSrc":"2935:5:25","nodeType":"YulIdentifier","src":"2935:5:25"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"2917:17:25","nodeType":"YulIdentifier","src":"2917:17:25"},"nativeSrc":"2917:24:25","nodeType":"YulFunctionCall","src":"2917:24:25"},"variableNames":[{"name":"cleaned","nativeSrc":"2906:7:25","nodeType":"YulIdentifier","src":"2906:7:25"}]}]},"name":"cleanup_t_address","nativeSrc":"2851:96:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2878:5:25","nodeType":"YulTypedName","src":"2878:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2888:7:25","nodeType":"YulTypedName","src":"2888:7:25","type":""}],"src":"2851:96:25"},{"body":{"nativeSrc":"2996:79:25","nodeType":"YulBlock","src":"2996:79:25","statements":[{"body":{"nativeSrc":"3053:16:25","nodeType":"YulBlock","src":"3053:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3062:1:25","nodeType":"YulLiteral","src":"3062:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"3065:1:25","nodeType":"YulLiteral","src":"3065:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3055:6:25","nodeType":"YulIdentifier","src":"3055:6:25"},"nativeSrc":"3055:12:25","nodeType":"YulFunctionCall","src":"3055:12:25"},"nativeSrc":"3055:12:25","nodeType":"YulExpressionStatement","src":"3055:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3019:5:25","nodeType":"YulIdentifier","src":"3019:5:25"},{"arguments":[{"name":"value","nativeSrc":"3044:5:25","nodeType":"YulIdentifier","src":"3044:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3026:17:25","nodeType":"YulIdentifier","src":"3026:17:25"},"nativeSrc":"3026:24:25","nodeType":"YulFunctionCall","src":"3026:24:25"}],"functionName":{"name":"eq","nativeSrc":"3016:2:25","nodeType":"YulIdentifier","src":"3016:2:25"},"nativeSrc":"3016:35:25","nodeType":"YulFunctionCall","src":"3016:35:25"}],"functionName":{"name":"iszero","nativeSrc":"3009:6:25","nodeType":"YulIdentifier","src":"3009:6:25"},"nativeSrc":"3009:43:25","nodeType":"YulFunctionCall","src":"3009:43:25"},"nativeSrc":"3006:63:25","nodeType":"YulIf","src":"3006:63:25"}]},"name":"validator_revert_t_address","nativeSrc":"2953:122:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2989:5:25","nodeType":"YulTypedName","src":"2989:5:25","type":""}],"src":"2953:122:25"},{"body":{"nativeSrc":"3133:87:25","nodeType":"YulBlock","src":"3133:87:25","statements":[{"nativeSrc":"3143:29:25","nodeType":"YulAssignment","src":"3143:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"3165:6:25","nodeType":"YulIdentifier","src":"3165:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"3152:12:25","nodeType":"YulIdentifier","src":"3152:12:25"},"nativeSrc":"3152:20:25","nodeType":"YulFunctionCall","src":"3152:20:25"},"variableNames":[{"name":"value","nativeSrc":"3143:5:25","nodeType":"YulIdentifier","src":"3143:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3208:5:25","nodeType":"YulIdentifier","src":"3208:5:25"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"3181:26:25","nodeType":"YulIdentifier","src":"3181:26:25"},"nativeSrc":"3181:33:25","nodeType":"YulFunctionCall","src":"3181:33:25"},"nativeSrc":"3181:33:25","nodeType":"YulExpressionStatement","src":"3181:33:25"}]},"name":"abi_decode_t_address","nativeSrc":"3081:139:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3111:6:25","nodeType":"YulTypedName","src":"3111:6:25","type":""},{"name":"end","nativeSrc":"3119:3:25","nodeType":"YulTypedName","src":"3119:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3127:5:25","nodeType":"YulTypedName","src":"3127:5:25","type":""}],"src":"3081:139:25"},{"body":{"nativeSrc":"3309:391:25","nodeType":"YulBlock","src":"3309:391:25","statements":[{"body":{"nativeSrc":"3355:83:25","nodeType":"YulBlock","src":"3355:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3357:77:25","nodeType":"YulIdentifier","src":"3357:77:25"},"nativeSrc":"3357:79:25","nodeType":"YulFunctionCall","src":"3357:79:25"},"nativeSrc":"3357:79:25","nodeType":"YulExpressionStatement","src":"3357:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3330:7:25","nodeType":"YulIdentifier","src":"3330:7:25"},{"name":"headStart","nativeSrc":"3339:9:25","nodeType":"YulIdentifier","src":"3339:9:25"}],"functionName":{"name":"sub","nativeSrc":"3326:3:25","nodeType":"YulIdentifier","src":"3326:3:25"},"nativeSrc":"3326:23:25","nodeType":"YulFunctionCall","src":"3326:23:25"},{"kind":"number","nativeSrc":"3351:2:25","nodeType":"YulLiteral","src":"3351:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3322:3:25","nodeType":"YulIdentifier","src":"3322:3:25"},"nativeSrc":"3322:32:25","nodeType":"YulFunctionCall","src":"3322:32:25"},"nativeSrc":"3319:119:25","nodeType":"YulIf","src":"3319:119:25"},{"nativeSrc":"3448:117:25","nodeType":"YulBlock","src":"3448:117:25","statements":[{"nativeSrc":"3463:15:25","nodeType":"YulVariableDeclaration","src":"3463:15:25","value":{"kind":"number","nativeSrc":"3477:1:25","nodeType":"YulLiteral","src":"3477:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3467:6:25","nodeType":"YulTypedName","src":"3467:6:25","type":""}]},{"nativeSrc":"3492:63:25","nodeType":"YulAssignment","src":"3492:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3527:9:25","nodeType":"YulIdentifier","src":"3527:9:25"},{"name":"offset","nativeSrc":"3538:6:25","nodeType":"YulIdentifier","src":"3538:6:25"}],"functionName":{"name":"add","nativeSrc":"3523:3:25","nodeType":"YulIdentifier","src":"3523:3:25"},"nativeSrc":"3523:22:25","nodeType":"YulFunctionCall","src":"3523:22:25"},{"name":"dataEnd","nativeSrc":"3547:7:25","nodeType":"YulIdentifier","src":"3547:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"3502:20:25","nodeType":"YulIdentifier","src":"3502:20:25"},"nativeSrc":"3502:53:25","nodeType":"YulFunctionCall","src":"3502:53:25"},"variableNames":[{"name":"value0","nativeSrc":"3492:6:25","nodeType":"YulIdentifier","src":"3492:6:25"}]}]},{"nativeSrc":"3575:118:25","nodeType":"YulBlock","src":"3575:118:25","statements":[{"nativeSrc":"3590:16:25","nodeType":"YulVariableDeclaration","src":"3590:16:25","value":{"kind":"number","nativeSrc":"3604:2:25","nodeType":"YulLiteral","src":"3604:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"3594:6:25","nodeType":"YulTypedName","src":"3594:6:25","type":""}]},{"nativeSrc":"3620:63:25","nodeType":"YulAssignment","src":"3620:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3655:9:25","nodeType":"YulIdentifier","src":"3655:9:25"},{"name":"offset","nativeSrc":"3666:6:25","nodeType":"YulIdentifier","src":"3666:6:25"}],"functionName":{"name":"add","nativeSrc":"3651:3:25","nodeType":"YulIdentifier","src":"3651:3:25"},"nativeSrc":"3651:22:25","nodeType":"YulFunctionCall","src":"3651:22:25"},{"name":"dataEnd","nativeSrc":"3675:7:25","nodeType":"YulIdentifier","src":"3675:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3630:20:25","nodeType":"YulIdentifier","src":"3630:20:25"},"nativeSrc":"3630:53:25","nodeType":"YulFunctionCall","src":"3630:53:25"},"variableNames":[{"name":"value1","nativeSrc":"3620:6:25","nodeType":"YulIdentifier","src":"3620:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"3226:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3271:9:25","nodeType":"YulTypedName","src":"3271:9:25","type":""},{"name":"dataEnd","nativeSrc":"3282:7:25","nodeType":"YulTypedName","src":"3282:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3294:6:25","nodeType":"YulTypedName","src":"3294:6:25","type":""},{"name":"value1","nativeSrc":"3302:6:25","nodeType":"YulTypedName","src":"3302:6:25","type":""}],"src":"3226:474:25"},{"body":{"nativeSrc":"3748:48:25","nodeType":"YulBlock","src":"3748:48:25","statements":[{"nativeSrc":"3758:32:25","nodeType":"YulAssignment","src":"3758:32:25","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3783:5:25","nodeType":"YulIdentifier","src":"3783:5:25"}],"functionName":{"name":"iszero","nativeSrc":"3776:6:25","nodeType":"YulIdentifier","src":"3776:6:25"},"nativeSrc":"3776:13:25","nodeType":"YulFunctionCall","src":"3776:13:25"}],"functionName":{"name":"iszero","nativeSrc":"3769:6:25","nodeType":"YulIdentifier","src":"3769:6:25"},"nativeSrc":"3769:21:25","nodeType":"YulFunctionCall","src":"3769:21:25"},"variableNames":[{"name":"cleaned","nativeSrc":"3758:7:25","nodeType":"YulIdentifier","src":"3758:7:25"}]}]},"name":"cleanup_t_bool","nativeSrc":"3706:90:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3730:5:25","nodeType":"YulTypedName","src":"3730:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3740:7:25","nodeType":"YulTypedName","src":"3740:7:25","type":""}],"src":"3706:90:25"},{"body":{"nativeSrc":"3861:50:25","nodeType":"YulBlock","src":"3861:50:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3878:3:25","nodeType":"YulIdentifier","src":"3878:3:25"},{"arguments":[{"name":"value","nativeSrc":"3898:5:25","nodeType":"YulIdentifier","src":"3898:5:25"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3883:14:25","nodeType":"YulIdentifier","src":"3883:14:25"},"nativeSrc":"3883:21:25","nodeType":"YulFunctionCall","src":"3883:21:25"}],"functionName":{"name":"mstore","nativeSrc":"3871:6:25","nodeType":"YulIdentifier","src":"3871:6:25"},"nativeSrc":"3871:34:25","nodeType":"YulFunctionCall","src":"3871:34:25"},"nativeSrc":"3871:34:25","nodeType":"YulExpressionStatement","src":"3871:34:25"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3802:109:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3849:5:25","nodeType":"YulTypedName","src":"3849:5:25","type":""},{"name":"pos","nativeSrc":"3856:3:25","nodeType":"YulTypedName","src":"3856:3:25","type":""}],"src":"3802:109:25"},{"body":{"nativeSrc":"4009:118:25","nodeType":"YulBlock","src":"4009:118:25","statements":[{"nativeSrc":"4019:26:25","nodeType":"YulAssignment","src":"4019:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:25","nodeType":"YulIdentifier","src":"4031:9:25"},{"kind":"number","nativeSrc":"4042:2:25","nodeType":"YulLiteral","src":"4042:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:25","nodeType":"YulIdentifier","src":"4027:3:25"},"nativeSrc":"4027:18:25","nodeType":"YulFunctionCall","src":"4027:18:25"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:25","nodeType":"YulIdentifier","src":"4019:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4093:6:25","nodeType":"YulIdentifier","src":"4093:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"4106:9:25","nodeType":"YulIdentifier","src":"4106:9:25"},{"kind":"number","nativeSrc":"4117:1:25","nodeType":"YulLiteral","src":"4117:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4102:3:25","nodeType":"YulIdentifier","src":"4102:3:25"},"nativeSrc":"4102:17:25","nodeType":"YulFunctionCall","src":"4102:17:25"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"4055:37:25","nodeType":"YulIdentifier","src":"4055:37:25"},"nativeSrc":"4055:65:25","nodeType":"YulFunctionCall","src":"4055:65:25"},"nativeSrc":"4055:65:25","nodeType":"YulExpressionStatement","src":"4055:65:25"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3917:210:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:25","nodeType":"YulTypedName","src":"3981:9:25","type":""},{"name":"value0","nativeSrc":"3993:6:25","nodeType":"YulTypedName","src":"3993:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:25","nodeType":"YulTypedName","src":"4004:4:25","type":""}],"src":"3917:210:25"},{"body":{"nativeSrc":"4233:519:25","nodeType":"YulBlock","src":"4233:519:25","statements":[{"body":{"nativeSrc":"4279:83:25","nodeType":"YulBlock","src":"4279:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4281:77:25","nodeType":"YulIdentifier","src":"4281:77:25"},"nativeSrc":"4281:79:25","nodeType":"YulFunctionCall","src":"4281:79:25"},"nativeSrc":"4281:79:25","nodeType":"YulExpressionStatement","src":"4281:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4254:7:25","nodeType":"YulIdentifier","src":"4254:7:25"},{"name":"headStart","nativeSrc":"4263:9:25","nodeType":"YulIdentifier","src":"4263:9:25"}],"functionName":{"name":"sub","nativeSrc":"4250:3:25","nodeType":"YulIdentifier","src":"4250:3:25"},"nativeSrc":"4250:23:25","nodeType":"YulFunctionCall","src":"4250:23:25"},{"kind":"number","nativeSrc":"4275:2:25","nodeType":"YulLiteral","src":"4275:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"4246:3:25","nodeType":"YulIdentifier","src":"4246:3:25"},"nativeSrc":"4246:32:25","nodeType":"YulFunctionCall","src":"4246:32:25"},"nativeSrc":"4243:119:25","nodeType":"YulIf","src":"4243:119:25"},{"nativeSrc":"4372:117:25","nodeType":"YulBlock","src":"4372:117:25","statements":[{"nativeSrc":"4387:15:25","nodeType":"YulVariableDeclaration","src":"4387:15:25","value":{"kind":"number","nativeSrc":"4401:1:25","nodeType":"YulLiteral","src":"4401:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4391:6:25","nodeType":"YulTypedName","src":"4391:6:25","type":""}]},{"nativeSrc":"4416:63:25","nodeType":"YulAssignment","src":"4416:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4451:9:25","nodeType":"YulIdentifier","src":"4451:9:25"},{"name":"offset","nativeSrc":"4462:6:25","nodeType":"YulIdentifier","src":"4462:6:25"}],"functionName":{"name":"add","nativeSrc":"4447:3:25","nodeType":"YulIdentifier","src":"4447:3:25"},"nativeSrc":"4447:22:25","nodeType":"YulFunctionCall","src":"4447:22:25"},{"name":"dataEnd","nativeSrc":"4471:7:25","nodeType":"YulIdentifier","src":"4471:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4426:20:25","nodeType":"YulIdentifier","src":"4426:20:25"},"nativeSrc":"4426:53:25","nodeType":"YulFunctionCall","src":"4426:53:25"},"variableNames":[{"name":"value0","nativeSrc":"4416:6:25","nodeType":"YulIdentifier","src":"4416:6:25"}]}]},{"nativeSrc":"4499:118:25","nodeType":"YulBlock","src":"4499:118:25","statements":[{"nativeSrc":"4514:16:25","nodeType":"YulVariableDeclaration","src":"4514:16:25","value":{"kind":"number","nativeSrc":"4528:2:25","nodeType":"YulLiteral","src":"4528:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4518:6:25","nodeType":"YulTypedName","src":"4518:6:25","type":""}]},{"nativeSrc":"4544:63:25","nodeType":"YulAssignment","src":"4544:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4579:9:25","nodeType":"YulIdentifier","src":"4579:9:25"},{"name":"offset","nativeSrc":"4590:6:25","nodeType":"YulIdentifier","src":"4590:6:25"}],"functionName":{"name":"add","nativeSrc":"4575:3:25","nodeType":"YulIdentifier","src":"4575:3:25"},"nativeSrc":"4575:22:25","nodeType":"YulFunctionCall","src":"4575:22:25"},{"name":"dataEnd","nativeSrc":"4599:7:25","nodeType":"YulIdentifier","src":"4599:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4554:20:25","nodeType":"YulIdentifier","src":"4554:20:25"},"nativeSrc":"4554:53:25","nodeType":"YulFunctionCall","src":"4554:53:25"},"variableNames":[{"name":"value1","nativeSrc":"4544:6:25","nodeType":"YulIdentifier","src":"4544:6:25"}]}]},{"nativeSrc":"4627:118:25","nodeType":"YulBlock","src":"4627:118:25","statements":[{"nativeSrc":"4642:16:25","nodeType":"YulVariableDeclaration","src":"4642:16:25","value":{"kind":"number","nativeSrc":"4656:2:25","nodeType":"YulLiteral","src":"4656:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4646:6:25","nodeType":"YulTypedName","src":"4646:6:25","type":""}]},{"nativeSrc":"4672:63:25","nodeType":"YulAssignment","src":"4672:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4707:9:25","nodeType":"YulIdentifier","src":"4707:9:25"},{"name":"offset","nativeSrc":"4718:6:25","nodeType":"YulIdentifier","src":"4718:6:25"}],"functionName":{"name":"add","nativeSrc":"4703:3:25","nodeType":"YulIdentifier","src":"4703:3:25"},"nativeSrc":"4703:22:25","nodeType":"YulFunctionCall","src":"4703:22:25"},{"name":"dataEnd","nativeSrc":"4727:7:25","nodeType":"YulIdentifier","src":"4727:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4682:20:25","nodeType":"YulIdentifier","src":"4682:20:25"},"nativeSrc":"4682:53:25","nodeType":"YulFunctionCall","src":"4682:53:25"},"variableNames":[{"name":"value2","nativeSrc":"4672:6:25","nodeType":"YulIdentifier","src":"4672:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4133:619:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4187:9:25","nodeType":"YulTypedName","src":"4187:9:25","type":""},{"name":"dataEnd","nativeSrc":"4198:7:25","nodeType":"YulTypedName","src":"4198:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4210:6:25","nodeType":"YulTypedName","src":"4210:6:25","type":""},{"name":"value1","nativeSrc":"4218:6:25","nodeType":"YulTypedName","src":"4218:6:25","type":""},{"name":"value2","nativeSrc":"4226:6:25","nodeType":"YulTypedName","src":"4226:6:25","type":""}],"src":"4133:619:25"},{"body":{"nativeSrc":"4801:43:25","nodeType":"YulBlock","src":"4801:43:25","statements":[{"nativeSrc":"4811:27:25","nodeType":"YulAssignment","src":"4811:27:25","value":{"arguments":[{"name":"value","nativeSrc":"4826:5:25","nodeType":"YulIdentifier","src":"4826:5:25"},{"kind":"number","nativeSrc":"4833:4:25","nodeType":"YulLiteral","src":"4833:4:25","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4822:3:25","nodeType":"YulIdentifier","src":"4822:3:25"},"nativeSrc":"4822:16:25","nodeType":"YulFunctionCall","src":"4822:16:25"},"variableNames":[{"name":"cleaned","nativeSrc":"4811:7:25","nodeType":"YulIdentifier","src":"4811:7:25"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4758:86:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4783:5:25","nodeType":"YulTypedName","src":"4783:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4793:7:25","nodeType":"YulTypedName","src":"4793:7:25","type":""}],"src":"4758:86:25"},{"body":{"nativeSrc":"4911:51:25","nodeType":"YulBlock","src":"4911:51:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4928:3:25","nodeType":"YulIdentifier","src":"4928:3:25"},{"arguments":[{"name":"value","nativeSrc":"4949:5:25","nodeType":"YulIdentifier","src":"4949:5:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4933:15:25","nodeType":"YulIdentifier","src":"4933:15:25"},"nativeSrc":"4933:22:25","nodeType":"YulFunctionCall","src":"4933:22:25"}],"functionName":{"name":"mstore","nativeSrc":"4921:6:25","nodeType":"YulIdentifier","src":"4921:6:25"},"nativeSrc":"4921:35:25","nodeType":"YulFunctionCall","src":"4921:35:25"},"nativeSrc":"4921:35:25","nodeType":"YulExpressionStatement","src":"4921:35:25"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4850:112:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4899:5:25","nodeType":"YulTypedName","src":"4899:5:25","type":""},{"name":"pos","nativeSrc":"4906:3:25","nodeType":"YulTypedName","src":"4906:3:25","type":""}],"src":"4850:112:25"},{"body":{"nativeSrc":"5062:120:25","nodeType":"YulBlock","src":"5062:120:25","statements":[{"nativeSrc":"5072:26:25","nodeType":"YulAssignment","src":"5072:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5084:9:25","nodeType":"YulIdentifier","src":"5084:9:25"},{"kind":"number","nativeSrc":"5095:2:25","nodeType":"YulLiteral","src":"5095:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5080:3:25","nodeType":"YulIdentifier","src":"5080:3:25"},"nativeSrc":"5080:18:25","nodeType":"YulFunctionCall","src":"5080:18:25"},"variableNames":[{"name":"tail","nativeSrc":"5072:4:25","nodeType":"YulIdentifier","src":"5072:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5148:6:25","nodeType":"YulIdentifier","src":"5148:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"5161:9:25","nodeType":"YulIdentifier","src":"5161:9:25"},{"kind":"number","nativeSrc":"5172:1:25","nodeType":"YulLiteral","src":"5172:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5157:3:25","nodeType":"YulIdentifier","src":"5157:3:25"},"nativeSrc":"5157:17:25","nodeType":"YulFunctionCall","src":"5157:17:25"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"5108:39:25","nodeType":"YulIdentifier","src":"5108:39:25"},"nativeSrc":"5108:67:25","nodeType":"YulFunctionCall","src":"5108:67:25"},"nativeSrc":"5108:67:25","nodeType":"YulExpressionStatement","src":"5108:67:25"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4968:214:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5034:9:25","nodeType":"YulTypedName","src":"5034:9:25","type":""},{"name":"value0","nativeSrc":"5046:6:25","nodeType":"YulTypedName","src":"5046:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5057:4:25","nodeType":"YulTypedName","src":"5057:4:25","type":""}],"src":"4968:214:25"},{"body":{"nativeSrc":"5253:53:25","nodeType":"YulBlock","src":"5253:53:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5270:3:25","nodeType":"YulIdentifier","src":"5270:3:25"},{"arguments":[{"name":"value","nativeSrc":"5293:5:25","nodeType":"YulIdentifier","src":"5293:5:25"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5275:17:25","nodeType":"YulIdentifier","src":"5275:17:25"},"nativeSrc":"5275:24:25","nodeType":"YulFunctionCall","src":"5275:24:25"}],"functionName":{"name":"mstore","nativeSrc":"5263:6:25","nodeType":"YulIdentifier","src":"5263:6:25"},"nativeSrc":"5263:37:25","nodeType":"YulFunctionCall","src":"5263:37:25"},"nativeSrc":"5263:37:25","nodeType":"YulExpressionStatement","src":"5263:37:25"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5188:118:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5241:5:25","nodeType":"YulTypedName","src":"5241:5:25","type":""},{"name":"pos","nativeSrc":"5248:3:25","nodeType":"YulTypedName","src":"5248:3:25","type":""}],"src":"5188:118:25"},{"body":{"nativeSrc":"5410:124:25","nodeType":"YulBlock","src":"5410:124:25","statements":[{"nativeSrc":"5420:26:25","nodeType":"YulAssignment","src":"5420:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"5432:9:25","nodeType":"YulIdentifier","src":"5432:9:25"},{"kind":"number","nativeSrc":"5443:2:25","nodeType":"YulLiteral","src":"5443:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5428:3:25","nodeType":"YulIdentifier","src":"5428:3:25"},"nativeSrc":"5428:18:25","nodeType":"YulFunctionCall","src":"5428:18:25"},"variableNames":[{"name":"tail","nativeSrc":"5420:4:25","nodeType":"YulIdentifier","src":"5420:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5500:6:25","nodeType":"YulIdentifier","src":"5500:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"5513:9:25","nodeType":"YulIdentifier","src":"5513:9:25"},{"kind":"number","nativeSrc":"5524:1:25","nodeType":"YulLiteral","src":"5524:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5509:3:25","nodeType":"YulIdentifier","src":"5509:3:25"},"nativeSrc":"5509:17:25","nodeType":"YulFunctionCall","src":"5509:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5456:43:25","nodeType":"YulIdentifier","src":"5456:43:25"},"nativeSrc":"5456:71:25","nodeType":"YulFunctionCall","src":"5456:71:25"},"nativeSrc":"5456:71:25","nodeType":"YulExpressionStatement","src":"5456:71:25"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5312:222:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5382:9:25","nodeType":"YulTypedName","src":"5382:9:25","type":""},{"name":"value0","nativeSrc":"5394:6:25","nodeType":"YulTypedName","src":"5394:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5405:4:25","nodeType":"YulTypedName","src":"5405:4:25","type":""}],"src":"5312:222:25"},{"body":{"nativeSrc":"5606:263:25","nodeType":"YulBlock","src":"5606:263:25","statements":[{"body":{"nativeSrc":"5652:83:25","nodeType":"YulBlock","src":"5652:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5654:77:25","nodeType":"YulIdentifier","src":"5654:77:25"},"nativeSrc":"5654:79:25","nodeType":"YulFunctionCall","src":"5654:79:25"},"nativeSrc":"5654:79:25","nodeType":"YulExpressionStatement","src":"5654:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5627:7:25","nodeType":"YulIdentifier","src":"5627:7:25"},{"name":"headStart","nativeSrc":"5636:9:25","nodeType":"YulIdentifier","src":"5636:9:25"}],"functionName":{"name":"sub","nativeSrc":"5623:3:25","nodeType":"YulIdentifier","src":"5623:3:25"},"nativeSrc":"5623:23:25","nodeType":"YulFunctionCall","src":"5623:23:25"},{"kind":"number","nativeSrc":"5648:2:25","nodeType":"YulLiteral","src":"5648:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5619:3:25","nodeType":"YulIdentifier","src":"5619:3:25"},"nativeSrc":"5619:32:25","nodeType":"YulFunctionCall","src":"5619:32:25"},"nativeSrc":"5616:119:25","nodeType":"YulIf","src":"5616:119:25"},{"nativeSrc":"5745:117:25","nodeType":"YulBlock","src":"5745:117:25","statements":[{"nativeSrc":"5760:15:25","nodeType":"YulVariableDeclaration","src":"5760:15:25","value":{"kind":"number","nativeSrc":"5774:1:25","nodeType":"YulLiteral","src":"5774:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5764:6:25","nodeType":"YulTypedName","src":"5764:6:25","type":""}]},{"nativeSrc":"5789:63:25","nodeType":"YulAssignment","src":"5789:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5824:9:25","nodeType":"YulIdentifier","src":"5824:9:25"},{"name":"offset","nativeSrc":"5835:6:25","nodeType":"YulIdentifier","src":"5835:6:25"}],"functionName":{"name":"add","nativeSrc":"5820:3:25","nodeType":"YulIdentifier","src":"5820:3:25"},"nativeSrc":"5820:22:25","nodeType":"YulFunctionCall","src":"5820:22:25"},{"name":"dataEnd","nativeSrc":"5844:7:25","nodeType":"YulIdentifier","src":"5844:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5799:20:25","nodeType":"YulIdentifier","src":"5799:20:25"},"nativeSrc":"5799:53:25","nodeType":"YulFunctionCall","src":"5799:53:25"},"variableNames":[{"name":"value0","nativeSrc":"5789:6:25","nodeType":"YulIdentifier","src":"5789:6:25"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5540:329:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5576:9:25","nodeType":"YulTypedName","src":"5576:9:25","type":""},{"name":"dataEnd","nativeSrc":"5587:7:25","nodeType":"YulTypedName","src":"5587:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5599:6:25","nodeType":"YulTypedName","src":"5599:6:25","type":""}],"src":"5540:329:25"},{"body":{"nativeSrc":"5919:49:25","nodeType":"YulBlock","src":"5919:49:25","statements":[{"nativeSrc":"5929:33:25","nodeType":"YulAssignment","src":"5929:33:25","value":{"arguments":[{"name":"value","nativeSrc":"5944:5:25","nodeType":"YulIdentifier","src":"5944:5:25"},{"kind":"number","nativeSrc":"5951:10:25","nodeType":"YulLiteral","src":"5951:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"5940:3:25","nodeType":"YulIdentifier","src":"5940:3:25"},"nativeSrc":"5940:22:25","nodeType":"YulFunctionCall","src":"5940:22:25"},"variableNames":[{"name":"cleaned","nativeSrc":"5929:7:25","nodeType":"YulIdentifier","src":"5929:7:25"}]}]},"name":"cleanup_t_uint32","nativeSrc":"5875:93:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5901:5:25","nodeType":"YulTypedName","src":"5901:5:25","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5911:7:25","nodeType":"YulTypedName","src":"5911:7:25","type":""}],"src":"5875:93:25"},{"body":{"nativeSrc":"6037:52:25","nodeType":"YulBlock","src":"6037:52:25","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6054:3:25","nodeType":"YulIdentifier","src":"6054:3:25"},{"arguments":[{"name":"value","nativeSrc":"6076:5:25","nodeType":"YulIdentifier","src":"6076:5:25"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"6059:16:25","nodeType":"YulIdentifier","src":"6059:16:25"},"nativeSrc":"6059:23:25","nodeType":"YulFunctionCall","src":"6059:23:25"}],"functionName":{"name":"mstore","nativeSrc":"6047:6:25","nodeType":"YulIdentifier","src":"6047:6:25"},"nativeSrc":"6047:36:25","nodeType":"YulFunctionCall","src":"6047:36:25"},"nativeSrc":"6047:36:25","nodeType":"YulExpressionStatement","src":"6047:36:25"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"5974:115:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6025:5:25","nodeType":"YulTypedName","src":"6025:5:25","type":""},{"name":"pos","nativeSrc":"6032:3:25","nodeType":"YulTypedName","src":"6032:3:25","type":""}],"src":"5974:115:25"},{"body":{"nativeSrc":"6191:122:25","nodeType":"YulBlock","src":"6191:122:25","statements":[{"nativeSrc":"6201:26:25","nodeType":"YulAssignment","src":"6201:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"6213:9:25","nodeType":"YulIdentifier","src":"6213:9:25"},{"kind":"number","nativeSrc":"6224:2:25","nodeType":"YulLiteral","src":"6224:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6209:3:25","nodeType":"YulIdentifier","src":"6209:3:25"},"nativeSrc":"6209:18:25","nodeType":"YulFunctionCall","src":"6209:18:25"},"variableNames":[{"name":"tail","nativeSrc":"6201:4:25","nodeType":"YulIdentifier","src":"6201:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6279:6:25","nodeType":"YulIdentifier","src":"6279:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"6292:9:25","nodeType":"YulIdentifier","src":"6292:9:25"},{"kind":"number","nativeSrc":"6303:1:25","nodeType":"YulLiteral","src":"6303:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6288:3:25","nodeType":"YulIdentifier","src":"6288:3:25"},"nativeSrc":"6288:17:25","nodeType":"YulFunctionCall","src":"6288:17:25"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"6237:41:25","nodeType":"YulIdentifier","src":"6237:41:25"},"nativeSrc":"6237:69:25","nodeType":"YulFunctionCall","src":"6237:69:25"},"nativeSrc":"6237:69:25","nodeType":"YulExpressionStatement","src":"6237:69:25"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"6095:218:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6163:9:25","nodeType":"YulTypedName","src":"6163:9:25","type":""},{"name":"value0","nativeSrc":"6175:6:25","nodeType":"YulTypedName","src":"6175:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6186:4:25","nodeType":"YulTypedName","src":"6186:4:25","type":""}],"src":"6095:218:25"},{"body":{"nativeSrc":"6402:391:25","nodeType":"YulBlock","src":"6402:391:25","statements":[{"body":{"nativeSrc":"6448:83:25","nodeType":"YulBlock","src":"6448:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6450:77:25","nodeType":"YulIdentifier","src":"6450:77:25"},"nativeSrc":"6450:79:25","nodeType":"YulFunctionCall","src":"6450:79:25"},"nativeSrc":"6450:79:25","nodeType":"YulExpressionStatement","src":"6450:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6423:7:25","nodeType":"YulIdentifier","src":"6423:7:25"},{"name":"headStart","nativeSrc":"6432:9:25","nodeType":"YulIdentifier","src":"6432:9:25"}],"functionName":{"name":"sub","nativeSrc":"6419:3:25","nodeType":"YulIdentifier","src":"6419:3:25"},"nativeSrc":"6419:23:25","nodeType":"YulFunctionCall","src":"6419:23:25"},{"kind":"number","nativeSrc":"6444:2:25","nodeType":"YulLiteral","src":"6444:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6415:3:25","nodeType":"YulIdentifier","src":"6415:3:25"},"nativeSrc":"6415:32:25","nodeType":"YulFunctionCall","src":"6415:32:25"},"nativeSrc":"6412:119:25","nodeType":"YulIf","src":"6412:119:25"},{"nativeSrc":"6541:117:25","nodeType":"YulBlock","src":"6541:117:25","statements":[{"nativeSrc":"6556:15:25","nodeType":"YulVariableDeclaration","src":"6556:15:25","value":{"kind":"number","nativeSrc":"6570:1:25","nodeType":"YulLiteral","src":"6570:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6560:6:25","nodeType":"YulTypedName","src":"6560:6:25","type":""}]},{"nativeSrc":"6585:63:25","nodeType":"YulAssignment","src":"6585:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6620:9:25","nodeType":"YulIdentifier","src":"6620:9:25"},{"name":"offset","nativeSrc":"6631:6:25","nodeType":"YulIdentifier","src":"6631:6:25"}],"functionName":{"name":"add","nativeSrc":"6616:3:25","nodeType":"YulIdentifier","src":"6616:3:25"},"nativeSrc":"6616:22:25","nodeType":"YulFunctionCall","src":"6616:22:25"},{"name":"dataEnd","nativeSrc":"6640:7:25","nodeType":"YulIdentifier","src":"6640:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"6595:20:25","nodeType":"YulIdentifier","src":"6595:20:25"},"nativeSrc":"6595:53:25","nodeType":"YulFunctionCall","src":"6595:53:25"},"variableNames":[{"name":"value0","nativeSrc":"6585:6:25","nodeType":"YulIdentifier","src":"6585:6:25"}]}]},{"nativeSrc":"6668:118:25","nodeType":"YulBlock","src":"6668:118:25","statements":[{"nativeSrc":"6683:16:25","nodeType":"YulVariableDeclaration","src":"6683:16:25","value":{"kind":"number","nativeSrc":"6697:2:25","nodeType":"YulLiteral","src":"6697:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6687:6:25","nodeType":"YulTypedName","src":"6687:6:25","type":""}]},{"nativeSrc":"6713:63:25","nodeType":"YulAssignment","src":"6713:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6748:9:25","nodeType":"YulIdentifier","src":"6748:9:25"},{"name":"offset","nativeSrc":"6759:6:25","nodeType":"YulIdentifier","src":"6759:6:25"}],"functionName":{"name":"add","nativeSrc":"6744:3:25","nodeType":"YulIdentifier","src":"6744:3:25"},"nativeSrc":"6744:22:25","nodeType":"YulFunctionCall","src":"6744:22:25"},{"name":"dataEnd","nativeSrc":"6768:7:25","nodeType":"YulIdentifier","src":"6768:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6723:20:25","nodeType":"YulIdentifier","src":"6723:20:25"},"nativeSrc":"6723:53:25","nodeType":"YulFunctionCall","src":"6723:53:25"},"variableNames":[{"name":"value1","nativeSrc":"6713:6:25","nodeType":"YulIdentifier","src":"6713:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"6319:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6364:9:25","nodeType":"YulTypedName","src":"6364:9:25","type":""},{"name":"dataEnd","nativeSrc":"6375:7:25","nodeType":"YulTypedName","src":"6375:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6387:6:25","nodeType":"YulTypedName","src":"6387:6:25","type":""},{"name":"value1","nativeSrc":"6395:6:25","nodeType":"YulTypedName","src":"6395:6:25","type":""}],"src":"6319:474:25"},{"body":{"nativeSrc":"6841:78:25","nodeType":"YulBlock","src":"6841:78:25","statements":[{"body":{"nativeSrc":"6897:16:25","nodeType":"YulBlock","src":"6897:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6906:1:25","nodeType":"YulLiteral","src":"6906:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"6909:1:25","nodeType":"YulLiteral","src":"6909:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6899:6:25","nodeType":"YulIdentifier","src":"6899:6:25"},"nativeSrc":"6899:12:25","nodeType":"YulFunctionCall","src":"6899:12:25"},"nativeSrc":"6899:12:25","nodeType":"YulExpressionStatement","src":"6899:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6864:5:25","nodeType":"YulIdentifier","src":"6864:5:25"},{"arguments":[{"name":"value","nativeSrc":"6888:5:25","nodeType":"YulIdentifier","src":"6888:5:25"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"6871:16:25","nodeType":"YulIdentifier","src":"6871:16:25"},"nativeSrc":"6871:23:25","nodeType":"YulFunctionCall","src":"6871:23:25"}],"functionName":{"name":"eq","nativeSrc":"6861:2:25","nodeType":"YulIdentifier","src":"6861:2:25"},"nativeSrc":"6861:34:25","nodeType":"YulFunctionCall","src":"6861:34:25"}],"functionName":{"name":"iszero","nativeSrc":"6854:6:25","nodeType":"YulIdentifier","src":"6854:6:25"},"nativeSrc":"6854:42:25","nodeType":"YulFunctionCall","src":"6854:42:25"},"nativeSrc":"6851:62:25","nodeType":"YulIf","src":"6851:62:25"}]},"name":"validator_revert_t_uint32","nativeSrc":"6799:120:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6834:5:25","nodeType":"YulTypedName","src":"6834:5:25","type":""}],"src":"6799:120:25"},{"body":{"nativeSrc":"6976:86:25","nodeType":"YulBlock","src":"6976:86:25","statements":[{"nativeSrc":"6986:29:25","nodeType":"YulAssignment","src":"6986:29:25","value":{"arguments":[{"name":"offset","nativeSrc":"7008:6:25","nodeType":"YulIdentifier","src":"7008:6:25"}],"functionName":{"name":"calldataload","nativeSrc":"6995:12:25","nodeType":"YulIdentifier","src":"6995:12:25"},"nativeSrc":"6995:20:25","nodeType":"YulFunctionCall","src":"6995:20:25"},"variableNames":[{"name":"value","nativeSrc":"6986:5:25","nodeType":"YulIdentifier","src":"6986:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7050:5:25","nodeType":"YulIdentifier","src":"7050:5:25"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"7024:25:25","nodeType":"YulIdentifier","src":"7024:25:25"},"nativeSrc":"7024:32:25","nodeType":"YulFunctionCall","src":"7024:32:25"},"nativeSrc":"7024:32:25","nodeType":"YulExpressionStatement","src":"7024:32:25"}]},"name":"abi_decode_t_uint32","nativeSrc":"6925:137:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"6954:6:25","nodeType":"YulTypedName","src":"6954:6:25","type":""},{"name":"end","nativeSrc":"6962:3:25","nodeType":"YulTypedName","src":"6962:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"6970:5:25","nodeType":"YulTypedName","src":"6970:5:25","type":""}],"src":"6925:137:25"},{"body":{"nativeSrc":"7133:262:25","nodeType":"YulBlock","src":"7133:262:25","statements":[{"body":{"nativeSrc":"7179:83:25","nodeType":"YulBlock","src":"7179:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7181:77:25","nodeType":"YulIdentifier","src":"7181:77:25"},"nativeSrc":"7181:79:25","nodeType":"YulFunctionCall","src":"7181:79:25"},"nativeSrc":"7181:79:25","nodeType":"YulExpressionStatement","src":"7181:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7154:7:25","nodeType":"YulIdentifier","src":"7154:7:25"},{"name":"headStart","nativeSrc":"7163:9:25","nodeType":"YulIdentifier","src":"7163:9:25"}],"functionName":{"name":"sub","nativeSrc":"7150:3:25","nodeType":"YulIdentifier","src":"7150:3:25"},"nativeSrc":"7150:23:25","nodeType":"YulFunctionCall","src":"7150:23:25"},{"kind":"number","nativeSrc":"7175:2:25","nodeType":"YulLiteral","src":"7175:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7146:3:25","nodeType":"YulIdentifier","src":"7146:3:25"},"nativeSrc":"7146:32:25","nodeType":"YulFunctionCall","src":"7146:32:25"},"nativeSrc":"7143:119:25","nodeType":"YulIf","src":"7143:119:25"},{"nativeSrc":"7272:116:25","nodeType":"YulBlock","src":"7272:116:25","statements":[{"nativeSrc":"7287:15:25","nodeType":"YulVariableDeclaration","src":"7287:15:25","value":{"kind":"number","nativeSrc":"7301:1:25","nodeType":"YulLiteral","src":"7301:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7291:6:25","nodeType":"YulTypedName","src":"7291:6:25","type":""}]},{"nativeSrc":"7316:62:25","nodeType":"YulAssignment","src":"7316:62:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7350:9:25","nodeType":"YulIdentifier","src":"7350:9:25"},{"name":"offset","nativeSrc":"7361:6:25","nodeType":"YulIdentifier","src":"7361:6:25"}],"functionName":{"name":"add","nativeSrc":"7346:3:25","nodeType":"YulIdentifier","src":"7346:3:25"},"nativeSrc":"7346:22:25","nodeType":"YulFunctionCall","src":"7346:22:25"},{"name":"dataEnd","nativeSrc":"7370:7:25","nodeType":"YulIdentifier","src":"7370:7:25"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"7326:19:25","nodeType":"YulIdentifier","src":"7326:19:25"},"nativeSrc":"7326:52:25","nodeType":"YulFunctionCall","src":"7326:52:25"},"variableNames":[{"name":"value0","nativeSrc":"7316:6:25","nodeType":"YulIdentifier","src":"7316:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint32","nativeSrc":"7068:327:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7103:9:25","nodeType":"YulTypedName","src":"7103:9:25","type":""},{"name":"dataEnd","nativeSrc":"7114:7:25","nodeType":"YulTypedName","src":"7114:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7126:6:25","nodeType":"YulTypedName","src":"7126:6:25","type":""}],"src":"7068:327:25"},{"body":{"nativeSrc":"7501:519:25","nodeType":"YulBlock","src":"7501:519:25","statements":[{"body":{"nativeSrc":"7547:83:25","nodeType":"YulBlock","src":"7547:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7549:77:25","nodeType":"YulIdentifier","src":"7549:77:25"},"nativeSrc":"7549:79:25","nodeType":"YulFunctionCall","src":"7549:79:25"},"nativeSrc":"7549:79:25","nodeType":"YulExpressionStatement","src":"7549:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7522:7:25","nodeType":"YulIdentifier","src":"7522:7:25"},{"name":"headStart","nativeSrc":"7531:9:25","nodeType":"YulIdentifier","src":"7531:9:25"}],"functionName":{"name":"sub","nativeSrc":"7518:3:25","nodeType":"YulIdentifier","src":"7518:3:25"},"nativeSrc":"7518:23:25","nodeType":"YulFunctionCall","src":"7518:23:25"},{"kind":"number","nativeSrc":"7543:2:25","nodeType":"YulLiteral","src":"7543:2:25","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"7514:3:25","nodeType":"YulIdentifier","src":"7514:3:25"},"nativeSrc":"7514:32:25","nodeType":"YulFunctionCall","src":"7514:32:25"},"nativeSrc":"7511:119:25","nodeType":"YulIf","src":"7511:119:25"},{"nativeSrc":"7640:117:25","nodeType":"YulBlock","src":"7640:117:25","statements":[{"nativeSrc":"7655:15:25","nodeType":"YulVariableDeclaration","src":"7655:15:25","value":{"kind":"number","nativeSrc":"7669:1:25","nodeType":"YulLiteral","src":"7669:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7659:6:25","nodeType":"YulTypedName","src":"7659:6:25","type":""}]},{"nativeSrc":"7684:63:25","nodeType":"YulAssignment","src":"7684:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7719:9:25","nodeType":"YulIdentifier","src":"7719:9:25"},{"name":"offset","nativeSrc":"7730:6:25","nodeType":"YulIdentifier","src":"7730:6:25"}],"functionName":{"name":"add","nativeSrc":"7715:3:25","nodeType":"YulIdentifier","src":"7715:3:25"},"nativeSrc":"7715:22:25","nodeType":"YulFunctionCall","src":"7715:22:25"},{"name":"dataEnd","nativeSrc":"7739:7:25","nodeType":"YulIdentifier","src":"7739:7:25"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"7694:20:25","nodeType":"YulIdentifier","src":"7694:20:25"},"nativeSrc":"7694:53:25","nodeType":"YulFunctionCall","src":"7694:53:25"},"variableNames":[{"name":"value0","nativeSrc":"7684:6:25","nodeType":"YulIdentifier","src":"7684:6:25"}]}]},{"nativeSrc":"7767:118:25","nodeType":"YulBlock","src":"7767:118:25","statements":[{"nativeSrc":"7782:16:25","nodeType":"YulVariableDeclaration","src":"7782:16:25","value":{"kind":"number","nativeSrc":"7796:2:25","nodeType":"YulLiteral","src":"7796:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"7786:6:25","nodeType":"YulTypedName","src":"7786:6:25","type":""}]},{"nativeSrc":"7812:63:25","nodeType":"YulAssignment","src":"7812:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7847:9:25","nodeType":"YulIdentifier","src":"7847:9:25"},{"name":"offset","nativeSrc":"7858:6:25","nodeType":"YulIdentifier","src":"7858:6:25"}],"functionName":{"name":"add","nativeSrc":"7843:3:25","nodeType":"YulIdentifier","src":"7843:3:25"},"nativeSrc":"7843:22:25","nodeType":"YulFunctionCall","src":"7843:22:25"},{"name":"dataEnd","nativeSrc":"7867:7:25","nodeType":"YulIdentifier","src":"7867:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7822:20:25","nodeType":"YulIdentifier","src":"7822:20:25"},"nativeSrc":"7822:53:25","nodeType":"YulFunctionCall","src":"7822:53:25"},"variableNames":[{"name":"value1","nativeSrc":"7812:6:25","nodeType":"YulIdentifier","src":"7812:6:25"}]}]},{"nativeSrc":"7895:118:25","nodeType":"YulBlock","src":"7895:118:25","statements":[{"nativeSrc":"7910:16:25","nodeType":"YulVariableDeclaration","src":"7910:16:25","value":{"kind":"number","nativeSrc":"7924:2:25","nodeType":"YulLiteral","src":"7924:2:25","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"7914:6:25","nodeType":"YulTypedName","src":"7914:6:25","type":""}]},{"nativeSrc":"7940:63:25","nodeType":"YulAssignment","src":"7940:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7975:9:25","nodeType":"YulIdentifier","src":"7975:9:25"},{"name":"offset","nativeSrc":"7986:6:25","nodeType":"YulIdentifier","src":"7986:6:25"}],"functionName":{"name":"add","nativeSrc":"7971:3:25","nodeType":"YulIdentifier","src":"7971:3:25"},"nativeSrc":"7971:22:25","nodeType":"YulFunctionCall","src":"7971:22:25"},{"name":"dataEnd","nativeSrc":"7995:7:25","nodeType":"YulIdentifier","src":"7995:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7950:20:25","nodeType":"YulIdentifier","src":"7950:20:25"},"nativeSrc":"7950:53:25","nodeType":"YulFunctionCall","src":"7950:53:25"},"variableNames":[{"name":"value2","nativeSrc":"7940:6:25","nodeType":"YulIdentifier","src":"7940:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_address","nativeSrc":"7401:619:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7455:9:25","nodeType":"YulTypedName","src":"7455:9:25","type":""},{"name":"dataEnd","nativeSrc":"7466:7:25","nodeType":"YulTypedName","src":"7466:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7478:6:25","nodeType":"YulTypedName","src":"7478:6:25","type":""},{"name":"value1","nativeSrc":"7486:6:25","nodeType":"YulTypedName","src":"7486:6:25","type":""},{"name":"value2","nativeSrc":"7494:6:25","nodeType":"YulTypedName","src":"7494:6:25","type":""}],"src":"7401:619:25"},{"body":{"nativeSrc":"8109:391:25","nodeType":"YulBlock","src":"8109:391:25","statements":[{"body":{"nativeSrc":"8155:83:25","nodeType":"YulBlock","src":"8155:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8157:77:25","nodeType":"YulIdentifier","src":"8157:77:25"},"nativeSrc":"8157:79:25","nodeType":"YulFunctionCall","src":"8157:79:25"},"nativeSrc":"8157:79:25","nodeType":"YulExpressionStatement","src":"8157:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8130:7:25","nodeType":"YulIdentifier","src":"8130:7:25"},{"name":"headStart","nativeSrc":"8139:9:25","nodeType":"YulIdentifier","src":"8139:9:25"}],"functionName":{"name":"sub","nativeSrc":"8126:3:25","nodeType":"YulIdentifier","src":"8126:3:25"},"nativeSrc":"8126:23:25","nodeType":"YulFunctionCall","src":"8126:23:25"},{"kind":"number","nativeSrc":"8151:2:25","nodeType":"YulLiteral","src":"8151:2:25","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8122:3:25","nodeType":"YulIdentifier","src":"8122:3:25"},"nativeSrc":"8122:32:25","nodeType":"YulFunctionCall","src":"8122:32:25"},"nativeSrc":"8119:119:25","nodeType":"YulIf","src":"8119:119:25"},{"nativeSrc":"8248:117:25","nodeType":"YulBlock","src":"8248:117:25","statements":[{"nativeSrc":"8263:15:25","nodeType":"YulVariableDeclaration","src":"8263:15:25","value":{"kind":"number","nativeSrc":"8277:1:25","nodeType":"YulLiteral","src":"8277:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8267:6:25","nodeType":"YulTypedName","src":"8267:6:25","type":""}]},{"nativeSrc":"8292:63:25","nodeType":"YulAssignment","src":"8292:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8327:9:25","nodeType":"YulIdentifier","src":"8327:9:25"},{"name":"offset","nativeSrc":"8338:6:25","nodeType":"YulIdentifier","src":"8338:6:25"}],"functionName":{"name":"add","nativeSrc":"8323:3:25","nodeType":"YulIdentifier","src":"8323:3:25"},"nativeSrc":"8323:22:25","nodeType":"YulFunctionCall","src":"8323:22:25"},{"name":"dataEnd","nativeSrc":"8347:7:25","nodeType":"YulIdentifier","src":"8347:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8302:20:25","nodeType":"YulIdentifier","src":"8302:20:25"},"nativeSrc":"8302:53:25","nodeType":"YulFunctionCall","src":"8302:53:25"},"variableNames":[{"name":"value0","nativeSrc":"8292:6:25","nodeType":"YulIdentifier","src":"8292:6:25"}]}]},{"nativeSrc":"8375:118:25","nodeType":"YulBlock","src":"8375:118:25","statements":[{"nativeSrc":"8390:16:25","nodeType":"YulVariableDeclaration","src":"8390:16:25","value":{"kind":"number","nativeSrc":"8404:2:25","nodeType":"YulLiteral","src":"8404:2:25","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8394:6:25","nodeType":"YulTypedName","src":"8394:6:25","type":""}]},{"nativeSrc":"8420:63:25","nodeType":"YulAssignment","src":"8420:63:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8455:9:25","nodeType":"YulIdentifier","src":"8455:9:25"},{"name":"offset","nativeSrc":"8466:6:25","nodeType":"YulIdentifier","src":"8466:6:25"}],"functionName":{"name":"add","nativeSrc":"8451:3:25","nodeType":"YulIdentifier","src":"8451:3:25"},"nativeSrc":"8451:22:25","nodeType":"YulFunctionCall","src":"8451:22:25"},{"name":"dataEnd","nativeSrc":"8475:7:25","nodeType":"YulIdentifier","src":"8475:7:25"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8430:20:25","nodeType":"YulIdentifier","src":"8430:20:25"},"nativeSrc":"8430:53:25","nodeType":"YulFunctionCall","src":"8430:53:25"},"variableNames":[{"name":"value1","nativeSrc":"8420:6:25","nodeType":"YulIdentifier","src":"8420:6:25"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"8026:474:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8071:9:25","nodeType":"YulTypedName","src":"8071:9:25","type":""},{"name":"dataEnd","nativeSrc":"8082:7:25","nodeType":"YulTypedName","src":"8082:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8094:6:25","nodeType":"YulTypedName","src":"8094:6:25","type":""},{"name":"value1","nativeSrc":"8102:6:25","nodeType":"YulTypedName","src":"8102:6:25","type":""}],"src":"8026:474:25"},{"body":{"nativeSrc":"8569:80:25","nodeType":"YulBlock","src":"8569:80:25","statements":[{"nativeSrc":"8579:22:25","nodeType":"YulAssignment","src":"8579:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"8594:6:25","nodeType":"YulIdentifier","src":"8594:6:25"}],"functionName":{"name":"mload","nativeSrc":"8588:5:25","nodeType":"YulIdentifier","src":"8588:5:25"},"nativeSrc":"8588:13:25","nodeType":"YulFunctionCall","src":"8588:13:25"},"variableNames":[{"name":"value","nativeSrc":"8579:5:25","nodeType":"YulIdentifier","src":"8579:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"8637:5:25","nodeType":"YulIdentifier","src":"8637:5:25"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"8610:26:25","nodeType":"YulIdentifier","src":"8610:26:25"},"nativeSrc":"8610:33:25","nodeType":"YulFunctionCall","src":"8610:33:25"},"nativeSrc":"8610:33:25","nodeType":"YulExpressionStatement","src":"8610:33:25"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"8506:143:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8547:6:25","nodeType":"YulTypedName","src":"8547:6:25","type":""},{"name":"end","nativeSrc":"8555:3:25","nodeType":"YulTypedName","src":"8555:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"8563:5:25","nodeType":"YulTypedName","src":"8563:5:25","type":""}],"src":"8506:143:25"},{"body":{"nativeSrc":"8732:274:25","nodeType":"YulBlock","src":"8732:274:25","statements":[{"body":{"nativeSrc":"8778:83:25","nodeType":"YulBlock","src":"8778:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8780:77:25","nodeType":"YulIdentifier","src":"8780:77:25"},"nativeSrc":"8780:79:25","nodeType":"YulFunctionCall","src":"8780:79:25"},"nativeSrc":"8780:79:25","nodeType":"YulExpressionStatement","src":"8780:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8753:7:25","nodeType":"YulIdentifier","src":"8753:7:25"},{"name":"headStart","nativeSrc":"8762:9:25","nodeType":"YulIdentifier","src":"8762:9:25"}],"functionName":{"name":"sub","nativeSrc":"8749:3:25","nodeType":"YulIdentifier","src":"8749:3:25"},"nativeSrc":"8749:23:25","nodeType":"YulFunctionCall","src":"8749:23:25"},{"kind":"number","nativeSrc":"8774:2:25","nodeType":"YulLiteral","src":"8774:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8745:3:25","nodeType":"YulIdentifier","src":"8745:3:25"},"nativeSrc":"8745:32:25","nodeType":"YulFunctionCall","src":"8745:32:25"},"nativeSrc":"8742:119:25","nodeType":"YulIf","src":"8742:119:25"},{"nativeSrc":"8871:128:25","nodeType":"YulBlock","src":"8871:128:25","statements":[{"nativeSrc":"8886:15:25","nodeType":"YulVariableDeclaration","src":"8886:15:25","value":{"kind":"number","nativeSrc":"8900:1:25","nodeType":"YulLiteral","src":"8900:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8890:6:25","nodeType":"YulTypedName","src":"8890:6:25","type":""}]},{"nativeSrc":"8915:74:25","nodeType":"YulAssignment","src":"8915:74:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8961:9:25","nodeType":"YulIdentifier","src":"8961:9:25"},{"name":"offset","nativeSrc":"8972:6:25","nodeType":"YulIdentifier","src":"8972:6:25"}],"functionName":{"name":"add","nativeSrc":"8957:3:25","nodeType":"YulIdentifier","src":"8957:3:25"},"nativeSrc":"8957:22:25","nodeType":"YulFunctionCall","src":"8957:22:25"},{"name":"dataEnd","nativeSrc":"8981:7:25","nodeType":"YulIdentifier","src":"8981:7:25"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"8925:31:25","nodeType":"YulIdentifier","src":"8925:31:25"},"nativeSrc":"8925:64:25","nodeType":"YulFunctionCall","src":"8925:64:25"},"variableNames":[{"name":"value0","nativeSrc":"8915:6:25","nodeType":"YulIdentifier","src":"8915:6:25"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"8655:351:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8702:9:25","nodeType":"YulTypedName","src":"8702:9:25","type":""},{"name":"dataEnd","nativeSrc":"8713:7:25","nodeType":"YulTypedName","src":"8713:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8725:6:25","nodeType":"YulTypedName","src":"8725:6:25","type":""}],"src":"8655:351:25"},{"body":{"nativeSrc":"9040:152:25","nodeType":"YulBlock","src":"9040:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9057:1:25","nodeType":"YulLiteral","src":"9057:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9060:77:25","nodeType":"YulLiteral","src":"9060:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9050:6:25","nodeType":"YulIdentifier","src":"9050:6:25"},"nativeSrc":"9050:88:25","nodeType":"YulFunctionCall","src":"9050:88:25"},"nativeSrc":"9050:88:25","nodeType":"YulExpressionStatement","src":"9050:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9154:1:25","nodeType":"YulLiteral","src":"9154:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"9157:4:25","nodeType":"YulLiteral","src":"9157:4:25","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9147:6:25","nodeType":"YulIdentifier","src":"9147:6:25"},"nativeSrc":"9147:15:25","nodeType":"YulFunctionCall","src":"9147:15:25"},"nativeSrc":"9147:15:25","nodeType":"YulExpressionStatement","src":"9147:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9178:1:25","nodeType":"YulLiteral","src":"9178:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9181:4:25","nodeType":"YulLiteral","src":"9181:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9171:6:25","nodeType":"YulIdentifier","src":"9171:6:25"},"nativeSrc":"9171:15:25","nodeType":"YulFunctionCall","src":"9171:15:25"},"nativeSrc":"9171:15:25","nodeType":"YulExpressionStatement","src":"9171:15:25"}]},"name":"panic_error_0x22","nativeSrc":"9012:180:25","nodeType":"YulFunctionDefinition","src":"9012:180:25"},{"body":{"nativeSrc":"9249:269:25","nodeType":"YulBlock","src":"9249:269:25","statements":[{"nativeSrc":"9259:22:25","nodeType":"YulAssignment","src":"9259:22:25","value":{"arguments":[{"name":"data","nativeSrc":"9273:4:25","nodeType":"YulIdentifier","src":"9273:4:25"},{"kind":"number","nativeSrc":"9279:1:25","nodeType":"YulLiteral","src":"9279:1:25","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"9269:3:25","nodeType":"YulIdentifier","src":"9269:3:25"},"nativeSrc":"9269:12:25","nodeType":"YulFunctionCall","src":"9269:12:25"},"variableNames":[{"name":"length","nativeSrc":"9259:6:25","nodeType":"YulIdentifier","src":"9259:6:25"}]},{"nativeSrc":"9290:38:25","nodeType":"YulVariableDeclaration","src":"9290:38:25","value":{"arguments":[{"name":"data","nativeSrc":"9320:4:25","nodeType":"YulIdentifier","src":"9320:4:25"},{"kind":"number","nativeSrc":"9326:1:25","nodeType":"YulLiteral","src":"9326:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"9316:3:25","nodeType":"YulIdentifier","src":"9316:3:25"},"nativeSrc":"9316:12:25","nodeType":"YulFunctionCall","src":"9316:12:25"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"9294:18:25","nodeType":"YulTypedName","src":"9294:18:25","type":""}]},{"body":{"nativeSrc":"9367:51:25","nodeType":"YulBlock","src":"9367:51:25","statements":[{"nativeSrc":"9381:27:25","nodeType":"YulAssignment","src":"9381:27:25","value":{"arguments":[{"name":"length","nativeSrc":"9395:6:25","nodeType":"YulIdentifier","src":"9395:6:25"},{"kind":"number","nativeSrc":"9403:4:25","nodeType":"YulLiteral","src":"9403:4:25","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9391:3:25","nodeType":"YulIdentifier","src":"9391:3:25"},"nativeSrc":"9391:17:25","nodeType":"YulFunctionCall","src":"9391:17:25"},"variableNames":[{"name":"length","nativeSrc":"9381:6:25","nodeType":"YulIdentifier","src":"9381:6:25"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9347:18:25","nodeType":"YulIdentifier","src":"9347:18:25"}],"functionName":{"name":"iszero","nativeSrc":"9340:6:25","nodeType":"YulIdentifier","src":"9340:6:25"},"nativeSrc":"9340:26:25","nodeType":"YulFunctionCall","src":"9340:26:25"},"nativeSrc":"9337:81:25","nodeType":"YulIf","src":"9337:81:25"},{"body":{"nativeSrc":"9470:42:25","nodeType":"YulBlock","src":"9470:42:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"9484:16:25","nodeType":"YulIdentifier","src":"9484:16:25"},"nativeSrc":"9484:18:25","nodeType":"YulFunctionCall","src":"9484:18:25"},"nativeSrc":"9484:18:25","nodeType":"YulExpressionStatement","src":"9484:18:25"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9434:18:25","nodeType":"YulIdentifier","src":"9434:18:25"},{"arguments":[{"name":"length","nativeSrc":"9457:6:25","nodeType":"YulIdentifier","src":"9457:6:25"},{"kind":"number","nativeSrc":"9465:2:25","nodeType":"YulLiteral","src":"9465:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9454:2:25","nodeType":"YulIdentifier","src":"9454:2:25"},"nativeSrc":"9454:14:25","nodeType":"YulFunctionCall","src":"9454:14:25"}],"functionName":{"name":"eq","nativeSrc":"9431:2:25","nodeType":"YulIdentifier","src":"9431:2:25"},"nativeSrc":"9431:38:25","nodeType":"YulFunctionCall","src":"9431:38:25"},"nativeSrc":"9428:84:25","nodeType":"YulIf","src":"9428:84:25"}]},"name":"extract_byte_array_length","nativeSrc":"9198:320:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"9233:4:25","nodeType":"YulTypedName","src":"9233:4:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9242:6:25","nodeType":"YulTypedName","src":"9242:6:25","type":""}],"src":"9198:320:25"},{"body":{"nativeSrc":"9552:152:25","nodeType":"YulBlock","src":"9552:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9569:1:25","nodeType":"YulLiteral","src":"9569:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9572:77:25","nodeType":"YulLiteral","src":"9572:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9562:6:25","nodeType":"YulIdentifier","src":"9562:6:25"},"nativeSrc":"9562:88:25","nodeType":"YulFunctionCall","src":"9562:88:25"},"nativeSrc":"9562:88:25","nodeType":"YulExpressionStatement","src":"9562:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9666:1:25","nodeType":"YulLiteral","src":"9666:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"9669:4:25","nodeType":"YulLiteral","src":"9669:4:25","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9659:6:25","nodeType":"YulIdentifier","src":"9659:6:25"},"nativeSrc":"9659:15:25","nodeType":"YulFunctionCall","src":"9659:15:25"},"nativeSrc":"9659:15:25","nodeType":"YulExpressionStatement","src":"9659:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9690:1:25","nodeType":"YulLiteral","src":"9690:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"9693:4:25","nodeType":"YulLiteral","src":"9693:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9683:6:25","nodeType":"YulIdentifier","src":"9683:6:25"},"nativeSrc":"9683:15:25","nodeType":"YulFunctionCall","src":"9683:15:25"},"nativeSrc":"9683:15:25","nodeType":"YulExpressionStatement","src":"9683:15:25"}]},"name":"panic_error_0x11","nativeSrc":"9524:180:25","nodeType":"YulFunctionDefinition","src":"9524:180:25"},{"body":{"nativeSrc":"9754:147:25","nodeType":"YulBlock","src":"9754:147:25","statements":[{"nativeSrc":"9764:25:25","nodeType":"YulAssignment","src":"9764:25:25","value":{"arguments":[{"name":"x","nativeSrc":"9787:1:25","nodeType":"YulIdentifier","src":"9787:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9769:17:25","nodeType":"YulIdentifier","src":"9769:17:25"},"nativeSrc":"9769:20:25","nodeType":"YulFunctionCall","src":"9769:20:25"},"variableNames":[{"name":"x","nativeSrc":"9764:1:25","nodeType":"YulIdentifier","src":"9764:1:25"}]},{"nativeSrc":"9798:25:25","nodeType":"YulAssignment","src":"9798:25:25","value":{"arguments":[{"name":"y","nativeSrc":"9821:1:25","nodeType":"YulIdentifier","src":"9821:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9803:17:25","nodeType":"YulIdentifier","src":"9803:17:25"},"nativeSrc":"9803:20:25","nodeType":"YulFunctionCall","src":"9803:20:25"},"variableNames":[{"name":"y","nativeSrc":"9798:1:25","nodeType":"YulIdentifier","src":"9798:1:25"}]},{"nativeSrc":"9832:16:25","nodeType":"YulAssignment","src":"9832:16:25","value":{"arguments":[{"name":"x","nativeSrc":"9843:1:25","nodeType":"YulIdentifier","src":"9843:1:25"},{"name":"y","nativeSrc":"9846:1:25","nodeType":"YulIdentifier","src":"9846:1:25"}],"functionName":{"name":"add","nativeSrc":"9839:3:25","nodeType":"YulIdentifier","src":"9839:3:25"},"nativeSrc":"9839:9:25","nodeType":"YulFunctionCall","src":"9839:9:25"},"variableNames":[{"name":"sum","nativeSrc":"9832:3:25","nodeType":"YulIdentifier","src":"9832:3:25"}]},{"body":{"nativeSrc":"9872:22:25","nodeType":"YulBlock","src":"9872:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9874:16:25","nodeType":"YulIdentifier","src":"9874:16:25"},"nativeSrc":"9874:18:25","nodeType":"YulFunctionCall","src":"9874:18:25"},"nativeSrc":"9874:18:25","nodeType":"YulExpressionStatement","src":"9874:18:25"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"9864:1:25","nodeType":"YulIdentifier","src":"9864:1:25"},{"name":"sum","nativeSrc":"9867:3:25","nodeType":"YulIdentifier","src":"9867:3:25"}],"functionName":{"name":"gt","nativeSrc":"9861:2:25","nodeType":"YulIdentifier","src":"9861:2:25"},"nativeSrc":"9861:10:25","nodeType":"YulFunctionCall","src":"9861:10:25"},"nativeSrc":"9858:36:25","nodeType":"YulIf","src":"9858:36:25"}]},"name":"checked_add_t_uint256","nativeSrc":"9710:191:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9741:1:25","nodeType":"YulTypedName","src":"9741:1:25","type":""},{"name":"y","nativeSrc":"9744:1:25","nodeType":"YulTypedName","src":"9744:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9750:3:25","nodeType":"YulTypedName","src":"9750:3:25","type":""}],"src":"9710:191:25"},{"body":{"nativeSrc":"9949:146:25","nodeType":"YulBlock","src":"9949:146:25","statements":[{"nativeSrc":"9959:23:25","nodeType":"YulAssignment","src":"9959:23:25","value":{"arguments":[{"name":"x","nativeSrc":"9980:1:25","nodeType":"YulIdentifier","src":"9980:1:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9964:15:25","nodeType":"YulIdentifier","src":"9964:15:25"},"nativeSrc":"9964:18:25","nodeType":"YulFunctionCall","src":"9964:18:25"},"variableNames":[{"name":"x","nativeSrc":"9959:1:25","nodeType":"YulIdentifier","src":"9959:1:25"}]},{"nativeSrc":"9991:23:25","nodeType":"YulAssignment","src":"9991:23:25","value":{"arguments":[{"name":"y","nativeSrc":"10012:1:25","nodeType":"YulIdentifier","src":"10012:1:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"9996:15:25","nodeType":"YulIdentifier","src":"9996:15:25"},"nativeSrc":"9996:18:25","nodeType":"YulFunctionCall","src":"9996:18:25"},"variableNames":[{"name":"y","nativeSrc":"9991:1:25","nodeType":"YulIdentifier","src":"9991:1:25"}]},{"nativeSrc":"10023:16:25","nodeType":"YulAssignment","src":"10023:16:25","value":{"arguments":[{"name":"x","nativeSrc":"10034:1:25","nodeType":"YulIdentifier","src":"10034:1:25"},{"name":"y","nativeSrc":"10037:1:25","nodeType":"YulIdentifier","src":"10037:1:25"}],"functionName":{"name":"add","nativeSrc":"10030:3:25","nodeType":"YulIdentifier","src":"10030:3:25"},"nativeSrc":"10030:9:25","nodeType":"YulFunctionCall","src":"10030:9:25"},"variableNames":[{"name":"sum","nativeSrc":"10023:3:25","nodeType":"YulIdentifier","src":"10023:3:25"}]},{"body":{"nativeSrc":"10066:22:25","nodeType":"YulBlock","src":"10066:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10068:16:25","nodeType":"YulIdentifier","src":"10068:16:25"},"nativeSrc":"10068:18:25","nodeType":"YulFunctionCall","src":"10068:18:25"},"nativeSrc":"10068:18:25","nodeType":"YulExpressionStatement","src":"10068:18:25"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"10055:3:25","nodeType":"YulIdentifier","src":"10055:3:25"},{"kind":"number","nativeSrc":"10060:4:25","nodeType":"YulLiteral","src":"10060:4:25","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"10052:2:25","nodeType":"YulIdentifier","src":"10052:2:25"},"nativeSrc":"10052:13:25","nodeType":"YulFunctionCall","src":"10052:13:25"},"nativeSrc":"10049:39:25","nodeType":"YulIf","src":"10049:39:25"}]},"name":"checked_add_t_uint8","nativeSrc":"9907:188:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9936:1:25","nodeType":"YulTypedName","src":"9936:1:25","type":""},{"name":"y","nativeSrc":"9939:1:25","nodeType":"YulTypedName","src":"9939:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9945:3:25","nodeType":"YulTypedName","src":"9945:3:25","type":""}],"src":"9907:188:25"},{"body":{"nativeSrc":"10146:149:25","nodeType":"YulBlock","src":"10146:149:25","statements":[{"nativeSrc":"10156:25:25","nodeType":"YulAssignment","src":"10156:25:25","value":{"arguments":[{"name":"x","nativeSrc":"10179:1:25","nodeType":"YulIdentifier","src":"10179:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10161:17:25","nodeType":"YulIdentifier","src":"10161:17:25"},"nativeSrc":"10161:20:25","nodeType":"YulFunctionCall","src":"10161:20:25"},"variableNames":[{"name":"x","nativeSrc":"10156:1:25","nodeType":"YulIdentifier","src":"10156:1:25"}]},{"nativeSrc":"10190:25:25","nodeType":"YulAssignment","src":"10190:25:25","value":{"arguments":[{"name":"y","nativeSrc":"10213:1:25","nodeType":"YulIdentifier","src":"10213:1:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10195:17:25","nodeType":"YulIdentifier","src":"10195:17:25"},"nativeSrc":"10195:20:25","nodeType":"YulFunctionCall","src":"10195:20:25"},"variableNames":[{"name":"y","nativeSrc":"10190:1:25","nodeType":"YulIdentifier","src":"10190:1:25"}]},{"nativeSrc":"10224:17:25","nodeType":"YulAssignment","src":"10224:17:25","value":{"arguments":[{"name":"x","nativeSrc":"10236:1:25","nodeType":"YulIdentifier","src":"10236:1:25"},{"name":"y","nativeSrc":"10239:1:25","nodeType":"YulIdentifier","src":"10239:1:25"}],"functionName":{"name":"sub","nativeSrc":"10232:3:25","nodeType":"YulIdentifier","src":"10232:3:25"},"nativeSrc":"10232:9:25","nodeType":"YulFunctionCall","src":"10232:9:25"},"variableNames":[{"name":"diff","nativeSrc":"10224:4:25","nodeType":"YulIdentifier","src":"10224:4:25"}]},{"body":{"nativeSrc":"10266:22:25","nodeType":"YulBlock","src":"10266:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10268:16:25","nodeType":"YulIdentifier","src":"10268:16:25"},"nativeSrc":"10268:18:25","nodeType":"YulFunctionCall","src":"10268:18:25"},"nativeSrc":"10268:18:25","nodeType":"YulExpressionStatement","src":"10268:18:25"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"10257:4:25","nodeType":"YulIdentifier","src":"10257:4:25"},{"name":"x","nativeSrc":"10263:1:25","nodeType":"YulIdentifier","src":"10263:1:25"}],"functionName":{"name":"gt","nativeSrc":"10254:2:25","nodeType":"YulIdentifier","src":"10254:2:25"},"nativeSrc":"10254:11:25","nodeType":"YulFunctionCall","src":"10254:11:25"},"nativeSrc":"10251:37:25","nodeType":"YulIf","src":"10251:37:25"}]},"name":"checked_sub_t_uint256","nativeSrc":"10101:194:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10132:1:25","nodeType":"YulTypedName","src":"10132:1:25","type":""},{"name":"y","nativeSrc":"10135:1:25","nodeType":"YulTypedName","src":"10135:1:25","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"10141:4:25","nodeType":"YulTypedName","src":"10141:4:25","type":""}],"src":"10101:194:25"},{"body":{"nativeSrc":"10455:288:25","nodeType":"YulBlock","src":"10455:288:25","statements":[{"nativeSrc":"10465:26:25","nodeType":"YulAssignment","src":"10465:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"10477:9:25","nodeType":"YulIdentifier","src":"10477:9:25"},{"kind":"number","nativeSrc":"10488:2:25","nodeType":"YulLiteral","src":"10488:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10473:3:25","nodeType":"YulIdentifier","src":"10473:3:25"},"nativeSrc":"10473:18:25","nodeType":"YulFunctionCall","src":"10473:18:25"},"variableNames":[{"name":"tail","nativeSrc":"10465:4:25","nodeType":"YulIdentifier","src":"10465:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10545:6:25","nodeType":"YulIdentifier","src":"10545:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"10558:9:25","nodeType":"YulIdentifier","src":"10558:9:25"},{"kind":"number","nativeSrc":"10569:1:25","nodeType":"YulLiteral","src":"10569:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10554:3:25","nodeType":"YulIdentifier","src":"10554:3:25"},"nativeSrc":"10554:17:25","nodeType":"YulFunctionCall","src":"10554:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10501:43:25","nodeType":"YulIdentifier","src":"10501:43:25"},"nativeSrc":"10501:71:25","nodeType":"YulFunctionCall","src":"10501:71:25"},"nativeSrc":"10501:71:25","nodeType":"YulExpressionStatement","src":"10501:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"10626:6:25","nodeType":"YulIdentifier","src":"10626:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"10639:9:25","nodeType":"YulIdentifier","src":"10639:9:25"},{"kind":"number","nativeSrc":"10650:2:25","nodeType":"YulLiteral","src":"10650:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10635:3:25","nodeType":"YulIdentifier","src":"10635:3:25"},"nativeSrc":"10635:18:25","nodeType":"YulFunctionCall","src":"10635:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10582:43:25","nodeType":"YulIdentifier","src":"10582:43:25"},"nativeSrc":"10582:72:25","nodeType":"YulFunctionCall","src":"10582:72:25"},"nativeSrc":"10582:72:25","nodeType":"YulExpressionStatement","src":"10582:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"10708:6:25","nodeType":"YulIdentifier","src":"10708:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"10721:9:25","nodeType":"YulIdentifier","src":"10721:9:25"},{"kind":"number","nativeSrc":"10732:2:25","nodeType":"YulLiteral","src":"10732:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10717:3:25","nodeType":"YulIdentifier","src":"10717:3:25"},"nativeSrc":"10717:18:25","nodeType":"YulFunctionCall","src":"10717:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"10664:43:25","nodeType":"YulIdentifier","src":"10664:43:25"},"nativeSrc":"10664:72:25","nodeType":"YulFunctionCall","src":"10664:72:25"},"nativeSrc":"10664:72:25","nodeType":"YulExpressionStatement","src":"10664:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"10301:442:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10411:9:25","nodeType":"YulTypedName","src":"10411:9:25","type":""},{"name":"value2","nativeSrc":"10423:6:25","nodeType":"YulTypedName","src":"10423:6:25","type":""},{"name":"value1","nativeSrc":"10431:6:25","nodeType":"YulTypedName","src":"10431:6:25","type":""},{"name":"value0","nativeSrc":"10439:6:25","nodeType":"YulTypedName","src":"10439:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10450:4:25","nodeType":"YulTypedName","src":"10450:4:25","type":""}],"src":"10301:442:25"},{"body":{"nativeSrc":"10855:145:25","nodeType":"YulBlock","src":"10855:145:25","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10877:6:25","nodeType":"YulIdentifier","src":"10877:6:25"},{"kind":"number","nativeSrc":"10885:1:25","nodeType":"YulLiteral","src":"10885:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10873:3:25","nodeType":"YulIdentifier","src":"10873:3:25"},"nativeSrc":"10873:14:25","nodeType":"YulFunctionCall","src":"10873:14:25"},{"hexValue":"4e6f7420656c696769626c65207269676874206e6f772c2066756e6473206361","kind":"string","nativeSrc":"10889:34:25","nodeType":"YulLiteral","src":"10889:34:25","type":"","value":"Not eligible right now, funds ca"}],"functionName":{"name":"mstore","nativeSrc":"10866:6:25","nodeType":"YulIdentifier","src":"10866:6:25"},"nativeSrc":"10866:58:25","nodeType":"YulFunctionCall","src":"10866:58:25"},"nativeSrc":"10866:58:25","nodeType":"YulExpressionStatement","src":"10866:58:25"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"10945:6:25","nodeType":"YulIdentifier","src":"10945:6:25"},{"kind":"number","nativeSrc":"10953:2:25","nodeType":"YulLiteral","src":"10953:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10941:3:25","nodeType":"YulIdentifier","src":"10941:3:25"},"nativeSrc":"10941:15:25","nodeType":"YulFunctionCall","src":"10941:15:25"},{"hexValue":"6e2062652072656465656d206166746572206c6f636b696e6720706572696f64","kind":"string","nativeSrc":"10958:34:25","nodeType":"YulLiteral","src":"10958:34:25","type":"","value":"n be redeem after locking period"}],"functionName":{"name":"mstore","nativeSrc":"10934:6:25","nodeType":"YulIdentifier","src":"10934:6:25"},"nativeSrc":"10934:59:25","nodeType":"YulFunctionCall","src":"10934:59:25"},"nativeSrc":"10934:59:25","nodeType":"YulExpressionStatement","src":"10934:59:25"}]},"name":"store_literal_in_memory_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9","nativeSrc":"10749:251:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10847:6:25","nodeType":"YulTypedName","src":"10847:6:25","type":""}],"src":"10749:251:25"},{"body":{"nativeSrc":"11152:220:25","nodeType":"YulBlock","src":"11152:220:25","statements":[{"nativeSrc":"11162:74:25","nodeType":"YulAssignment","src":"11162:74:25","value":{"arguments":[{"name":"pos","nativeSrc":"11228:3:25","nodeType":"YulIdentifier","src":"11228:3:25"},{"kind":"number","nativeSrc":"11233:2:25","nodeType":"YulLiteral","src":"11233:2:25","type":"","value":"64"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11169:58:25","nodeType":"YulIdentifier","src":"11169:58:25"},"nativeSrc":"11169:67:25","nodeType":"YulFunctionCall","src":"11169:67:25"},"variableNames":[{"name":"pos","nativeSrc":"11162:3:25","nodeType":"YulIdentifier","src":"11162:3:25"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11334:3:25","nodeType":"YulIdentifier","src":"11334:3:25"}],"functionName":{"name":"store_literal_in_memory_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9","nativeSrc":"11245:88:25","nodeType":"YulIdentifier","src":"11245:88:25"},"nativeSrc":"11245:93:25","nodeType":"YulFunctionCall","src":"11245:93:25"},"nativeSrc":"11245:93:25","nodeType":"YulExpressionStatement","src":"11245:93:25"},{"nativeSrc":"11347:19:25","nodeType":"YulAssignment","src":"11347:19:25","value":{"arguments":[{"name":"pos","nativeSrc":"11358:3:25","nodeType":"YulIdentifier","src":"11358:3:25"},{"kind":"number","nativeSrc":"11363:2:25","nodeType":"YulLiteral","src":"11363:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11354:3:25","nodeType":"YulIdentifier","src":"11354:3:25"},"nativeSrc":"11354:12:25","nodeType":"YulFunctionCall","src":"11354:12:25"},"variableNames":[{"name":"end","nativeSrc":"11347:3:25","nodeType":"YulIdentifier","src":"11347:3:25"}]}]},"name":"abi_encode_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9_to_t_string_memory_ptr_fromStack","nativeSrc":"11006:366:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11140:3:25","nodeType":"YulTypedName","src":"11140:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11148:3:25","nodeType":"YulTypedName","src":"11148:3:25","type":""}],"src":"11006:366:25"},{"body":{"nativeSrc":"11549:248:25","nodeType":"YulBlock","src":"11549:248:25","statements":[{"nativeSrc":"11559:26:25","nodeType":"YulAssignment","src":"11559:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"11571:9:25","nodeType":"YulIdentifier","src":"11571:9:25"},{"kind":"number","nativeSrc":"11582:2:25","nodeType":"YulLiteral","src":"11582:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11567:3:25","nodeType":"YulIdentifier","src":"11567:3:25"},"nativeSrc":"11567:18:25","nodeType":"YulFunctionCall","src":"11567:18:25"},"variableNames":[{"name":"tail","nativeSrc":"11559:4:25","nodeType":"YulIdentifier","src":"11559:4:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11606:9:25","nodeType":"YulIdentifier","src":"11606:9:25"},{"kind":"number","nativeSrc":"11617:1:25","nodeType":"YulLiteral","src":"11617:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11602:3:25","nodeType":"YulIdentifier","src":"11602:3:25"},"nativeSrc":"11602:17:25","nodeType":"YulFunctionCall","src":"11602:17:25"},{"arguments":[{"name":"tail","nativeSrc":"11625:4:25","nodeType":"YulIdentifier","src":"11625:4:25"},{"name":"headStart","nativeSrc":"11631:9:25","nodeType":"YulIdentifier","src":"11631:9:25"}],"functionName":{"name":"sub","nativeSrc":"11621:3:25","nodeType":"YulIdentifier","src":"11621:3:25"},"nativeSrc":"11621:20:25","nodeType":"YulFunctionCall","src":"11621:20:25"}],"functionName":{"name":"mstore","nativeSrc":"11595:6:25","nodeType":"YulIdentifier","src":"11595:6:25"},"nativeSrc":"11595:47:25","nodeType":"YulFunctionCall","src":"11595:47:25"},"nativeSrc":"11595:47:25","nodeType":"YulExpressionStatement","src":"11595:47:25"},{"nativeSrc":"11651:139:25","nodeType":"YulAssignment","src":"11651:139:25","value":{"arguments":[{"name":"tail","nativeSrc":"11785:4:25","nodeType":"YulIdentifier","src":"11785:4:25"}],"functionName":{"name":"abi_encode_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9_to_t_string_memory_ptr_fromStack","nativeSrc":"11659:124:25","nodeType":"YulIdentifier","src":"11659:124:25"},"nativeSrc":"11659:131:25","nodeType":"YulFunctionCall","src":"11659:131:25"},"variableNames":[{"name":"tail","nativeSrc":"11651:4:25","nodeType":"YulIdentifier","src":"11651:4:25"}]}]},"name":"abi_encode_tuple_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11378:419:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11529:9:25","nodeType":"YulTypedName","src":"11529:9:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11544:4:25","nodeType":"YulTypedName","src":"11544:4:25","type":""}],"src":"11378:419:25"},{"body":{"nativeSrc":"11846:154:25","nodeType":"YulBlock","src":"11846:154:25","statements":[{"nativeSrc":"11856:24:25","nodeType":"YulAssignment","src":"11856:24:25","value":{"arguments":[{"name":"x","nativeSrc":"11878:1:25","nodeType":"YulIdentifier","src":"11878:1:25"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"11861:16:25","nodeType":"YulIdentifier","src":"11861:16:25"},"nativeSrc":"11861:19:25","nodeType":"YulFunctionCall","src":"11861:19:25"},"variableNames":[{"name":"x","nativeSrc":"11856:1:25","nodeType":"YulIdentifier","src":"11856:1:25"}]},{"nativeSrc":"11889:24:25","nodeType":"YulAssignment","src":"11889:24:25","value":{"arguments":[{"name":"y","nativeSrc":"11911:1:25","nodeType":"YulIdentifier","src":"11911:1:25"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"11894:16:25","nodeType":"YulIdentifier","src":"11894:16:25"},"nativeSrc":"11894:19:25","nodeType":"YulFunctionCall","src":"11894:19:25"},"variableNames":[{"name":"y","nativeSrc":"11889:1:25","nodeType":"YulIdentifier","src":"11889:1:25"}]},{"nativeSrc":"11922:16:25","nodeType":"YulAssignment","src":"11922:16:25","value":{"arguments":[{"name":"x","nativeSrc":"11933:1:25","nodeType":"YulIdentifier","src":"11933:1:25"},{"name":"y","nativeSrc":"11936:1:25","nodeType":"YulIdentifier","src":"11936:1:25"}],"functionName":{"name":"add","nativeSrc":"11929:3:25","nodeType":"YulIdentifier","src":"11929:3:25"},"nativeSrc":"11929:9:25","nodeType":"YulFunctionCall","src":"11929:9:25"},"variableNames":[{"name":"sum","nativeSrc":"11922:3:25","nodeType":"YulIdentifier","src":"11922:3:25"}]},{"body":{"nativeSrc":"11971:22:25","nodeType":"YulBlock","src":"11971:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11973:16:25","nodeType":"YulIdentifier","src":"11973:16:25"},"nativeSrc":"11973:18:25","nodeType":"YulFunctionCall","src":"11973:18:25"},"nativeSrc":"11973:18:25","nodeType":"YulExpressionStatement","src":"11973:18:25"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"11954:3:25","nodeType":"YulIdentifier","src":"11954:3:25"},{"kind":"number","nativeSrc":"11959:10:25","nodeType":"YulLiteral","src":"11959:10:25","type":"","value":"0xffffffff"}],"functionName":{"name":"gt","nativeSrc":"11951:2:25","nodeType":"YulIdentifier","src":"11951:2:25"},"nativeSrc":"11951:19:25","nodeType":"YulFunctionCall","src":"11951:19:25"},"nativeSrc":"11948:45:25","nodeType":"YulIf","src":"11948:45:25"}]},"name":"checked_add_t_uint32","nativeSrc":"11803:197:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11833:1:25","nodeType":"YulTypedName","src":"11833:1:25","type":""},{"name":"y","nativeSrc":"11836:1:25","nodeType":"YulTypedName","src":"11836:1:25","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"11842:3:25","nodeType":"YulTypedName","src":"11842:3:25","type":""}],"src":"11803:197:25"},{"body":{"nativeSrc":"12057:51:25","nodeType":"YulBlock","src":"12057:51:25","statements":[{"nativeSrc":"12067:34:25","nodeType":"YulAssignment","src":"12067:34:25","value":{"arguments":[{"kind":"number","nativeSrc":"12092:1:25","nodeType":"YulLiteral","src":"12092:1:25","type":"","value":"1"},{"name":"value","nativeSrc":"12095:5:25","nodeType":"YulIdentifier","src":"12095:5:25"}],"functionName":{"name":"shr","nativeSrc":"12088:3:25","nodeType":"YulIdentifier","src":"12088:3:25"},"nativeSrc":"12088:13:25","nodeType":"YulFunctionCall","src":"12088:13:25"},"variableNames":[{"name":"newValue","nativeSrc":"12067:8:25","nodeType":"YulIdentifier","src":"12067:8:25"}]}]},"name":"shift_right_1_unsigned","nativeSrc":"12006:102:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12038:5:25","nodeType":"YulTypedName","src":"12038:5:25","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"12048:8:25","nodeType":"YulTypedName","src":"12048:8:25","type":""}],"src":"12006:102:25"},{"body":{"nativeSrc":"12187:775:25","nodeType":"YulBlock","src":"12187:775:25","statements":[{"nativeSrc":"12197:15:25","nodeType":"YulAssignment","src":"12197:15:25","value":{"name":"_power","nativeSrc":"12206:6:25","nodeType":"YulIdentifier","src":"12206:6:25"},"variableNames":[{"name":"power","nativeSrc":"12197:5:25","nodeType":"YulIdentifier","src":"12197:5:25"}]},{"nativeSrc":"12221:14:25","nodeType":"YulAssignment","src":"12221:14:25","value":{"name":"_base","nativeSrc":"12230:5:25","nodeType":"YulIdentifier","src":"12230:5:25"},"variableNames":[{"name":"base","nativeSrc":"12221:4:25","nodeType":"YulIdentifier","src":"12221:4:25"}]},{"body":{"nativeSrc":"12279:677:25","nodeType":"YulBlock","src":"12279:677:25","statements":[{"body":{"nativeSrc":"12367:22:25","nodeType":"YulBlock","src":"12367:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12369:16:25","nodeType":"YulIdentifier","src":"12369:16:25"},"nativeSrc":"12369:18:25","nodeType":"YulFunctionCall","src":"12369:18:25"},"nativeSrc":"12369:18:25","nodeType":"YulExpressionStatement","src":"12369:18:25"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"12345:4:25","nodeType":"YulIdentifier","src":"12345:4:25"},{"arguments":[{"name":"max","nativeSrc":"12355:3:25","nodeType":"YulIdentifier","src":"12355:3:25"},{"name":"base","nativeSrc":"12360:4:25","nodeType":"YulIdentifier","src":"12360:4:25"}],"functionName":{"name":"div","nativeSrc":"12351:3:25","nodeType":"YulIdentifier","src":"12351:3:25"},"nativeSrc":"12351:14:25","nodeType":"YulFunctionCall","src":"12351:14:25"}],"functionName":{"name":"gt","nativeSrc":"12342:2:25","nodeType":"YulIdentifier","src":"12342:2:25"},"nativeSrc":"12342:24:25","nodeType":"YulFunctionCall","src":"12342:24:25"},"nativeSrc":"12339:50:25","nodeType":"YulIf","src":"12339:50:25"},{"body":{"nativeSrc":"12434:419:25","nodeType":"YulBlock","src":"12434:419:25","statements":[{"nativeSrc":"12814:25:25","nodeType":"YulAssignment","src":"12814:25:25","value":{"arguments":[{"name":"power","nativeSrc":"12827:5:25","nodeType":"YulIdentifier","src":"12827:5:25"},{"name":"base","nativeSrc":"12834:4:25","nodeType":"YulIdentifier","src":"12834:4:25"}],"functionName":{"name":"mul","nativeSrc":"12823:3:25","nodeType":"YulIdentifier","src":"12823:3:25"},"nativeSrc":"12823:16:25","nodeType":"YulFunctionCall","src":"12823:16:25"},"variableNames":[{"name":"power","nativeSrc":"12814:5:25","nodeType":"YulIdentifier","src":"12814:5:25"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12409:8:25","nodeType":"YulIdentifier","src":"12409:8:25"},{"kind":"number","nativeSrc":"12419:1:25","nodeType":"YulLiteral","src":"12419:1:25","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12405:3:25","nodeType":"YulIdentifier","src":"12405:3:25"},"nativeSrc":"12405:16:25","nodeType":"YulFunctionCall","src":"12405:16:25"},"nativeSrc":"12402:451:25","nodeType":"YulIf","src":"12402:451:25"},{"nativeSrc":"12866:23:25","nodeType":"YulAssignment","src":"12866:23:25","value":{"arguments":[{"name":"base","nativeSrc":"12878:4:25","nodeType":"YulIdentifier","src":"12878:4:25"},{"name":"base","nativeSrc":"12884:4:25","nodeType":"YulIdentifier","src":"12884:4:25"}],"functionName":{"name":"mul","nativeSrc":"12874:3:25","nodeType":"YulIdentifier","src":"12874:3:25"},"nativeSrc":"12874:15:25","nodeType":"YulFunctionCall","src":"12874:15:25"},"variableNames":[{"name":"base","nativeSrc":"12866:4:25","nodeType":"YulIdentifier","src":"12866:4:25"}]},{"nativeSrc":"12902:44:25","nodeType":"YulAssignment","src":"12902:44:25","value":{"arguments":[{"name":"exponent","nativeSrc":"12937:8:25","nodeType":"YulIdentifier","src":"12937:8:25"}],"functionName":{"name":"shift_right_1_unsigned","nativeSrc":"12914:22:25","nodeType":"YulIdentifier","src":"12914:22:25"},"nativeSrc":"12914:32:25","nodeType":"YulFunctionCall","src":"12914:32:25"},"variableNames":[{"name":"exponent","nativeSrc":"12902:8:25","nodeType":"YulIdentifier","src":"12902:8:25"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12255:8:25","nodeType":"YulIdentifier","src":"12255:8:25"},{"kind":"number","nativeSrc":"12265:1:25","nodeType":"YulLiteral","src":"12265:1:25","type":"","value":"1"}],"functionName":{"name":"gt","nativeSrc":"12252:2:25","nodeType":"YulIdentifier","src":"12252:2:25"},"nativeSrc":"12252:15:25","nodeType":"YulFunctionCall","src":"12252:15:25"},"nativeSrc":"12244:712:25","nodeType":"YulForLoop","post":{"nativeSrc":"12268:2:25","nodeType":"YulBlock","src":"12268:2:25","statements":[]},"pre":{"nativeSrc":"12248:3:25","nodeType":"YulBlock","src":"12248:3:25","statements":[]},"src":"12244:712:25"}]},"name":"checked_exp_helper","nativeSrc":"12114:848:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"_power","nativeSrc":"12142:6:25","nodeType":"YulTypedName","src":"12142:6:25","type":""},{"name":"_base","nativeSrc":"12150:5:25","nodeType":"YulTypedName","src":"12150:5:25","type":""},{"name":"exponent","nativeSrc":"12157:8:25","nodeType":"YulTypedName","src":"12157:8:25","type":""},{"name":"max","nativeSrc":"12167:3:25","nodeType":"YulTypedName","src":"12167:3:25","type":""}],"returnVariables":[{"name":"power","nativeSrc":"12175:5:25","nodeType":"YulTypedName","src":"12175:5:25","type":""},{"name":"base","nativeSrc":"12182:4:25","nodeType":"YulTypedName","src":"12182:4:25","type":""}],"src":"12114:848:25"},{"body":{"nativeSrc":"13028:1013:25","nodeType":"YulBlock","src":"13028:1013:25","statements":[{"body":{"nativeSrc":"13223:20:25","nodeType":"YulBlock","src":"13223:20:25","statements":[{"nativeSrc":"13225:10:25","nodeType":"YulAssignment","src":"13225:10:25","value":{"kind":"number","nativeSrc":"13234:1:25","nodeType":"YulLiteral","src":"13234:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"13225:5:25","nodeType":"YulIdentifier","src":"13225:5:25"}]},{"nativeSrc":"13236:5:25","nodeType":"YulLeave","src":"13236:5:25"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"13213:8:25","nodeType":"YulIdentifier","src":"13213:8:25"}],"functionName":{"name":"iszero","nativeSrc":"13206:6:25","nodeType":"YulIdentifier","src":"13206:6:25"},"nativeSrc":"13206:16:25","nodeType":"YulFunctionCall","src":"13206:16:25"},"nativeSrc":"13203:40:25","nodeType":"YulIf","src":"13203:40:25"},{"body":{"nativeSrc":"13268:20:25","nodeType":"YulBlock","src":"13268:20:25","statements":[{"nativeSrc":"13270:10:25","nodeType":"YulAssignment","src":"13270:10:25","value":{"kind":"number","nativeSrc":"13279:1:25","nodeType":"YulLiteral","src":"13279:1:25","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"13270:5:25","nodeType":"YulIdentifier","src":"13270:5:25"}]},{"nativeSrc":"13281:5:25","nodeType":"YulLeave","src":"13281:5:25"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"13262:4:25","nodeType":"YulIdentifier","src":"13262:4:25"}],"functionName":{"name":"iszero","nativeSrc":"13255:6:25","nodeType":"YulIdentifier","src":"13255:6:25"},"nativeSrc":"13255:12:25","nodeType":"YulFunctionCall","src":"13255:12:25"},"nativeSrc":"13252:36:25","nodeType":"YulIf","src":"13252:36:25"},{"cases":[{"body":{"nativeSrc":"13398:20:25","nodeType":"YulBlock","src":"13398:20:25","statements":[{"nativeSrc":"13400:10:25","nodeType":"YulAssignment","src":"13400:10:25","value":{"kind":"number","nativeSrc":"13409:1:25","nodeType":"YulLiteral","src":"13409:1:25","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"13400:5:25","nodeType":"YulIdentifier","src":"13400:5:25"}]},{"nativeSrc":"13411:5:25","nodeType":"YulLeave","src":"13411:5:25"}]},"nativeSrc":"13391:27:25","nodeType":"YulCase","src":"13391:27:25","value":{"kind":"number","nativeSrc":"13396:1:25","nodeType":"YulLiteral","src":"13396:1:25","type":"","value":"1"}},{"body":{"nativeSrc":"13442:176:25","nodeType":"YulBlock","src":"13442:176:25","statements":[{"body":{"nativeSrc":"13477:22:25","nodeType":"YulBlock","src":"13477:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13479:16:25","nodeType":"YulIdentifier","src":"13479:16:25"},"nativeSrc":"13479:18:25","nodeType":"YulFunctionCall","src":"13479:18:25"},"nativeSrc":"13479:18:25","nodeType":"YulExpressionStatement","src":"13479:18:25"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"13462:8:25","nodeType":"YulIdentifier","src":"13462:8:25"},{"kind":"number","nativeSrc":"13472:3:25","nodeType":"YulLiteral","src":"13472:3:25","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"13459:2:25","nodeType":"YulIdentifier","src":"13459:2:25"},"nativeSrc":"13459:17:25","nodeType":"YulFunctionCall","src":"13459:17:25"},"nativeSrc":"13456:43:25","nodeType":"YulIf","src":"13456:43:25"},{"nativeSrc":"13512:25:25","nodeType":"YulAssignment","src":"13512:25:25","value":{"arguments":[{"kind":"number","nativeSrc":"13525:1:25","nodeType":"YulLiteral","src":"13525:1:25","type":"","value":"2"},{"name":"exponent","nativeSrc":"13528:8:25","nodeType":"YulIdentifier","src":"13528:8:25"}],"functionName":{"name":"exp","nativeSrc":"13521:3:25","nodeType":"YulIdentifier","src":"13521:3:25"},"nativeSrc":"13521:16:25","nodeType":"YulFunctionCall","src":"13521:16:25"},"variableNames":[{"name":"power","nativeSrc":"13512:5:25","nodeType":"YulIdentifier","src":"13512:5:25"}]},{"body":{"nativeSrc":"13568:22:25","nodeType":"YulBlock","src":"13568:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13570:16:25","nodeType":"YulIdentifier","src":"13570:16:25"},"nativeSrc":"13570:18:25","nodeType":"YulFunctionCall","src":"13570:18:25"},"nativeSrc":"13570:18:25","nodeType":"YulExpressionStatement","src":"13570:18:25"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"13556:5:25","nodeType":"YulIdentifier","src":"13556:5:25"},{"name":"max","nativeSrc":"13563:3:25","nodeType":"YulIdentifier","src":"13563:3:25"}],"functionName":{"name":"gt","nativeSrc":"13553:2:25","nodeType":"YulIdentifier","src":"13553:2:25"},"nativeSrc":"13553:14:25","nodeType":"YulFunctionCall","src":"13553:14:25"},"nativeSrc":"13550:40:25","nodeType":"YulIf","src":"13550:40:25"},{"nativeSrc":"13603:5:25","nodeType":"YulLeave","src":"13603:5:25"}]},"nativeSrc":"13427:191:25","nodeType":"YulCase","src":"13427:191:25","value":{"kind":"number","nativeSrc":"13432:1:25","nodeType":"YulLiteral","src":"13432:1:25","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"13348:4:25","nodeType":"YulIdentifier","src":"13348:4:25"},"nativeSrc":"13341:277:25","nodeType":"YulSwitch","src":"13341:277:25"},{"body":{"nativeSrc":"13750:123:25","nodeType":"YulBlock","src":"13750:123:25","statements":[{"nativeSrc":"13764:28:25","nodeType":"YulAssignment","src":"13764:28:25","value":{"arguments":[{"name":"base","nativeSrc":"13777:4:25","nodeType":"YulIdentifier","src":"13777:4:25"},{"name":"exponent","nativeSrc":"13783:8:25","nodeType":"YulIdentifier","src":"13783:8:25"}],"functionName":{"name":"exp","nativeSrc":"13773:3:25","nodeType":"YulIdentifier","src":"13773:3:25"},"nativeSrc":"13773:19:25","nodeType":"YulFunctionCall","src":"13773:19:25"},"variableNames":[{"name":"power","nativeSrc":"13764:5:25","nodeType":"YulIdentifier","src":"13764:5:25"}]},{"body":{"nativeSrc":"13823:22:25","nodeType":"YulBlock","src":"13823:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13825:16:25","nodeType":"YulIdentifier","src":"13825:16:25"},"nativeSrc":"13825:18:25","nodeType":"YulFunctionCall","src":"13825:18:25"},"nativeSrc":"13825:18:25","nodeType":"YulExpressionStatement","src":"13825:18:25"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"13811:5:25","nodeType":"YulIdentifier","src":"13811:5:25"},{"name":"max","nativeSrc":"13818:3:25","nodeType":"YulIdentifier","src":"13818:3:25"}],"functionName":{"name":"gt","nativeSrc":"13808:2:25","nodeType":"YulIdentifier","src":"13808:2:25"},"nativeSrc":"13808:14:25","nodeType":"YulFunctionCall","src":"13808:14:25"},"nativeSrc":"13805:40:25","nodeType":"YulIf","src":"13805:40:25"},{"nativeSrc":"13858:5:25","nodeType":"YulLeave","src":"13858:5:25"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"13653:4:25","nodeType":"YulIdentifier","src":"13653:4:25"},{"kind":"number","nativeSrc":"13659:2:25","nodeType":"YulLiteral","src":"13659:2:25","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"13650:2:25","nodeType":"YulIdentifier","src":"13650:2:25"},"nativeSrc":"13650:12:25","nodeType":"YulFunctionCall","src":"13650:12:25"},{"arguments":[{"name":"exponent","nativeSrc":"13667:8:25","nodeType":"YulIdentifier","src":"13667:8:25"},{"kind":"number","nativeSrc":"13677:2:25","nodeType":"YulLiteral","src":"13677:2:25","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"13664:2:25","nodeType":"YulIdentifier","src":"13664:2:25"},"nativeSrc":"13664:16:25","nodeType":"YulFunctionCall","src":"13664:16:25"}],"functionName":{"name":"and","nativeSrc":"13646:3:25","nodeType":"YulIdentifier","src":"13646:3:25"},"nativeSrc":"13646:35:25","nodeType":"YulFunctionCall","src":"13646:35:25"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"13702:4:25","nodeType":"YulIdentifier","src":"13702:4:25"},{"kind":"number","nativeSrc":"13708:3:25","nodeType":"YulLiteral","src":"13708:3:25","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"13699:2:25","nodeType":"YulIdentifier","src":"13699:2:25"},"nativeSrc":"13699:13:25","nodeType":"YulFunctionCall","src":"13699:13:25"},{"arguments":[{"name":"exponent","nativeSrc":"13717:8:25","nodeType":"YulIdentifier","src":"13717:8:25"},{"kind":"number","nativeSrc":"13727:2:25","nodeType":"YulLiteral","src":"13727:2:25","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"13714:2:25","nodeType":"YulIdentifier","src":"13714:2:25"},"nativeSrc":"13714:16:25","nodeType":"YulFunctionCall","src":"13714:16:25"}],"functionName":{"name":"and","nativeSrc":"13695:3:25","nodeType":"YulIdentifier","src":"13695:3:25"},"nativeSrc":"13695:36:25","nodeType":"YulFunctionCall","src":"13695:36:25"}],"functionName":{"name":"or","nativeSrc":"13630:2:25","nodeType":"YulIdentifier","src":"13630:2:25"},"nativeSrc":"13630:111:25","nodeType":"YulFunctionCall","src":"13630:111:25"},"nativeSrc":"13627:246:25","nodeType":"YulIf","src":"13627:246:25"},{"nativeSrc":"13883:57:25","nodeType":"YulAssignment","src":"13883:57:25","value":{"arguments":[{"kind":"number","nativeSrc":"13917:1:25","nodeType":"YulLiteral","src":"13917:1:25","type":"","value":"1"},{"name":"base","nativeSrc":"13920:4:25","nodeType":"YulIdentifier","src":"13920:4:25"},{"name":"exponent","nativeSrc":"13926:8:25","nodeType":"YulIdentifier","src":"13926:8:25"},{"name":"max","nativeSrc":"13936:3:25","nodeType":"YulIdentifier","src":"13936:3:25"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"13898:18:25","nodeType":"YulIdentifier","src":"13898:18:25"},"nativeSrc":"13898:42:25","nodeType":"YulFunctionCall","src":"13898:42:25"},"variableNames":[{"name":"power","nativeSrc":"13883:5:25","nodeType":"YulIdentifier","src":"13883:5:25"},{"name":"base","nativeSrc":"13890:4:25","nodeType":"YulIdentifier","src":"13890:4:25"}]},{"body":{"nativeSrc":"13979:22:25","nodeType":"YulBlock","src":"13979:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13981:16:25","nodeType":"YulIdentifier","src":"13981:16:25"},"nativeSrc":"13981:18:25","nodeType":"YulFunctionCall","src":"13981:18:25"},"nativeSrc":"13981:18:25","nodeType":"YulExpressionStatement","src":"13981:18:25"}]},"condition":{"arguments":[{"name":"power","nativeSrc":"13956:5:25","nodeType":"YulIdentifier","src":"13956:5:25"},{"arguments":[{"name":"max","nativeSrc":"13967:3:25","nodeType":"YulIdentifier","src":"13967:3:25"},{"name":"base","nativeSrc":"13972:4:25","nodeType":"YulIdentifier","src":"13972:4:25"}],"functionName":{"name":"div","nativeSrc":"13963:3:25","nodeType":"YulIdentifier","src":"13963:3:25"},"nativeSrc":"13963:14:25","nodeType":"YulFunctionCall","src":"13963:14:25"}],"functionName":{"name":"gt","nativeSrc":"13953:2:25","nodeType":"YulIdentifier","src":"13953:2:25"},"nativeSrc":"13953:25:25","nodeType":"YulFunctionCall","src":"13953:25:25"},"nativeSrc":"13950:51:25","nodeType":"YulIf","src":"13950:51:25"},{"nativeSrc":"14010:25:25","nodeType":"YulAssignment","src":"14010:25:25","value":{"arguments":[{"name":"power","nativeSrc":"14023:5:25","nodeType":"YulIdentifier","src":"14023:5:25"},{"name":"base","nativeSrc":"14030:4:25","nodeType":"YulIdentifier","src":"14030:4:25"}],"functionName":{"name":"mul","nativeSrc":"14019:3:25","nodeType":"YulIdentifier","src":"14019:3:25"},"nativeSrc":"14019:16:25","nodeType":"YulFunctionCall","src":"14019:16:25"},"variableNames":[{"name":"power","nativeSrc":"14010:5:25","nodeType":"YulIdentifier","src":"14010:5:25"}]}]},"name":"checked_exp_unsigned","nativeSrc":"12968:1073:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"12998:4:25","nodeType":"YulTypedName","src":"12998:4:25","type":""},{"name":"exponent","nativeSrc":"13004:8:25","nodeType":"YulTypedName","src":"13004:8:25","type":""},{"name":"max","nativeSrc":"13014:3:25","nodeType":"YulTypedName","src":"13014:3:25","type":""}],"returnVariables":[{"name":"power","nativeSrc":"13022:5:25","nodeType":"YulTypedName","src":"13022:5:25","type":""}],"src":"12968:1073:25"},{"body":{"nativeSrc":"14111:217:25","nodeType":"YulBlock","src":"14111:217:25","statements":[{"nativeSrc":"14121:31:25","nodeType":"YulAssignment","src":"14121:31:25","value":{"arguments":[{"name":"base","nativeSrc":"14147:4:25","nodeType":"YulIdentifier","src":"14147:4:25"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"14129:17:25","nodeType":"YulIdentifier","src":"14129:17:25"},"nativeSrc":"14129:23:25","nodeType":"YulFunctionCall","src":"14129:23:25"},"variableNames":[{"name":"base","nativeSrc":"14121:4:25","nodeType":"YulIdentifier","src":"14121:4:25"}]},{"nativeSrc":"14161:37:25","nodeType":"YulAssignment","src":"14161:37:25","value":{"arguments":[{"name":"exponent","nativeSrc":"14189:8:25","nodeType":"YulIdentifier","src":"14189:8:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"14173:15:25","nodeType":"YulIdentifier","src":"14173:15:25"},"nativeSrc":"14173:25:25","nodeType":"YulFunctionCall","src":"14173:25:25"},"variableNames":[{"name":"exponent","nativeSrc":"14161:8:25","nodeType":"YulIdentifier","src":"14161:8:25"}]},{"nativeSrc":"14208:113:25","nodeType":"YulAssignment","src":"14208:113:25","value":{"arguments":[{"name":"base","nativeSrc":"14238:4:25","nodeType":"YulIdentifier","src":"14238:4:25"},{"name":"exponent","nativeSrc":"14244:8:25","nodeType":"YulIdentifier","src":"14244:8:25"},{"kind":"number","nativeSrc":"14254:66:25","nodeType":"YulLiteral","src":"14254:66:25","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"14217:20:25","nodeType":"YulIdentifier","src":"14217:20:25"},"nativeSrc":"14217:104:25","nodeType":"YulFunctionCall","src":"14217:104:25"},"variableNames":[{"name":"power","nativeSrc":"14208:5:25","nodeType":"YulIdentifier","src":"14208:5:25"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"14047:281:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"14086:4:25","nodeType":"YulTypedName","src":"14086:4:25","type":""},{"name":"exponent","nativeSrc":"14092:8:25","nodeType":"YulTypedName","src":"14092:8:25","type":""}],"returnVariables":[{"name":"power","nativeSrc":"14105:5:25","nodeType":"YulTypedName","src":"14105:5:25","type":""}],"src":"14047:281:25"},{"body":{"nativeSrc":"14362:152:25","nodeType":"YulBlock","src":"14362:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14379:1:25","nodeType":"YulLiteral","src":"14379:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"14382:77:25","nodeType":"YulLiteral","src":"14382:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14372:6:25","nodeType":"YulIdentifier","src":"14372:6:25"},"nativeSrc":"14372:88:25","nodeType":"YulFunctionCall","src":"14372:88:25"},"nativeSrc":"14372:88:25","nodeType":"YulExpressionStatement","src":"14372:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14476:1:25","nodeType":"YulLiteral","src":"14476:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"14479:4:25","nodeType":"YulLiteral","src":"14479:4:25","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"14469:6:25","nodeType":"YulIdentifier","src":"14469:6:25"},"nativeSrc":"14469:15:25","nodeType":"YulFunctionCall","src":"14469:15:25"},"nativeSrc":"14469:15:25","nodeType":"YulExpressionStatement","src":"14469:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14500:1:25","nodeType":"YulLiteral","src":"14500:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"14503:4:25","nodeType":"YulLiteral","src":"14503:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14493:6:25","nodeType":"YulIdentifier","src":"14493:6:25"},"nativeSrc":"14493:15:25","nodeType":"YulFunctionCall","src":"14493:15:25"},"nativeSrc":"14493:15:25","nodeType":"YulExpressionStatement","src":"14493:15:25"}]},"name":"panic_error_0x12","nativeSrc":"14334:180:25","nodeType":"YulFunctionDefinition","src":"14334:180:25"},{"body":{"nativeSrc":"14646:206:25","nodeType":"YulBlock","src":"14646:206:25","statements":[{"nativeSrc":"14656:26:25","nodeType":"YulAssignment","src":"14656:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"14668:9:25","nodeType":"YulIdentifier","src":"14668:9:25"},{"kind":"number","nativeSrc":"14679:2:25","nodeType":"YulLiteral","src":"14679:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14664:3:25","nodeType":"YulIdentifier","src":"14664:3:25"},"nativeSrc":"14664:18:25","nodeType":"YulFunctionCall","src":"14664:18:25"},"variableNames":[{"name":"tail","nativeSrc":"14656:4:25","nodeType":"YulIdentifier","src":"14656:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14736:6:25","nodeType":"YulIdentifier","src":"14736:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14749:9:25","nodeType":"YulIdentifier","src":"14749:9:25"},{"kind":"number","nativeSrc":"14760:1:25","nodeType":"YulLiteral","src":"14760:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14745:3:25","nodeType":"YulIdentifier","src":"14745:3:25"},"nativeSrc":"14745:17:25","nodeType":"YulFunctionCall","src":"14745:17:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14692:43:25","nodeType":"YulIdentifier","src":"14692:43:25"},"nativeSrc":"14692:71:25","nodeType":"YulFunctionCall","src":"14692:71:25"},"nativeSrc":"14692:71:25","nodeType":"YulExpressionStatement","src":"14692:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14817:6:25","nodeType":"YulIdentifier","src":"14817:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"14830:9:25","nodeType":"YulIdentifier","src":"14830:9:25"},{"kind":"number","nativeSrc":"14841:2:25","nodeType":"YulLiteral","src":"14841:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14826:3:25","nodeType":"YulIdentifier","src":"14826:3:25"},"nativeSrc":"14826:18:25","nodeType":"YulFunctionCall","src":"14826:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"14773:43:25","nodeType":"YulIdentifier","src":"14773:43:25"},"nativeSrc":"14773:72:25","nodeType":"YulFunctionCall","src":"14773:72:25"},"nativeSrc":"14773:72:25","nodeType":"YulExpressionStatement","src":"14773:72:25"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"14520:332:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14610:9:25","nodeType":"YulTypedName","src":"14610:9:25","type":""},{"name":"value1","nativeSrc":"14622:6:25","nodeType":"YulTypedName","src":"14622:6:25","type":""},{"name":"value0","nativeSrc":"14630:6:25","nodeType":"YulTypedName","src":"14630:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14641:4:25","nodeType":"YulTypedName","src":"14641:4:25","type":""}],"src":"14520:332:25"},{"body":{"nativeSrc":"14984:206:25","nodeType":"YulBlock","src":"14984:206:25","statements":[{"nativeSrc":"14994:26:25","nodeType":"YulAssignment","src":"14994:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"15006:9:25","nodeType":"YulIdentifier","src":"15006:9:25"},{"kind":"number","nativeSrc":"15017:2:25","nodeType":"YulLiteral","src":"15017:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15002:3:25","nodeType":"YulIdentifier","src":"15002:3:25"},"nativeSrc":"15002:18:25","nodeType":"YulFunctionCall","src":"15002:18:25"},"variableNames":[{"name":"tail","nativeSrc":"14994:4:25","nodeType":"YulIdentifier","src":"14994:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15074:6:25","nodeType":"YulIdentifier","src":"15074:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15087:9:25","nodeType":"YulIdentifier","src":"15087:9:25"},{"kind":"number","nativeSrc":"15098:1:25","nodeType":"YulLiteral","src":"15098:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15083:3:25","nodeType":"YulIdentifier","src":"15083:3:25"},"nativeSrc":"15083:17:25","nodeType":"YulFunctionCall","src":"15083:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15030:43:25","nodeType":"YulIdentifier","src":"15030:43:25"},"nativeSrc":"15030:71:25","nodeType":"YulFunctionCall","src":"15030:71:25"},"nativeSrc":"15030:71:25","nodeType":"YulExpressionStatement","src":"15030:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15155:6:25","nodeType":"YulIdentifier","src":"15155:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15168:9:25","nodeType":"YulIdentifier","src":"15168:9:25"},{"kind":"number","nativeSrc":"15179:2:25","nodeType":"YulLiteral","src":"15179:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15164:3:25","nodeType":"YulIdentifier","src":"15164:3:25"},"nativeSrc":"15164:18:25","nodeType":"YulFunctionCall","src":"15164:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15111:43:25","nodeType":"YulIdentifier","src":"15111:43:25"},"nativeSrc":"15111:72:25","nodeType":"YulFunctionCall","src":"15111:72:25"},"nativeSrc":"15111:72:25","nodeType":"YulExpressionStatement","src":"15111:72:25"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"14858:332:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14948:9:25","nodeType":"YulTypedName","src":"14948:9:25","type":""},{"name":"value1","nativeSrc":"14960:6:25","nodeType":"YulTypedName","src":"14960:6:25","type":""},{"name":"value0","nativeSrc":"14968:6:25","nodeType":"YulTypedName","src":"14968:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14979:4:25","nodeType":"YulTypedName","src":"14979:4:25","type":""}],"src":"14858:332:25"},{"body":{"nativeSrc":"15224:152:25","nodeType":"YulBlock","src":"15224:152:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15241:1:25","nodeType":"YulLiteral","src":"15241:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"15244:77:25","nodeType":"YulLiteral","src":"15244:77:25","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15234:6:25","nodeType":"YulIdentifier","src":"15234:6:25"},"nativeSrc":"15234:88:25","nodeType":"YulFunctionCall","src":"15234:88:25"},"nativeSrc":"15234:88:25","nodeType":"YulExpressionStatement","src":"15234:88:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15338:1:25","nodeType":"YulLiteral","src":"15338:1:25","type":"","value":"4"},{"kind":"number","nativeSrc":"15341:4:25","nodeType":"YulLiteral","src":"15341:4:25","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"15331:6:25","nodeType":"YulIdentifier","src":"15331:6:25"},"nativeSrc":"15331:15:25","nodeType":"YulFunctionCall","src":"15331:15:25"},"nativeSrc":"15331:15:25","nodeType":"YulExpressionStatement","src":"15331:15:25"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15362:1:25","nodeType":"YulLiteral","src":"15362:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"15365:4:25","nodeType":"YulLiteral","src":"15365:4:25","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15355:6:25","nodeType":"YulIdentifier","src":"15355:6:25"},"nativeSrc":"15355:15:25","nodeType":"YulFunctionCall","src":"15355:15:25"},"nativeSrc":"15355:15:25","nodeType":"YulExpressionStatement","src":"15355:15:25"}]},"name":"panic_error_0x21","nativeSrc":"15196:180:25","nodeType":"YulFunctionDefinition","src":"15196:180:25"},{"body":{"nativeSrc":"15414:138:25","nodeType":"YulBlock","src":"15414:138:25","statements":[{"nativeSrc":"15424:23:25","nodeType":"YulAssignment","src":"15424:23:25","value":{"arguments":[{"name":"x","nativeSrc":"15445:1:25","nodeType":"YulIdentifier","src":"15445:1:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"15429:15:25","nodeType":"YulIdentifier","src":"15429:15:25"},"nativeSrc":"15429:18:25","nodeType":"YulFunctionCall","src":"15429:18:25"},"variableNames":[{"name":"x","nativeSrc":"15424:1:25","nodeType":"YulIdentifier","src":"15424:1:25"}]},{"nativeSrc":"15456:23:25","nodeType":"YulAssignment","src":"15456:23:25","value":{"arguments":[{"name":"y","nativeSrc":"15477:1:25","nodeType":"YulIdentifier","src":"15477:1:25"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"15461:15:25","nodeType":"YulIdentifier","src":"15461:15:25"},"nativeSrc":"15461:18:25","nodeType":"YulFunctionCall","src":"15461:18:25"},"variableNames":[{"name":"y","nativeSrc":"15456:1:25","nodeType":"YulIdentifier","src":"15456:1:25"}]},{"body":{"nativeSrc":"15501:22:25","nodeType":"YulBlock","src":"15501:22:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"15503:16:25","nodeType":"YulIdentifier","src":"15503:16:25"},"nativeSrc":"15503:18:25","nodeType":"YulFunctionCall","src":"15503:18:25"},"nativeSrc":"15503:18:25","nodeType":"YulExpressionStatement","src":"15503:18:25"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"15498:1:25","nodeType":"YulIdentifier","src":"15498:1:25"}],"functionName":{"name":"iszero","nativeSrc":"15491:6:25","nodeType":"YulIdentifier","src":"15491:6:25"},"nativeSrc":"15491:9:25","nodeType":"YulFunctionCall","src":"15491:9:25"},"nativeSrc":"15488:35:25","nodeType":"YulIf","src":"15488:35:25"},{"nativeSrc":"15532:14:25","nodeType":"YulAssignment","src":"15532:14:25","value":{"arguments":[{"name":"x","nativeSrc":"15541:1:25","nodeType":"YulIdentifier","src":"15541:1:25"},{"name":"y","nativeSrc":"15544:1:25","nodeType":"YulIdentifier","src":"15544:1:25"}],"functionName":{"name":"mod","nativeSrc":"15537:3:25","nodeType":"YulIdentifier","src":"15537:3:25"},"nativeSrc":"15537:9:25","nodeType":"YulFunctionCall","src":"15537:9:25"},"variableNames":[{"name":"r","nativeSrc":"15532:1:25","nodeType":"YulIdentifier","src":"15532:1:25"}]}]},"name":"mod_t_uint8","nativeSrc":"15382:170:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"15403:1:25","nodeType":"YulTypedName","src":"15403:1:25","type":""},{"name":"y","nativeSrc":"15406:1:25","nodeType":"YulTypedName","src":"15406:1:25","type":""}],"returnVariables":[{"name":"r","nativeSrc":"15412:1:25","nodeType":"YulTypedName","src":"15412:1:25","type":""}],"src":"15382:170:25"},{"body":{"nativeSrc":"15712:288:25","nodeType":"YulBlock","src":"15712:288:25","statements":[{"nativeSrc":"15722:26:25","nodeType":"YulAssignment","src":"15722:26:25","value":{"arguments":[{"name":"headStart","nativeSrc":"15734:9:25","nodeType":"YulIdentifier","src":"15734:9:25"},{"kind":"number","nativeSrc":"15745:2:25","nodeType":"YulLiteral","src":"15745:2:25","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15730:3:25","nodeType":"YulIdentifier","src":"15730:3:25"},"nativeSrc":"15730:18:25","nodeType":"YulFunctionCall","src":"15730:18:25"},"variableNames":[{"name":"tail","nativeSrc":"15722:4:25","nodeType":"YulIdentifier","src":"15722:4:25"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15802:6:25","nodeType":"YulIdentifier","src":"15802:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15815:9:25","nodeType":"YulIdentifier","src":"15815:9:25"},{"kind":"number","nativeSrc":"15826:1:25","nodeType":"YulLiteral","src":"15826:1:25","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15811:3:25","nodeType":"YulIdentifier","src":"15811:3:25"},"nativeSrc":"15811:17:25","nodeType":"YulFunctionCall","src":"15811:17:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15758:43:25","nodeType":"YulIdentifier","src":"15758:43:25"},"nativeSrc":"15758:71:25","nodeType":"YulFunctionCall","src":"15758:71:25"},"nativeSrc":"15758:71:25","nodeType":"YulExpressionStatement","src":"15758:71:25"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15883:6:25","nodeType":"YulIdentifier","src":"15883:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15896:9:25","nodeType":"YulIdentifier","src":"15896:9:25"},{"kind":"number","nativeSrc":"15907:2:25","nodeType":"YulLiteral","src":"15907:2:25","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15892:3:25","nodeType":"YulIdentifier","src":"15892:3:25"},"nativeSrc":"15892:18:25","nodeType":"YulFunctionCall","src":"15892:18:25"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15839:43:25","nodeType":"YulIdentifier","src":"15839:43:25"},"nativeSrc":"15839:72:25","nodeType":"YulFunctionCall","src":"15839:72:25"},"nativeSrc":"15839:72:25","nodeType":"YulExpressionStatement","src":"15839:72:25"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15965:6:25","nodeType":"YulIdentifier","src":"15965:6:25"},{"arguments":[{"name":"headStart","nativeSrc":"15978:9:25","nodeType":"YulIdentifier","src":"15978:9:25"},{"kind":"number","nativeSrc":"15989:2:25","nodeType":"YulLiteral","src":"15989:2:25","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15974:3:25","nodeType":"YulIdentifier","src":"15974:3:25"},"nativeSrc":"15974:18:25","nodeType":"YulFunctionCall","src":"15974:18:25"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15921:43:25","nodeType":"YulIdentifier","src":"15921:43:25"},"nativeSrc":"15921:72:25","nodeType":"YulFunctionCall","src":"15921:72:25"},"nativeSrc":"15921:72:25","nodeType":"YulExpressionStatement","src":"15921:72:25"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"15558:442:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15668:9:25","nodeType":"YulTypedName","src":"15668:9:25","type":""},{"name":"value2","nativeSrc":"15680:6:25","nodeType":"YulTypedName","src":"15680:6:25","type":""},{"name":"value1","nativeSrc":"15688:6:25","nodeType":"YulTypedName","src":"15688:6:25","type":""},{"name":"value0","nativeSrc":"15696:6:25","nodeType":"YulTypedName","src":"15696:6:25","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15707:4:25","nodeType":"YulTypedName","src":"15707:4:25","type":""}],"src":"15558:442:25"},{"body":{"nativeSrc":"16046:76:25","nodeType":"YulBlock","src":"16046:76:25","statements":[{"body":{"nativeSrc":"16100:16:25","nodeType":"YulBlock","src":"16100:16:25","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16109:1:25","nodeType":"YulLiteral","src":"16109:1:25","type":"","value":"0"},{"kind":"number","nativeSrc":"16112:1:25","nodeType":"YulLiteral","src":"16112:1:25","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"16102:6:25","nodeType":"YulIdentifier","src":"16102:6:25"},"nativeSrc":"16102:12:25","nodeType":"YulFunctionCall","src":"16102:12:25"},"nativeSrc":"16102:12:25","nodeType":"YulExpressionStatement","src":"16102:12:25"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"16069:5:25","nodeType":"YulIdentifier","src":"16069:5:25"},{"arguments":[{"name":"value","nativeSrc":"16091:5:25","nodeType":"YulIdentifier","src":"16091:5:25"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"16076:14:25","nodeType":"YulIdentifier","src":"16076:14:25"},"nativeSrc":"16076:21:25","nodeType":"YulFunctionCall","src":"16076:21:25"}],"functionName":{"name":"eq","nativeSrc":"16066:2:25","nodeType":"YulIdentifier","src":"16066:2:25"},"nativeSrc":"16066:32:25","nodeType":"YulFunctionCall","src":"16066:32:25"}],"functionName":{"name":"iszero","nativeSrc":"16059:6:25","nodeType":"YulIdentifier","src":"16059:6:25"},"nativeSrc":"16059:40:25","nodeType":"YulFunctionCall","src":"16059:40:25"},"nativeSrc":"16056:60:25","nodeType":"YulIf","src":"16056:60:25"}]},"name":"validator_revert_t_bool","nativeSrc":"16006:116:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16039:5:25","nodeType":"YulTypedName","src":"16039:5:25","type":""}],"src":"16006:116:25"},{"body":{"nativeSrc":"16188:77:25","nodeType":"YulBlock","src":"16188:77:25","statements":[{"nativeSrc":"16198:22:25","nodeType":"YulAssignment","src":"16198:22:25","value":{"arguments":[{"name":"offset","nativeSrc":"16213:6:25","nodeType":"YulIdentifier","src":"16213:6:25"}],"functionName":{"name":"mload","nativeSrc":"16207:5:25","nodeType":"YulIdentifier","src":"16207:5:25"},"nativeSrc":"16207:13:25","nodeType":"YulFunctionCall","src":"16207:13:25"},"variableNames":[{"name":"value","nativeSrc":"16198:5:25","nodeType":"YulIdentifier","src":"16198:5:25"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"16253:5:25","nodeType":"YulIdentifier","src":"16253:5:25"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"16229:23:25","nodeType":"YulIdentifier","src":"16229:23:25"},"nativeSrc":"16229:30:25","nodeType":"YulFunctionCall","src":"16229:30:25"},"nativeSrc":"16229:30:25","nodeType":"YulExpressionStatement","src":"16229:30:25"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"16128:137:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"16166:6:25","nodeType":"YulTypedName","src":"16166:6:25","type":""},{"name":"end","nativeSrc":"16174:3:25","nodeType":"YulTypedName","src":"16174:3:25","type":""}],"returnVariables":[{"name":"value","nativeSrc":"16182:5:25","nodeType":"YulTypedName","src":"16182:5:25","type":""}],"src":"16128:137:25"},{"body":{"nativeSrc":"16345:271:25","nodeType":"YulBlock","src":"16345:271:25","statements":[{"body":{"nativeSrc":"16391:83:25","nodeType":"YulBlock","src":"16391:83:25","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"16393:77:25","nodeType":"YulIdentifier","src":"16393:77:25"},"nativeSrc":"16393:79:25","nodeType":"YulFunctionCall","src":"16393:79:25"},"nativeSrc":"16393:79:25","nodeType":"YulExpressionStatement","src":"16393:79:25"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"16366:7:25","nodeType":"YulIdentifier","src":"16366:7:25"},{"name":"headStart","nativeSrc":"16375:9:25","nodeType":"YulIdentifier","src":"16375:9:25"}],"functionName":{"name":"sub","nativeSrc":"16362:3:25","nodeType":"YulIdentifier","src":"16362:3:25"},"nativeSrc":"16362:23:25","nodeType":"YulFunctionCall","src":"16362:23:25"},{"kind":"number","nativeSrc":"16387:2:25","nodeType":"YulLiteral","src":"16387:2:25","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"16358:3:25","nodeType":"YulIdentifier","src":"16358:3:25"},"nativeSrc":"16358:32:25","nodeType":"YulFunctionCall","src":"16358:32:25"},"nativeSrc":"16355:119:25","nodeType":"YulIf","src":"16355:119:25"},{"nativeSrc":"16484:125:25","nodeType":"YulBlock","src":"16484:125:25","statements":[{"nativeSrc":"16499:15:25","nodeType":"YulVariableDeclaration","src":"16499:15:25","value":{"kind":"number","nativeSrc":"16513:1:25","nodeType":"YulLiteral","src":"16513:1:25","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16503:6:25","nodeType":"YulTypedName","src":"16503:6:25","type":""}]},{"nativeSrc":"16528:71:25","nodeType":"YulAssignment","src":"16528:71:25","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16571:9:25","nodeType":"YulIdentifier","src":"16571:9:25"},{"name":"offset","nativeSrc":"16582:6:25","nodeType":"YulIdentifier","src":"16582:6:25"}],"functionName":{"name":"add","nativeSrc":"16567:3:25","nodeType":"YulIdentifier","src":"16567:3:25"},"nativeSrc":"16567:22:25","nodeType":"YulFunctionCall","src":"16567:22:25"},{"name":"dataEnd","nativeSrc":"16591:7:25","nodeType":"YulIdentifier","src":"16591:7:25"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"16538:28:25","nodeType":"YulIdentifier","src":"16538:28:25"},"nativeSrc":"16538:61:25","nodeType":"YulFunctionCall","src":"16538:61:25"},"variableNames":[{"name":"value0","nativeSrc":"16528:6:25","nodeType":"YulIdentifier","src":"16528:6:25"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"16271:345:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16315:9:25","nodeType":"YulTypedName","src":"16315:9:25","type":""},{"name":"dataEnd","nativeSrc":"16326:7:25","nodeType":"YulTypedName","src":"16326:7:25","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"16338:6:25","nodeType":"YulTypedName","src":"16338:6:25","type":""}],"src":"16271:345:25"},{"body":{"nativeSrc":"16680:40:25","nodeType":"YulBlock","src":"16680:40:25","statements":[{"nativeSrc":"16691:22:25","nodeType":"YulAssignment","src":"16691:22:25","value":{"arguments":[{"name":"value","nativeSrc":"16707:5:25","nodeType":"YulIdentifier","src":"16707:5:25"}],"functionName":{"name":"mload","nativeSrc":"16701:5:25","nodeType":"YulIdentifier","src":"16701:5:25"},"nativeSrc":"16701:12:25","nodeType":"YulFunctionCall","src":"16701:12:25"},"variableNames":[{"name":"length","nativeSrc":"16691:6:25","nodeType":"YulIdentifier","src":"16691:6:25"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"16622:98:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16663:5:25","nodeType":"YulTypedName","src":"16663:5:25","type":""}],"returnVariables":[{"name":"length","nativeSrc":"16673:6:25","nodeType":"YulTypedName","src":"16673:6:25","type":""}],"src":"16622:98:25"},{"body":{"nativeSrc":"16839:34:25","nodeType":"YulBlock","src":"16839:34:25","statements":[{"nativeSrc":"16849:18:25","nodeType":"YulAssignment","src":"16849:18:25","value":{"name":"pos","nativeSrc":"16864:3:25","nodeType":"YulIdentifier","src":"16864:3:25"},"variableNames":[{"name":"updated_pos","nativeSrc":"16849:11:25","nodeType":"YulIdentifier","src":"16849:11:25"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16726:147:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"16811:3:25","nodeType":"YulTypedName","src":"16811:3:25","type":""},{"name":"length","nativeSrc":"16816:6:25","nodeType":"YulTypedName","src":"16816:6:25","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"16827:11:25","nodeType":"YulTypedName","src":"16827:11:25","type":""}],"src":"16726:147:25"},{"body":{"nativeSrc":"16987:278:25","nodeType":"YulBlock","src":"16987:278:25","statements":[{"nativeSrc":"16997:52:25","nodeType":"YulVariableDeclaration","src":"16997:52:25","value":{"arguments":[{"name":"value","nativeSrc":"17043:5:25","nodeType":"YulIdentifier","src":"17043:5:25"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"17011:31:25","nodeType":"YulIdentifier","src":"17011:31:25"},"nativeSrc":"17011:38:25","nodeType":"YulFunctionCall","src":"17011:38:25"},"variables":[{"name":"length","nativeSrc":"17001:6:25","nodeType":"YulTypedName","src":"17001:6:25","type":""}]},{"nativeSrc":"17058:95:25","nodeType":"YulAssignment","src":"17058:95:25","value":{"arguments":[{"name":"pos","nativeSrc":"17141:3:25","nodeType":"YulIdentifier","src":"17141:3:25"},{"name":"length","nativeSrc":"17146:6:25","nodeType":"YulIdentifier","src":"17146:6:25"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17065:75:25","nodeType":"YulIdentifier","src":"17065:75:25"},"nativeSrc":"17065:88:25","nodeType":"YulFunctionCall","src":"17065:88:25"},"variableNames":[{"name":"pos","nativeSrc":"17058:3:25","nodeType":"YulIdentifier","src":"17058:3:25"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17201:5:25","nodeType":"YulIdentifier","src":"17201:5:25"},{"kind":"number","nativeSrc":"17208:4:25","nodeType":"YulLiteral","src":"17208:4:25","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17197:3:25","nodeType":"YulIdentifier","src":"17197:3:25"},"nativeSrc":"17197:16:25","nodeType":"YulFunctionCall","src":"17197:16:25"},{"name":"pos","nativeSrc":"17215:3:25","nodeType":"YulIdentifier","src":"17215:3:25"},{"name":"length","nativeSrc":"17220:6:25","nodeType":"YulIdentifier","src":"17220:6:25"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"17162:34:25","nodeType":"YulIdentifier","src":"17162:34:25"},"nativeSrc":"17162:65:25","nodeType":"YulFunctionCall","src":"17162:65:25"},"nativeSrc":"17162:65:25","nodeType":"YulExpressionStatement","src":"17162:65:25"},{"nativeSrc":"17236:23:25","nodeType":"YulAssignment","src":"17236:23:25","value":{"arguments":[{"name":"pos","nativeSrc":"17247:3:25","nodeType":"YulIdentifier","src":"17247:3:25"},{"name":"length","nativeSrc":"17252:6:25","nodeType":"YulIdentifier","src":"17252:6:25"}],"functionName":{"name":"add","nativeSrc":"17243:3:25","nodeType":"YulIdentifier","src":"17243:3:25"},"nativeSrc":"17243:16:25","nodeType":"YulFunctionCall","src":"17243:16:25"},"variableNames":[{"name":"end","nativeSrc":"17236:3:25","nodeType":"YulIdentifier","src":"17236:3:25"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"16879:386:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16968:5:25","nodeType":"YulTypedName","src":"16968:5:25","type":""},{"name":"pos","nativeSrc":"16975:3:25","nodeType":"YulTypedName","src":"16975:3:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"16983:3:25","nodeType":"YulTypedName","src":"16983:3:25","type":""}],"src":"16879:386:25"},{"body":{"nativeSrc":"17405:137:25","nodeType":"YulBlock","src":"17405:137:25","statements":[{"nativeSrc":"17416:100:25","nodeType":"YulAssignment","src":"17416:100:25","value":{"arguments":[{"name":"value0","nativeSrc":"17503:6:25","nodeType":"YulIdentifier","src":"17503:6:25"},{"name":"pos","nativeSrc":"17512:3:25","nodeType":"YulIdentifier","src":"17512:3:25"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17423:79:25","nodeType":"YulIdentifier","src":"17423:79:25"},"nativeSrc":"17423:93:25","nodeType":"YulFunctionCall","src":"17423:93:25"},"variableNames":[{"name":"pos","nativeSrc":"17416:3:25","nodeType":"YulIdentifier","src":"17416:3:25"}]},{"nativeSrc":"17526:10:25","nodeType":"YulAssignment","src":"17526:10:25","value":{"name":"pos","nativeSrc":"17533:3:25","nodeType":"YulIdentifier","src":"17533:3:25"},"variableNames":[{"name":"end","nativeSrc":"17526:3:25","nodeType":"YulIdentifier","src":"17526:3:25"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"17271:271:25","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17384:3:25","nodeType":"YulTypedName","src":"17384:3:25","type":""},{"name":"value0","nativeSrc":"17390:6:25","nodeType":"YulTypedName","src":"17390:6:25","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17401:3:25","nodeType":"YulTypedName","src":"17401:3:25","type":""}],"src":"17271:271:25"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint8(x, y) -> sum {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xff) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not eligible right now, funds ca\")\n\n        mstore(add(memPtr, 32), \"n be redeem after locking period\")\n\n    }\n\n    function abi_encode_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 64)\n        store_literal_in_memory_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12c74bdc57b5736a005525e1790fae405b3824839f2ff37945f7d60f6876c1a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffff) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint8(x, y) -> r {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n","id":25,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1249":[{"length":32,"start":1961},{"length":32,"start":2488},{"length":32,"start":7048},{"length":32,"start":7419}],"1251":[{"length":32,"start":2438}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061021c5760003560e01c806395d89b4111610125578063ce96cb77116100ad578063e97add571161007c578063e97add5714610703578063ef5ddcba14610721578063ef8b30f71461073d578063f2fde38b1461076d578063f7d978a2146107895761021c565b8063ce96cb7714610643578063d040542114610673578063d905777e146106a3578063dd62ed3e146106d35761021c565b8063b460af94116100f4578063b460af9414610565578063ba08765214610595578063ba0af7a9146105c5578063c63d75b6146105e3578063c6e6f592146106135761021c565b806395d89b41146104cb5780639732e720146104e9578063a9059cbb14610505578063b3d7f6b9146105355761021c565b8063402d267d116101a857806370a082311161017757806370a0823114610425578063715018a614610455578063869155731461045f5780638da5cb5b1461047d57806394bf804d1461049b5761021c565b8063402d267d1461037757806340f02ab6146103a75780634cdad506146103c55780636e553f65146103f55761021c565b80630a28a477116101ef5780630a28a477146102bd57806318160ddd146102ed57806323b872dd1461030b578063313ce5671461033b57806338d52e0f146103595761021c565b806301e1d1141461022157806306fdde031461023f57806307a2d13a1461025d578063095ea7b31461028d575b600080fd5b6102296107a5565b60405161023691906122c8565b60405180910390f35b610247610846565b6040516102549190612373565b60405180910390f35b610277600480360381019061027291906123c6565b6108d8565b60405161028491906122c8565b60405180910390f35b6102a760048036038101906102a29190612451565b6108ec565b6040516102b491906124ac565b60405180910390f35b6102d760048036038101906102d291906123c6565b61090f565b6040516102e491906122c8565b60405180910390f35b6102f5610941565b60405161030291906122c8565b60405180910390f35b610325600480360381019061032091906124c7565b61094b565b60405161033291906124ac565b60405180910390f35b61034361097a565b6040516103509190612536565b60405180910390f35b6103616109b4565b60405161036e9190612560565b60405180910390f35b610391600480360381019061038c919061257b565b6109dc565b60405161039e91906122c8565b60405180910390f35b6103af610a06565b6040516103bc91906125c7565b60405180910390f35b6103df60048036038101906103da91906123c6565b610a1c565b6040516103ec91906122c8565b60405180910390f35b61040f600480360381019061040a91906125e2565b610a4e565b60405161041c91906122c8565b60405180910390f35b61043f600480360381019061043a919061257b565b610b38565b60405161044c91906122c8565b60405180910390f35b61045d610b80565b005b610467610b94565b60405161047491906122c8565b60405180910390f35b610485610b9a565b6040516104929190612560565b60405180910390f35b6104b560048036038101906104b091906125e2565b610bc4565b6040516104c291906122c8565b60405180910390f35b6104d3610c50565b6040516104e09190612373565b60405180910390f35b61050360048036038101906104fe919061264e565b610ce2565b005b61051f600480360381019061051a9190612451565b610d0e565b60405161052c91906124ac565b60405180910390f35b61054f600480360381019061054a91906123c6565b610d31565b60405161055c91906122c8565b60405180910390f35b61057f600480360381019061057a919061267b565b610d63565b60405161058c91906122c8565b60405180910390f35b6105af60048036038101906105aa919061267b565b610e4f565b6040516105bc91906122c8565b60405180910390f35b6105cd610f3b565b6040516105da91906122c8565b60405180910390f35b6105fd60048036038101906105f8919061257b565b610f41565b60405161060a91906122c8565b60405180910390f35b61062d600480360381019061062891906123c6565b610f6b565b60405161063a91906122c8565b60405180910390f35b61065d6004803603810190610658919061257b565b610f7f565b60405161066a91906122c8565b60405180910390f35b61068d6004803603810190610688919061257b565b610f9b565b60405161069a91906125c7565b60405180910390f35b6106bd60048036038101906106b8919061257b565b610fbe565b6040516106ca91906122c8565b60405180910390f35b6106ed60048036038101906106e891906126ce565b610fd0565b6040516106fa91906122c8565b60405180910390f35b61070b611057565b60405161071891906125c7565b60405180910390f35b61073b600480360381019061073691906123c6565b6110cb565b005b610757600480360381019061075291906123c6565b6110dd565b60405161076491906122c8565b60405180910390f35b6107876004803603810190610782919061257b565b61110f565b005b6107a3600480360381019061079e91906123c6565b611195565b005b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108009190612560565b602060405180830381865afa15801561081d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108419190612723565b905090565b6060600380546108559061277f565b80601f01602080910402602001604051908101604052809291908181526020018280546108819061277f565b80156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b5050505050905090565b60006108e58260006111a7565b9050919050565b6000806108f7611200565b9050610904818585611208565b600191505092915050565b6000806109238361091e61121a565b611224565b9050610939818461093491906127df565b611248565b915050919050565b6000600254905090565b600080610956611200565b905061096385828561125c565b61096e8585856112f0565b60019150509392505050565b60006109846113e4565b7f00000000000000000000000000000000000000000000000000000000000000006109af9190612813565b905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b600860009054906101000a900463ffffffff1681565b600080610a28836113e9565b9050610a3b81610a3661121a565b6113fd565b81610a469190612848565b915050919050565b600080610a5a836109dc565b905080841115610aa5578284826040517f79012fb2000000000000000000000000000000000000000000000000000000008152600401610a9c9392919061287c565b60405180910390fd5b6000610ab0856110dd565b9050610ac5610abd611200565b85878461142c565b610acf85826114b5565b42600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550809250505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610b886114b9565b610b926000611540565b565b60075481565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080610bd083610f41565b905080841115610c1b578284826040517f284ff667000000000000000000000000000000000000000000000000000000008152600401610c129392919061287c565b60405180910390fd5b6000610c2685610d31565b9050610c3b610c33611200565b85838861142c565b610c4581866114b5565b809250505092915050565b606060048054610c5f9061277f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8b9061277f565b8015610cd85780601f10610cad57610100808354040283529160200191610cd8565b820191906000526020600020905b815481529060010190602001808311610cbb57829003601f168201915b5050505050905090565b610cea6114b9565b80600860006101000a81548163ffffffff021916908363ffffffff16021790555050565b600080610d19611200565b9050610d268185856112f0565b600191505092915050565b600080610d3d83611606565b9050610d5081610d4b61161a565b611224565b81610d5b91906127df565b915050919050565b6000610d6d611624565b63ffffffff16610d7b611057565b63ffffffff161115610dc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db990612925565b60405180910390fd5b6000610dcd83610f7f565b905080851115610e18578285826040517ffe9cceec000000000000000000000000000000000000000000000000000000008152600401610e0f9392919061287c565b60405180910390fd5b6000610e238661090f565b9050610e2f868261162c565b610e43610e3a611200565b86868985611630565b80925050509392505050565b6000610e59611624565b63ffffffff16610e67611057565b63ffffffff161115610eae576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea590612925565b60405180910390fd5b6000610eb983610fbe565b905080851115610f04578285826040517fb94abeec000000000000000000000000000000000000000000000000000000008152600401610efb9392919061287c565b60405180910390fd5b6000610f0f86610a1c565b9050610f1b818761162c565b610f2f610f26611200565b8686848a611630565b80925050509392505050565b60065481565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050919050565b6000610f788260006116bb565b9050919050565b6000610f94610f8d83610b38565b60006111a7565b9050919050565b60096020528060005260406000206000915054906101000a900463ffffffff1681565b6000610fc982610b38565b9050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600860009054906101000a900463ffffffff16600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900463ffffffff166110c69190612945565b905090565b6110d36114b9565b8060078190555050565b6000806110f1836110ec61161a565b6113fd565b905061110781846111029190612848565b611714565b915050919050565b6111176114b9565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111895760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111809190612560565b60405180910390fd5b61119281611540565b50565b61119d6114b9565b8060068190555050565b60006111f860016111b66107a5565b6111c091906127df565b6111c86113e4565b600a6111d49190612ab0565b6111dc610941565b6111e691906127df565b8486611728909392919063ffffffff16565b905092915050565b600033905090565b611215838383600161177f565b505050565b6000600754905090565b600061124082612710600186611728909392919063ffffffff16565b905092915050565b60006112558260016116bb565b9050919050565b60006112688484610fd0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112ea57818110156112da578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016112d19392919061287c565b60405180910390fd5b6112e98484848403600061177f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113625760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016113599190612560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036113d45760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016113cb9190612560565b60405180910390fd5b6113df838383611956565b505050565b600090565b60006113f68260006111a7565b9050919050565b6000611424826127108461141191906127df565b600186611728909392919063ffffffff16565b905092915050565b600061143f8361143a61161a565b6113fd565b9050600061144b611b7b565b905061145986868686611b83565b60008211801561149557503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156114ad576114ac6114a56109b4565b8284611c26565b5b505050505050565b5050565b6114c1611200565b73ffffffffffffffffffffffffffffffffffffffff166114df610b9a565b73ffffffffffffffffffffffffffffffffffffffff161461153e57611502611200565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115359190612560565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006116138260016111a7565b9050919050565b6000600654905090565b600042905090565b5050565b60006116438361163e61121a565b611224565b9050600061164f611ca5565b905061165e8787878787611cad565b60008211801561169a57503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b156116b2576116b16116aa6109b4565b8284611c26565b5b50505050505050565b600061170c6116c86113e4565b600a6116d49190612ab0565b6116dc610941565b6116e691906127df565b60016116f06107a5565b6116fa91906127df565b8486611728909392919063ffffffff16565b905092915050565b60006117218260006116bb565b9050919050565b600080611736868686611da6565b905061174183611ead565b801561175e57506000848061175957611758612afb565b5b868809115b156117735760018161177091906127df565b90505b80915050949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036117f15760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016117e89190612560565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118635760006040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161185a9190612560565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015611950578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161194791906122c8565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036119a857806002600082825461199c91906127df565b92505081905550611a7b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a34578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a2b9392919061287c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ac45780600260008282540392505081905550611b11565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611b6e91906122c8565b60405180910390a3505050565b600030905090565b611baf7f0000000000000000000000000000000000000000000000000000000000000000853085611edb565b611bb98382611f5d565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d78484604051611c18929190612b2a565b60405180910390a350505050565b611ca0838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611c59929190612b53565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fdf565b505050565b600030905090565b8273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611cec57611ceb83868361125c565b5b611cf68382612076565b611d217f00000000000000000000000000000000000000000000000000000000000000008584611c26565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167ffbde797d201c681b91056529119e0b02407c7bb96a4a2c75c01fc9667232c8db8585604051611d97929190612b2a565b60405180910390a45050505050565b6000808385029050600080198587098281108382030391505060008103611de157838281611dd757611dd6612afb565b5b0492505050611ea6565b808411611e1a576040517f227bc15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600084868809905082811182039150808303925060008560000386169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b600060016002836003811115611ec657611ec5612b7c565b5b611ed09190612bab565b60ff16149050919050565b611f57848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611f1093929190612bdc565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fdf565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611fcf5760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611fc69190612560565b60405180910390fd5b611fdb60008383611956565b5050565b600061200a828473ffffffffffffffffffffffffffffffffffffffff166120f890919063ffffffff16565b9050600081511415801561202f57508080602001905181019061202d9190612c3f565b155b1561207157826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016120689190612560565b60405180910390fd5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120e85760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016120df9190612560565b60405180910390fd5b6120f482600083611956565b5050565b60606121068383600061210e565b905092915050565b60608147101561215557306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161214c9190612560565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16848660405161217e9190612cb3565b60006040518083038185875af1925050503d80600081146121bb576040519150601f19603f3d011682016040523d82523d6000602084013e6121c0565b606091505b50915091506121d08683836121db565b925050509392505050565b6060826121f0576121eb8261226a565b612262565b60008251148015612218575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561225a57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016122519190612560565b60405180910390fd5b819050612263565b5b9392505050565b60008151111561227d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b6122c2816122af565b82525050565b60006020820190506122dd60008301846122b9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561231d578082015181840152602081019050612302565b60008484015250505050565b6000601f19601f8301169050919050565b6000612345826122e3565b61234f81856122ee565b935061235f8185602086016122ff565b61236881612329565b840191505092915050565b6000602082019050818103600083015261238d818461233a565b905092915050565b600080fd5b6123a3816122af565b81146123ae57600080fd5b50565b6000813590506123c08161239a565b92915050565b6000602082840312156123dc576123db612395565b5b60006123ea848285016123b1565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061241e826123f3565b9050919050565b61242e81612413565b811461243957600080fd5b50565b60008135905061244b81612425565b92915050565b6000806040838503121561246857612467612395565b5b60006124768582860161243c565b9250506020612487858286016123b1565b9150509250929050565b60008115159050919050565b6124a681612491565b82525050565b60006020820190506124c1600083018461249d565b92915050565b6000806000606084860312156124e0576124df612395565b5b60006124ee8682870161243c565b93505060206124ff8682870161243c565b9250506040612510868287016123b1565b9150509250925092565b600060ff82169050919050565b6125308161251a565b82525050565b600060208201905061254b6000830184612527565b92915050565b61255a81612413565b82525050565b60006020820190506125756000830184612551565b92915050565b60006020828403121561259157612590612395565b5b600061259f8482850161243c565b91505092915050565b600063ffffffff82169050919050565b6125c1816125a8565b82525050565b60006020820190506125dc60008301846125b8565b92915050565b600080604083850312156125f9576125f8612395565b5b6000612607858286016123b1565b92505060206126188582860161243c565b9150509250929050565b61262b816125a8565b811461263657600080fd5b50565b60008135905061264881612622565b92915050565b60006020828403121561266457612663612395565b5b600061267284828501612639565b91505092915050565b60008060006060848603121561269457612693612395565b5b60006126a2868287016123b1565b93505060206126b38682870161243c565b92505060406126c48682870161243c565b9150509250925092565b600080604083850312156126e5576126e4612395565b5b60006126f38582860161243c565b92505060206127048582860161243c565b9150509250929050565b60008151905061271d8161239a565b92915050565b60006020828403121561273957612738612395565b5b60006127478482850161270e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061279757607f821691505b6020821081036127aa576127a9612750565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127ea826122af565b91506127f5836122af565b925082820190508082111561280d5761280c6127b0565b5b92915050565b600061281e8261251a565b91506128298361251a565b9250828201905060ff811115612842576128416127b0565b5b92915050565b6000612853826122af565b915061285e836122af565b9250828203905081811115612876576128756127b0565b5b92915050565b60006060820190506128916000830186612551565b61289e60208301856122b9565b6128ab60408301846122b9565b949350505050565b7f4e6f7420656c696769626c65207269676874206e6f772c2066756e647320636160008201527f6e2062652072656465656d206166746572206c6f636b696e6720706572696f64602082015250565b600061290f6040836122ee565b915061291a826128b3565b604082019050919050565b6000602082019050818103600083015261293e81612902565b9050919050565b6000612950826125a8565b915061295b836125a8565b9250828201905063ffffffff811115612977576129766127b0565b5b92915050565b60008160011c9050919050565b6000808291508390505b60018511156129d4578086048111156129b0576129af6127b0565b5b60018516156129bf5780820291505b80810290506129cd8561297d565b9450612994565b94509492505050565b6000826129ed5760019050612aa9565b816129fb5760009050612aa9565b8160018114612a115760028114612a1b57612a4a565b6001915050612aa9565b60ff841115612a2d57612a2c6127b0565b5b8360020a915084821115612a4457612a436127b0565b5b50612aa9565b5060208310610133831016604e8410600b8410161715612a7f5782820a905083811115612a7a57612a796127b0565b5b612aa9565b612a8c848484600161298a565b92509050818404811115612aa357612aa26127b0565b5b81810290505b9392505050565b6000612abb826122af565b9150612ac68361251a565b9250612af37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846129dd565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000604082019050612b3f60008301856122b9565b612b4c60208301846122b9565b9392505050565b6000604082019050612b686000830185612551565b612b7560208301846122b9565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000612bb68261251a565b9150612bc18361251a565b925082612bd157612bd0612afb565b5b828206905092915050565b6000606082019050612bf16000830186612551565b612bfe6020830185612551565b612c0b60408301846122b9565b949350505050565b612c1c81612491565b8114612c2757600080fd5b50565b600081519050612c3981612c13565b92915050565b600060208284031215612c5557612c54612395565b5b6000612c6384828501612c2a565b91505092915050565b600081519050919050565b600081905092915050565b6000612c8d82612c6c565b612c978185612c77565b9350612ca78185602086016122ff565b80840191505092915050565b6000612cbf8284612c82565b91508190509291505056fea2646970667358221220de802220d8eb1c66f4881d656c7ec4357c2b4a3f67c38c0f86d8aac7241b18f964736f6c63430008150033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xCE96CB77 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE97ADD57 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE97ADD57 EQ PUSH2 0x703 JUMPI DUP1 PUSH4 0xEF5DDCBA EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0xEF8B30F7 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x76D JUMPI DUP1 PUSH4 0xF7D978A2 EQ PUSH2 0x789 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xCE96CB77 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0xD0405421 EQ PUSH2 0x673 JUMPI DUP1 PUSH4 0xD905777E EQ PUSH2 0x6A3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6D3 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xB460AF94 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0xB460AF94 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xBA087652 EQ PUSH2 0x595 JUMPI DUP1 PUSH4 0xBA0AF7A9 EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0xC63D75B6 EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xC6E6F592 EQ PUSH2 0x613 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4CB JUMPI DUP1 PUSH4 0x9732E720 EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xB3D7F6B9 EQ PUSH2 0x535 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x402D267D GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x425 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0x86915573 EQ PUSH2 0x45F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x94BF804D EQ PUSH2 0x49B JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x402D267D EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x4CDAD506 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x3F5 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0xA28A477 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA28A477 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x38D52E0F EQ PUSH2 0x359 JUMPI PUSH2 0x21C JUMP JUMPDEST DUP1 PUSH4 0x1E1D114 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x7A2D13A EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x28D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x7A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x90F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x941 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x94B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2536 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x361 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43A SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45D PUSH2 0xB80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x474 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x485 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x492 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x25E2 JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C2 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D3 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x264E JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x51F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x51A SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52C SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54A SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x267B JUMP JUMPDEST PUSH2 0xD63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x267B JUMP JUMPDEST PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CD PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x62D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x628 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x65D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x658 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B8 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0xFBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E8 SWAP2 SWAP1 PUSH2 0x26CE JUMP JUMPDEST PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70B PUSH2 0x1057 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x25C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x10CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x757 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x752 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x764 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x787 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x782 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x110F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79E SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x1195 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x841 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x855 SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x881 SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E5 DUP3 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8F7 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP PUSH2 0x904 DUP2 DUP6 DUP6 PUSH2 0x1208 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x923 DUP4 PUSH2 0x91E PUSH2 0x121A JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP PUSH2 0x939 DUP2 DUP5 PUSH2 0x934 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH2 0x1248 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x956 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP PUSH2 0x963 DUP6 DUP3 DUP6 PUSH2 0x125C JUMP JUMPDEST PUSH2 0x96E DUP6 DUP6 DUP6 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x984 PUSH2 0x13E4 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x2813 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA28 DUP4 PUSH2 0x13E9 JUMP JUMPDEST SWAP1 POP PUSH2 0xA3B DUP2 PUSH2 0xA36 PUSH2 0x121A JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST DUP2 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA5A DUP4 PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0xAA5 JUMPI DUP3 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH32 0x79012FB200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAB0 DUP6 PUSH2 0x10DD JUMP JUMPDEST SWAP1 POP PUSH2 0xAC5 PUSH2 0xABD PUSH2 0x1200 JUMP JUMPDEST DUP6 DUP8 DUP5 PUSH2 0x142C JUMP JUMPDEST PUSH2 0xACF DUP6 DUP3 PUSH2 0x14B5 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB88 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xB92 PUSH1 0x0 PUSH2 0x1540 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBD0 DUP4 PUSH2 0xF41 JUMP JUMPDEST SWAP1 POP DUP1 DUP5 GT ISZERO PUSH2 0xC1B JUMPI DUP3 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH32 0x284FF66700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC26 DUP6 PUSH2 0xD31 JUMP JUMPDEST SWAP1 POP PUSH2 0xC3B PUSH2 0xC33 PUSH2 0x1200 JUMP JUMPDEST DUP6 DUP4 DUP9 PUSH2 0x142C JUMP JUMPDEST PUSH2 0xC45 DUP2 DUP7 PUSH2 0x14B5 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC5F SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC8B SWAP1 PUSH2 0x277F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCD8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCAD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCD8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCBB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCEA PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD19 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP PUSH2 0xD26 DUP2 DUP6 DUP6 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xD3D DUP4 PUSH2 0x1606 JUMP JUMPDEST SWAP1 POP PUSH2 0xD50 DUP2 PUSH2 0xD4B PUSH2 0x161A JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST DUP2 PUSH2 0xD5B SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD6D PUSH2 0x1624 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH2 0xD7B PUSH2 0x1057 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB9 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDCD DUP4 PUSH2 0xF7F JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xE18 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH32 0xFE9CCEEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE23 DUP7 PUSH2 0x90F JUMP JUMPDEST SWAP1 POP PUSH2 0xE2F DUP7 DUP3 PUSH2 0x162C JUMP JUMPDEST PUSH2 0xE43 PUSH2 0xE3A PUSH2 0x1200 JUMP JUMPDEST DUP7 DUP7 DUP10 DUP6 PUSH2 0x1630 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE59 PUSH2 0x1624 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND PUSH2 0xE67 PUSH2 0x1057 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA5 SWAP1 PUSH2 0x2925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEB9 DUP4 PUSH2 0xFBE JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0xF04 JUMPI DUP3 DUP6 DUP3 PUSH1 0x40 MLOAD PUSH32 0xB94ABEEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF0F DUP7 PUSH2 0xA1C JUMP JUMPDEST SWAP1 POP PUSH2 0xF1B DUP2 DUP8 PUSH2 0x162C JUMP JUMPDEST PUSH2 0xF2F PUSH2 0xF26 PUSH2 0x1200 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP11 PUSH2 0x1630 JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF78 DUP3 PUSH1 0x0 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF94 PUSH2 0xF8D DUP4 PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC9 DUP3 PUSH2 0xB38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH2 0x10C6 SWAP2 SWAP1 PUSH2 0x2945 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10D3 PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10F1 DUP4 PUSH2 0x10EC PUSH2 0x161A JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP PUSH2 0x1107 DUP2 DUP5 PUSH2 0x1102 SWAP2 SWAP1 PUSH2 0x2848 JUMP JUMPDEST PUSH2 0x1714 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1117 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1189 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1180 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1192 DUP2 PUSH2 0x1540 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x119D PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F8 PUSH1 0x1 PUSH2 0x11B6 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x11C0 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH2 0x11C8 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0xA PUSH2 0x11D4 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x11DC PUSH2 0x941 JUMP JUMPDEST PUSH2 0x11E6 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST DUP5 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1215 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x177F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1240 DUP3 PUSH2 0x2710 PUSH1 0x1 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1255 DUP3 PUSH1 0x1 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1268 DUP5 DUP5 PUSH2 0xFD0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x12EA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12DA JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12E9 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x177F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1362 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1359 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13D4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CB SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13DF DUP4 DUP4 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13F6 DUP3 PUSH1 0x0 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1424 DUP3 PUSH2 0x2710 DUP5 PUSH2 0x1411 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x1 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143F DUP4 PUSH2 0x143A PUSH2 0x161A JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x144B PUSH2 0x1B7B JUMP JUMPDEST SWAP1 POP PUSH2 0x1459 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1B83 JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x1495 JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14AD JUMPI PUSH2 0x14AC PUSH2 0x14A5 PUSH2 0x9B4 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x14C1 PUSH2 0x1200 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14DF PUSH2 0xB9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x153E JUMPI PUSH2 0x1502 PUSH2 0x1200 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1535 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1613 DUP3 PUSH1 0x1 PUSH2 0x11A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1643 DUP4 PUSH2 0x163E PUSH2 0x121A JUMP JUMPDEST PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x164F PUSH2 0x1CA5 JUMP JUMPDEST SWAP1 POP PUSH2 0x165E DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1CAD JUMP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0x169A JUMPI POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x16B2 JUMPI PUSH2 0x16B1 PUSH2 0x16AA PUSH2 0x9B4 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x1C26 JUMP JUMPDEST JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170C PUSH2 0x16C8 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0xA PUSH2 0x16D4 SWAP2 SWAP1 PUSH2 0x2AB0 JUMP JUMPDEST PUSH2 0x16DC PUSH2 0x941 JUMP JUMPDEST PUSH2 0x16E6 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST PUSH1 0x1 PUSH2 0x16F0 PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x16FA SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST DUP5 DUP7 PUSH2 0x1728 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1721 DUP3 PUSH1 0x0 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1736 DUP7 DUP7 DUP7 PUSH2 0x1DA6 JUMP JUMPDEST SWAP1 POP PUSH2 0x1741 DUP4 PUSH2 0x1EAD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x175E JUMPI POP PUSH1 0x0 DUP5 DUP1 PUSH2 0x1759 JUMPI PUSH2 0x1758 PUSH2 0x2AFB JUMP JUMPDEST JUMPDEST DUP7 DUP9 MULMOD GT JUMPDEST ISZERO PUSH2 0x1773 JUMPI PUSH1 0x1 DUP2 PUSH2 0x1770 SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17F1 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E8 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1863 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185A SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1950 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1947 SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x199C SWAP2 SWAP1 PUSH2 0x27DF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1A7B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A34 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A2B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AC4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B11 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1B6E SWAP2 SWAP1 PUSH2 0x22C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1BAF PUSH32 0x0 DUP6 ADDRESS DUP6 PUSH2 0x1EDB JUMP JUMPDEST PUSH2 0x1BB9 DUP4 DUP3 PUSH2 0x1F5D JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C18 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH2 0x1CA0 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1C59 SWAP3 SWAP2 SWAP1 PUSH2 0x2B53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FDF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CEC JUMPI PUSH2 0x1CEB DUP4 DUP7 DUP4 PUSH2 0x125C JUMP JUMPDEST JUMPDEST PUSH2 0x1CF6 DUP4 DUP3 PUSH2 0x2076 JUMP JUMPDEST PUSH2 0x1D21 PUSH32 0x0 DUP6 DUP5 PUSH2 0x1C26 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFBDE797D201C681B91056529119E0B02407C7BB96A4A2C75C01FC9667232C8DB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1D97 SWAP3 SWAP2 SWAP1 PUSH2 0x2B2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 MUL SWAP1 POP PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 SUB PUSH2 0x1DE1 JUMPI DUP4 DUP3 DUP2 PUSH2 0x1DD7 JUMPI PUSH2 0x1DD6 PUSH2 0x2AFB JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1EA6 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1E1A JUMPI PUSH1 0x40 MLOAD PUSH32 0x227BC15300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 PUSH1 0x0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC6 JUMPI PUSH2 0x1EC5 PUSH2 0x2B7C JUMP JUMPDEST JUMPDEST PUSH2 0x1ED0 SWAP2 SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH1 0xFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F57 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1F10 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2BDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FDF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FCF JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC6 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FDB PUSH1 0x0 DUP4 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200A DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x202F JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x202D SWAP2 SWAP1 PUSH2 0x2C3F JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2071 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2068 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20E8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20DF SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20F4 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2106 DUP4 DUP4 PUSH1 0x0 PUSH2 0x210E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x2155 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x214C SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x217E SWAP2 SWAP1 PUSH2 0x2CB3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x21BB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x21D0 DUP7 DUP4 DUP4 PUSH2 0x21DB JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x21F0 JUMPI PUSH2 0x21EB DUP3 PUSH2 0x226A JUMP JUMPDEST PUSH2 0x2262 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2218 JUMPI POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x225A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2251 SWAP2 SWAP1 PUSH2 0x2560 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x2263 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x227D JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22C2 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x231D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2302 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2345 DUP3 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x234F DUP2 DUP6 PUSH2 0x22EE JUMP JUMPDEST SWAP4 POP PUSH2 0x235F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22FF JUMP JUMPDEST PUSH2 0x2368 DUP2 PUSH2 0x2329 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x238D DUP2 DUP5 PUSH2 0x233A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A3 DUP2 PUSH2 0x22AF JUMP JUMPDEST DUP2 EQ PUSH2 0x23AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C0 DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DB PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23EA DUP5 DUP3 DUP6 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241E DUP3 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242E DUP2 PUSH2 0x2413 JUMP JUMPDEST DUP2 EQ PUSH2 0x2439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x244B DUP2 PUSH2 0x2425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2468 JUMPI PUSH2 0x2467 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2476 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2487 DUP6 DUP3 DUP7 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24A6 DUP2 PUSH2 0x2491 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x249D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24E0 JUMPI PUSH2 0x24DF PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24EE DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x24FF DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2510 DUP7 DUP3 DUP8 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2530 DUP2 PUSH2 0x251A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x254B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2527 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x255A DUP2 PUSH2 0x2413 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2575 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2591 JUMPI PUSH2 0x2590 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x259F DUP5 DUP3 DUP6 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25C1 DUP2 PUSH2 0x25A8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25DC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25B8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25F9 JUMPI PUSH2 0x25F8 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2607 DUP6 DUP3 DUP7 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2618 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x262B DUP2 PUSH2 0x25A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2648 DUP2 PUSH2 0x2622 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2672 DUP5 DUP3 DUP6 ADD PUSH2 0x2639 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2694 JUMPI PUSH2 0x2693 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A2 DUP7 DUP3 DUP8 ADD PUSH2 0x23B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x26B3 DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x26C4 DUP7 DUP3 DUP8 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26E5 JUMPI PUSH2 0x26E4 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F3 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2704 DUP6 DUP3 DUP7 ADD PUSH2 0x243C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x271D DUP2 PUSH2 0x239A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2739 JUMPI PUSH2 0x2738 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2747 DUP5 DUP3 DUP6 ADD PUSH2 0x270E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2797 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x27AA JUMPI PUSH2 0x27A9 PUSH2 0x2750 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x27EA DUP3 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x27F5 DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281E DUP3 PUSH2 0x251A JUMP JUMPDEST SWAP2 POP PUSH2 0x2829 DUP4 PUSH2 0x251A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2841 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2853 DUP3 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x285E DUP4 PUSH2 0x22AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2876 JUMPI PUSH2 0x2875 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2891 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x289E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x28AB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656C696769626C65207269676874206E6F772C2066756E6473206361 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E2062652072656465656D206166746572206C6F636B696E6720706572696F64 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290F PUSH1 0x40 DUP4 PUSH2 0x22EE JUMP JUMPDEST SWAP2 POP PUSH2 0x291A DUP3 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x293E DUP2 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2950 DUP3 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x295B DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x2977 JUMPI PUSH2 0x2976 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x29D4 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29AF PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x29BF JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x29CD DUP6 PUSH2 0x297D JUMP JUMPDEST SWAP5 POP PUSH2 0x2994 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x29ED JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST DUP2 PUSH2 0x29FB JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2AA9 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2A11 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2A1B JUMPI PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x2AA9 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2A2D JUMPI PUSH2 0x2A2C PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x2A44 JUMPI PUSH2 0x2A43 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x2AA9 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2A7F JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x2A7A JUMPI PUSH2 0x2A79 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST PUSH2 0x2AA9 JUMP JUMPDEST PUSH2 0x2A8C DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x298A JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x2AA2 PUSH2 0x27B0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2ABB DUP3 PUSH2 0x22AF JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC6 DUP4 PUSH2 0x251A JUMP JUMPDEST SWAP3 POP PUSH2 0x2AF3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x29DD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x22B9 JUMP JUMPDEST PUSH2 0x2B4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B68 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x2B75 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2BB6 DUP3 PUSH2 0x251A JUMP JUMPDEST SWAP2 POP PUSH2 0x2BC1 DUP4 PUSH2 0x251A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2BD1 JUMPI PUSH2 0x2BD0 PUSH2 0x2AFB JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2BF1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x2BFE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2551 JUMP JUMPDEST PUSH2 0x2C0B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x22B9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2C1C DUP2 PUSH2 0x2491 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C39 DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C55 JUMPI PUSH2 0x2C54 PUSH2 0x2395 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C63 DUP5 DUP3 DUP6 ADD PUSH2 0x2C2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C8D DUP3 PUSH2 0x2C6C JUMP JUMPDEST PUSH2 0x2C97 DUP2 DUP6 PUSH2 0x2C77 JUMP JUMPDEST SWAP4 POP PUSH2 0x2CA7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x22FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBF DUP3 DUP5 PUSH2 0x2C82 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE DUP1 0x22 KECCAK256 0xD8 0xEB SHR PUSH7 0xF4881D656C7EC4 CALLDATALOAD PUSH29 0x2B4A3F67C38C0F86D8AAC7241B18F964736F6C63430008150033000000 ","sourceMap":"88:4624:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5780:116:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6152:148:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1470:214:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5441:151:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5636:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6349:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;129:27:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1774:218:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;889:532:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;409:33:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1688:427:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;621:97:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3610:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1163:213:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2162:610:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2817:809;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;368:34:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6503:105:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5950:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6658:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;407:68:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6859:112:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;486:129:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3734:95;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;861:215:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543::0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3632:97:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5780:116:7;5832:7;5858:6;:16;;;5883:4;5858:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5851:38;;5780:116;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;6152:148:7:-;6222:7;6248:45;6265:6;6273:19;6248:16;:45::i;:::-;6241:52;;6152:148;;;:::o;4293:186:4:-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1470:214:22:-;1549:7;1569:11;1583:40;1593:6;1601:21;:19;:21::i;:::-;1583:9;:40::i;:::-;1569:54;;1641:35;1672:3;1663:6;:12;;;;:::i;:::-;1641:21;:35::i;:::-;1634:42;;;1470:214;;;:::o;3144:97:4:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;5441:151:7:-;5522:5;5568:17;:15;:17::i;:::-;5546:19;:39;;;;:::i;:::-;5539:46;;5441:151;:::o;5636:94::-;5682:7;5716:6;5701:22;;5636:94;:::o;6349:108::-;6407:7;6433:17;6426:24;;6349:108;;;:::o;129:27:24:-;;;;;;;;;;;;;:::o;1774:218:22:-;1851:7;1871:14;1888:27;1908:6;1888:19;:27::i;:::-;1871:44;;1942:42;1954:6;1962:21;:19;:21::i;:::-;1942:11;:42::i;:::-;1933:6;:51;;;;:::i;:::-;1926:58;;;1774:218;;;:::o;889:532:24:-;974:7;993:17;1013:20;1024:8;1013:10;:20::i;:::-;993:40;;1056:9;1047:6;:18;1043:110;;;1114:8;1124:6;1132:9;1088:54;;;;;;;;;;;;;:::i;:::-;;;;;;;;1043:110;1163:14;1180:22;1195:6;1180:14;:22::i;:::-;1163:39;;1212:48;1221:12;:10;:12::i;:::-;1235:8;1245:6;1253;1212:8;:48::i;:::-;1270:28;1283:6;1291;1270:12;:28::i;:::-;1374:15;1331:21;:33;1353:10;1331:33;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;1408:6;1401:13;;;;889:532;;;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;409:33:22:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1688:427:24:-;1769:7;1788:17;1808;1816:8;1808:7;:17::i;:::-;1788:37;;1848:9;1839:6;:18;1835:107;;;1903:8;1913:6;1921:9;1880:51;;;;;;;;;;;;;:::i;:::-;;;;;;;;1835:107;1952:14;1969:19;1981:6;1969:11;:19::i;:::-;1952:36;;1998:48;2007:12;:10;:12::i;:::-;2021:8;2031:6;2039;1998:8;:48::i;:::-;2056:28;2069:6;2077;2056:12;:28::i;:::-;2101:6;2094:13;;;;1688:427;;;;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;621:97:24:-;1531:13:0;:11;:13::i;:::-;702:9:24::1;686:13;;:25;;;;;;;;;;;;;;;;;;621:97:::0;:::o;3610:178:4:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1163:213:22:-;1238:7;1258:14;1275:25;1293:6;1275:17;:25::i;:::-;1258:42;;1327:41;1337:6;1345:22;:20;:22::i;:::-;1327:9;:41::i;:::-;1318:6;:50;;;;:::i;:::-;1311:57;;;1163:213;;;:::o;2162:610:24:-;2262:7;2333:17;:15;:17::i;:::-;2311:39;;:18;:16;:18::i;:::-;:39;;;;2303:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;2429:17;2449:18;2461:5;2449:11;:18::i;:::-;2429:38;;2490:9;2481:6;:18;2477:108;;;2549:5;2556:6;2564:9;2522:52;;;;;;;;;;;;;:::i;:::-;;;;;;;;2477:108;2595:14;2612:23;2628:6;2612:15;:23::i;:::-;2595:40;;2645:30;2660:6;2668;2645:14;:30::i;:::-;2685:56;2695:12;:10;:12::i;:::-;2709:8;2719:5;2726:6;2734;2685:9;:56::i;:::-;2759:6;2752:13;;;;2162:610;;;;;:::o;2817:809::-;2915:7;2986:17;:15;:17::i;:::-;2964:39;;:18;:16;:18::i;:::-;:39;;;;2956:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;3289:17;3309:16;3319:5;3309:9;:16::i;:::-;3289:36;;3348:9;3339:6;:18;3335:106;;;3405:5;3412:6;3420:9;3380:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;3335:106;3451:14;3468:21;3482:6;3468:13;:21::i;:::-;3451:38;;3499:30;3514:6;3522;3499:14;:30::i;:::-;3539:56;3549:12;:10;:12::i;:::-;3563:8;3573:5;3580:6;3588;3539:9;:56::i;:::-;3613:6;3606:13;;;;2817:809;;;;;:::o;368:34:22:-;;;;:::o;6503:105:7:-;6558:7;6584:17;6577:24;;6503:105;;;:::o;5950:148::-;6020:7;6046:45;6063:6;6071:19;6046:16;:45::i;:::-;6039:52;;5950:148;;;:::o;6658:153::-;6723:7;6749:55;6766:16;6776:5;6766:9;:16::i;:::-;6784:19;6749:16;:55::i;:::-;6742:62;;6658:153;;;:::o;407:68:24:-;;;;;;;;;;;;;;;;;;;;;;:::o;6859:112:7:-;6922:7;6948:16;6958:5;6948:9;:16::i;:::-;6941:23;;6859:112;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;486:129:24:-;534:6;594:13;;;;;;;;;;;558:21;:33;580:10;558:33;;;;;;;;;;;;;;;;;;;;;;;;;:49;;;;:::i;:::-;551:56;;486:129;:::o;3734:95::-;1531:13:0;:11;:13::i;:::-;3818:4:24::1;3797:18;:25;;;;3734:95:::0;:::o;861:215:22:-;939:7;959:11;973:43;985:6;993:22;:20;:22::i;:::-;973:11;:43::i;:::-;959:57;;1034:34;1064:3;1055:6;:12;;;;:::i;:::-;1034:20;:34::i;:::-;1027:41;;;861:215;;;:::o;2543::0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3632:97:24:-;1531:13:0;:11;:13::i;:::-;3718:4:24::1;3696:19;:26;;;;3632:97:::0;:::o;10219:213:7:-;10316:7;10342:83;10372:1;10356:13;:11;:13::i;:::-;:17;;;;:::i;:::-;10397;:15;:17::i;:::-;10391:2;:23;;;;:::i;:::-;10375:13;:11;:13::i;:::-;:39;;;;:::i;:::-;10416:8;10342:6;:13;;:83;;;;;;:::i;:::-;10335:90;;10219:213;;;;:::o;656:96:12:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;3273:115:22:-;3335:7;3362:18;;3355:25;;3273:115;:::o;3842:185::-;3923:7;3950:69;3964:14;733:3;4000:18;3950:6;:13;;:69;;;;;;:::i;:::-;3943:76;;3842:185;;;;:::o;7418:147:7:-;7488:7;7514:44;7531:6;7539:18;7514:16;:44::i;:::-;7507:51;;7418:147;;;:::o;10663:477:4:-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;12313:90:7:-;12371:5;12313:90;:::o;7617:146::-;7685:7;7711:45;7728:6;7736:19;7711:16;:45::i;:::-;7704:52;;7617:146;;;:::o;4193:204:22:-;4276:7;4303:86;4317:14;733:3;4333:14;:35;;;;:::i;:::-;4370:18;4303:6;:13;;:86;;;;;;:::i;:::-;4296:93;;4193:204;;;;:::o;2079:435::-;2200:11;2214:43;2226:6;2234:22;:20;:22::i;:::-;2214:11;:43::i;:::-;2200:57;;2268:17;2288:20;:18;:20::i;:::-;2268:40;;2321:48;2336:6;2344:8;2354:6;2362;2321:14;:48::i;:::-;2392:1;2386:3;:7;:37;;;;;2418:4;2397:26;;:9;:26;;;;2386:37;2382:125;;;2440:55;2470:7;:5;:7::i;:::-;2480:9;2491:3;2440:22;:55::i;:::-;2382:125;2189:325;;2079:435;;;;:::o;4102:208:24:-;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7221:143:7:-;7287:7;7313:44;7330:6;7338:18;7313:16;:44::i;:::-;7306:51;;7221:143;;;:::o;3150:117:22:-;3213:7;3240:19;;3233:26;;3150:117;:::o;724:111:24:-;781:6;812:15;798:30;;724:111;:::o;4320:216::-;;;:::o;2599:507:22:-;2788:11;2802:40;2812:6;2820:21;:19;:21::i;:::-;2802:9;:40::i;:::-;2788:54;;2853:17;2873:19;:17;:19::i;:::-;2853:39;;2905:56;2921:6;2929:8;2939:5;2946:6;2954;2905:15;:56::i;:::-;2984:1;2978:3;:7;:37;;;;;3010:4;2989:26;;:9;:26;;;;2978:37;2974:125;;;3032:55;3062:7;:5;:7::i;:::-;3072:9;3083:3;3032:22;:55::i;:::-;2974:125;2777:329;;2599:507;;;;;:::o;9882:213:7:-;9979:7;10005:83;10041:17;:15;:17::i;:::-;10035:2;:23;;;;:::i;:::-;10019:13;:11;:13::i;:::-;:39;;;;:::i;:::-;10076:1;10060:13;:11;:13::i;:::-;:17;;;;:::i;:::-;10079:8;10005:6;:13;;:83;;;;;;:::i;:::-;9998:90;;9882:213;;;;:::o;7024:147::-;7093:7;7119:45;7136:6;7144:19;7119:16;:45::i;:::-;7112:52;;7024:147;;;:::o;8051:302:20:-;8152:7;8171:14;8188:25;8195:1;8198;8201:11;8188:6;:25::i;:::-;8171:42;;8227:26;8244:8;8227:16;:26::i;:::-;:59;;;;;8285:1;8270:11;8257:25;;;;;:::i;:::-;;8267:1;8264;8257:25;:29;8227:59;8223:101;;;8312:1;8302:11;;;;;:::i;:::-;;;8223:101;8340:6;8333:13;;;8051:302;;;;;;:::o;9949:432:4:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3396:109:22:-;3457:7;3492:4;3477:20;;3396:109;:::o;10496:830:7:-;11164:65;11191:6;11199;11215:4;11222:6;11164:26;:65::i;:::-;11239:23;11245:8;11255:6;11239:5;:23::i;:::-;11294:8;11278:41;;11286:6;11278:41;;;11304:6;11312;11278:41;;;;;;;:::i;:::-;;;;;;;;10496:830;;;;:::o;1303:160:10:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;3511:108:22:-;3571:7;3606:4;3591:20;;3511:108;:::o;11393:914:7:-;11580:5;11570:15;;:6;:15;;;11566:84;;11601:38;11617:5;11624:6;11632;11601:15;:38::i;:::-;11566:84;12157:20;12163:5;12170:6;12157:5;:20::i;:::-;12187:48;12210:6;12218:8;12228:6;12187:22;:48::i;:::-;12278:5;12251:49;;12268:8;12251:49;;12260:6;12251:49;;;12285:6;12293;12251:49;;;;;;;:::i;:::-;;;;;;;;11393:914;;;;;:::o;3803:4116:20:-;3885:14;4232:13;4252:1;4248;:5;4232:21;;4312:13;4437:1;4433:6;4430:1;4427;4420:20;4493:5;4489:2;4486:13;4478:5;4474:2;4470:14;4466:34;4457:43;;4392:122;4604:1;4595:5;:10;4591:368;;4933:11;4925:5;:19;;;;;:::i;:::-;;;4918:26;;;;;;4591:368;5080:5;5065:11;:20;5061:88;;5112:22;;;;;;;;;;;;;;5061:88;5404:17;5539:11;5536:1;5533;5526:25;5513:38;;5667:5;5656:9;5653:20;5646:5;5642:32;5633:41;;5711:9;5704:5;5700:21;5691:30;;5939:12;5973:11;5969:1;:15;5954:11;:31;5939:46;;6105:4;6092:11;6088:22;6073:37;;6197:4;6190:5;6186:16;6177:25;;6354:1;6347:4;6340;6337:1;6333:12;6329:23;6325:31;6317:39;;6453:4;6445:5;:12;6436:21;;;;6775:15;6813:1;6798:11;6794:1;:15;6793:21;6775:39;;7060:7;7046:11;:21;7042:1;:25;7031:36;;;;7129:7;7115:11;:21;7111:1;:25;7100:36;;;;7199:7;7185:11;:21;7181:1;:25;7170:36;;;;7269:7;7255:11;:21;7251:1;:25;7240:36;;;;7339:7;7325:11;:21;7321:1;:25;7310:36;;;;7410:7;7396:11;:21;7392:1;:25;7381:36;;;;7868:7;7860:5;:15;7851:24;;7889:13;;;;;3803:4116;;;;;;:::o;14993:122::-;15061:4;15107:1;15102;15090:8;15084:15;;;;;;;;:::i;:::-;;:19;;;;:::i;:::-;:24;;;15077:31;;14993:122;;;:::o;1702:188:10:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;4059:629:10:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;8247:206:4:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2705:151:11:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:25;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:246::-;803:1;813:113;827:6;824:1;821:13;813:113;;;912:1;907:3;903:11;897:18;893:1;888:3;884:11;877:39;849:2;846:1;842:10;837:15;;813:113;;;960:1;951:6;946:3;942:16;935:27;784:184;722:246;;;:::o;974:102::-;1015:6;1066:2;1062:7;1057:2;1050:5;1046:14;1042:28;1032:38;;974:102;;;:::o;1082:377::-;1170:3;1198:39;1231:5;1198:39;:::i;:::-;1253:71;1317:6;1312:3;1253:71;:::i;:::-;1246:78;;1333:65;1391:6;1386:3;1379:4;1372:5;1368:16;1333:65;:::i;:::-;1423:29;1445:6;1423:29;:::i;:::-;1418:3;1414:39;1407:46;;1174:285;1082:377;;;;:::o;1465:313::-;1578:4;1616:2;1605:9;1601:18;1593:26;;1665:9;1659:4;1655:20;1651:1;1640:9;1636:17;1629:47;1693:78;1766:4;1757:6;1693:78;:::i;:::-;1685:86;;1465:313;;;;:::o;1865:117::-;1974:1;1971;1964:12;2111:122;2184:24;2202:5;2184:24;:::i;:::-;2177:5;2174:35;2164:63;;2223:1;2220;2213:12;2164:63;2111:122;:::o;2239:139::-;2285:5;2323:6;2310:20;2301:29;;2339:33;2366:5;2339:33;:::i;:::-;2239:139;;;;:::o;2384:329::-;2443:6;2492:2;2480:9;2471:7;2467:23;2463:32;2460:119;;;2498:79;;:::i;:::-;2460:119;2618:1;2643:53;2688:7;2679:6;2668:9;2664:22;2643:53;:::i;:::-;2633:63;;2589:117;2384:329;;;;:::o;2719:126::-;2756:7;2796:42;2789:5;2785:54;2774:65;;2719:126;;;:::o;2851:96::-;2888:7;2917:24;2935:5;2917:24;:::i;:::-;2906:35;;2851:96;;;:::o;2953:122::-;3026:24;3044:5;3026:24;:::i;:::-;3019:5;3016:35;3006:63;;3065:1;3062;3055:12;3006:63;2953:122;:::o;3081:139::-;3127:5;3165:6;3152:20;3143:29;;3181:33;3208:5;3181:33;:::i;:::-;3081:139;;;;:::o;3226:474::-;3294:6;3302;3351:2;3339:9;3330:7;3326:23;3322:32;3319:119;;;3357:79;;:::i;:::-;3319:119;3477:1;3502:53;3547:7;3538:6;3527:9;3523:22;3502:53;:::i;:::-;3492:63;;3448:117;3604:2;3630:53;3675:7;3666:6;3655:9;3651:22;3630:53;:::i;:::-;3620:63;;3575:118;3226:474;;;;;:::o;3706:90::-;3740:7;3783:5;3776:13;3769:21;3758:32;;3706:90;;;:::o;3802:109::-;3883:21;3898:5;3883:21;:::i;:::-;3878:3;3871:34;3802:109;;:::o;3917:210::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:65;4117:1;4106:9;4102:17;4093:6;4055:65;:::i;:::-;3917:210;;;;:::o;4133:619::-;4210:6;4218;4226;4275:2;4263:9;4254:7;4250:23;4246:32;4243:119;;;4281:79;;:::i;:::-;4243:119;4401:1;4426:53;4471:7;4462:6;4451:9;4447:22;4426:53;:::i;:::-;4416:63;;4372:117;4528:2;4554:53;4599:7;4590:6;4579:9;4575:22;4554:53;:::i;:::-;4544:63;;4499:118;4656:2;4682:53;4727:7;4718:6;4707:9;4703:22;4682:53;:::i;:::-;4672:63;;4627:118;4133:619;;;;;:::o;4758:86::-;4793:7;4833:4;4826:5;4822:16;4811:27;;4758:86;;;:::o;4850:112::-;4933:22;4949:5;4933:22;:::i;:::-;4928:3;4921:35;4850:112;;:::o;4968:214::-;5057:4;5095:2;5084:9;5080:18;5072:26;;5108:67;5172:1;5161:9;5157:17;5148:6;5108:67;:::i;:::-;4968:214;;;;:::o;5188:118::-;5275:24;5293:5;5275:24;:::i;:::-;5270:3;5263:37;5188:118;;:::o;5312:222::-;5405:4;5443:2;5432:9;5428:18;5420:26;;5456:71;5524:1;5513:9;5509:17;5500:6;5456:71;:::i;:::-;5312:222;;;;:::o;5540:329::-;5599:6;5648:2;5636:9;5627:7;5623:23;5619:32;5616:119;;;5654:79;;:::i;:::-;5616:119;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5540:329;;;;:::o;5875:93::-;5911:7;5951:10;5944:5;5940:22;5929:33;;5875:93;;;:::o;5974:115::-;6059:23;6076:5;6059:23;:::i;:::-;6054:3;6047:36;5974:115;;:::o;6095:218::-;6186:4;6224:2;6213:9;6209:18;6201:26;;6237:69;6303:1;6292:9;6288:17;6279:6;6237:69;:::i;:::-;6095:218;;;;:::o;6319:474::-;6387:6;6395;6444:2;6432:9;6423:7;6419:23;6415:32;6412:119;;;6450:79;;:::i;:::-;6412:119;6570:1;6595:53;6640:7;6631:6;6620:9;6616:22;6595:53;:::i;:::-;6585:63;;6541:117;6697:2;6723:53;6768:7;6759:6;6748:9;6744:22;6723:53;:::i;:::-;6713:63;;6668:118;6319:474;;;;;:::o;6799:120::-;6871:23;6888:5;6871:23;:::i;:::-;6864:5;6861:34;6851:62;;6909:1;6906;6899:12;6851:62;6799:120;:::o;6925:137::-;6970:5;7008:6;6995:20;6986:29;;7024:32;7050:5;7024:32;:::i;:::-;6925:137;;;;:::o;7068:327::-;7126:6;7175:2;7163:9;7154:7;7150:23;7146:32;7143:119;;;7181:79;;:::i;:::-;7143:119;7301:1;7326:52;7370:7;7361:6;7350:9;7346:22;7326:52;:::i;:::-;7316:62;;7272:116;7068:327;;;;:::o;7401:619::-;7478:6;7486;7494;7543:2;7531:9;7522:7;7518:23;7514:32;7511:119;;;7549:79;;:::i;:::-;7511:119;7669:1;7694:53;7739:7;7730:6;7719:9;7715:22;7694:53;:::i;:::-;7684:63;;7640:117;7796:2;7822:53;7867:7;7858:6;7847:9;7843:22;7822:53;:::i;:::-;7812:63;;7767:118;7924:2;7950:53;7995:7;7986:6;7975:9;7971:22;7950:53;:::i;:::-;7940:63;;7895:118;7401:619;;;;;:::o;8026:474::-;8094:6;8102;8151:2;8139:9;8130:7;8126:23;8122:32;8119:119;;;8157:79;;:::i;:::-;8119:119;8277:1;8302:53;8347:7;8338:6;8327:9;8323:22;8302:53;:::i;:::-;8292:63;;8248:117;8404:2;8430:53;8475:7;8466:6;8455:9;8451:22;8430:53;:::i;:::-;8420:63;;8375:118;8026:474;;;;;:::o;8506:143::-;8563:5;8594:6;8588:13;8579:22;;8610:33;8637:5;8610:33;:::i;:::-;8506:143;;;;:::o;8655:351::-;8725:6;8774:2;8762:9;8753:7;8749:23;8745:32;8742:119;;;8780:79;;:::i;:::-;8742:119;8900:1;8925:64;8981:7;8972:6;8961:9;8957:22;8925:64;:::i;:::-;8915:74;;8871:128;8655:351;;;;:::o;9012:180::-;9060:77;9057:1;9050:88;9157:4;9154:1;9147:15;9181:4;9178:1;9171:15;9198:320;9242:6;9279:1;9273:4;9269:12;9259:22;;9326:1;9320:4;9316:12;9347:18;9337:81;;9403:4;9395:6;9391:17;9381:27;;9337:81;9465:2;9457:6;9454:14;9434:18;9431:38;9428:84;;9484:18;;:::i;:::-;9428:84;9249:269;9198:320;;;:::o;9524:180::-;9572:77;9569:1;9562:88;9669:4;9666:1;9659:15;9693:4;9690:1;9683:15;9710:191;9750:3;9769:20;9787:1;9769:20;:::i;:::-;9764:25;;9803:20;9821:1;9803:20;:::i;:::-;9798:25;;9846:1;9843;9839:9;9832:16;;9867:3;9864:1;9861:10;9858:36;;;9874:18;;:::i;:::-;9858:36;9710:191;;;;:::o;9907:188::-;9945:3;9964:18;9980:1;9964:18;:::i;:::-;9959:23;;9996:18;10012:1;9996:18;:::i;:::-;9991:23;;10037:1;10034;10030:9;10023:16;;10060:4;10055:3;10052:13;10049:39;;;10068:18;;:::i;:::-;10049:39;9907:188;;;;:::o;10101:194::-;10141:4;10161:20;10179:1;10161:20;:::i;:::-;10156:25;;10195:20;10213:1;10195:20;:::i;:::-;10190:25;;10239:1;10236;10232:9;10224:17;;10263:1;10257:4;10254:11;10251:37;;;10268:18;;:::i;:::-;10251:37;10101:194;;;;:::o;10301:442::-;10450:4;10488:2;10477:9;10473:18;10465:26;;10501:71;10569:1;10558:9;10554:17;10545:6;10501:71;:::i;:::-;10582:72;10650:2;10639:9;10635:18;10626:6;10582:72;:::i;:::-;10664;10732:2;10721:9;10717:18;10708:6;10664:72;:::i;:::-;10301:442;;;;;;:::o;10749:251::-;10889:34;10885:1;10877:6;10873:14;10866:58;10958:34;10953:2;10945:6;10941:15;10934:59;10749:251;:::o;11006:366::-;11148:3;11169:67;11233:2;11228:3;11169:67;:::i;:::-;11162:74;;11245:93;11334:3;11245:93;:::i;:::-;11363:2;11358:3;11354:12;11347:19;;11006:366;;;:::o;11378:419::-;11544:4;11582:2;11571:9;11567:18;11559:26;;11631:9;11625:4;11621:20;11617:1;11606:9;11602:17;11595:47;11659:131;11785:4;11659:131;:::i;:::-;11651:139;;11378:419;;;:::o;11803:197::-;11842:3;11861:19;11878:1;11861:19;:::i;:::-;11856:24;;11894:19;11911:1;11894:19;:::i;:::-;11889:24;;11936:1;11933;11929:9;11922:16;;11959:10;11954:3;11951:19;11948:45;;;11973:18;;:::i;:::-;11948:45;11803:197;;;;:::o;12006:102::-;12048:8;12095:5;12092:1;12088:13;12067:34;;12006:102;;;:::o;12114:848::-;12175:5;12182:4;12206:6;12197:15;;12230:5;12221:14;;12244:712;12265:1;12255:8;12252:15;12244:712;;;12360:4;12355:3;12351:14;12345:4;12342:24;12339:50;;;12369:18;;:::i;:::-;12339:50;12419:1;12409:8;12405:16;12402:451;;;12834:4;12827:5;12823:16;12814:25;;12402:451;12884:4;12878;12874:15;12866:23;;12914:32;12937:8;12914:32;:::i;:::-;12902:44;;12244:712;;;12114:848;;;;;;;:::o;12968:1073::-;13022:5;13213:8;13203:40;;13234:1;13225:10;;13236:5;;13203:40;13262:4;13252:36;;13279:1;13270:10;;13281:5;;13252:36;13348:4;13396:1;13391:27;;;;13432:1;13427:191;;;;13341:277;;13391:27;13409:1;13400:10;;13411:5;;;13427:191;13472:3;13462:8;13459:17;13456:43;;;13479:18;;:::i;:::-;13456:43;13528:8;13525:1;13521:16;13512:25;;13563:3;13556:5;13553:14;13550:40;;;13570:18;;:::i;:::-;13550:40;13603:5;;;13341:277;;13727:2;13717:8;13714:16;13708:3;13702:4;13699:13;13695:36;13677:2;13667:8;13664:16;13659:2;13653:4;13650:12;13646:35;13630:111;13627:246;;;13783:8;13777:4;13773:19;13764:28;;13818:3;13811:5;13808:14;13805:40;;;13825:18;;:::i;:::-;13805:40;13858:5;;13627:246;13898:42;13936:3;13926:8;13920:4;13917:1;13898:42;:::i;:::-;13883:57;;;;13972:4;13967:3;13963:14;13956:5;13953:25;13950:51;;;13981:18;;:::i;:::-;13950:51;14030:4;14023:5;14019:16;14010:25;;12968:1073;;;;;;:::o;14047:281::-;14105:5;14129:23;14147:4;14129:23;:::i;:::-;14121:31;;14173:25;14189:8;14173:25;:::i;:::-;14161:37;;14217:104;14254:66;14244:8;14238:4;14217:104;:::i;:::-;14208:113;;14047:281;;;;:::o;14334:180::-;14382:77;14379:1;14372:88;14479:4;14476:1;14469:15;14503:4;14500:1;14493:15;14520:332;14641:4;14679:2;14668:9;14664:18;14656:26;;14692:71;14760:1;14749:9;14745:17;14736:6;14692:71;:::i;:::-;14773:72;14841:2;14830:9;14826:18;14817:6;14773:72;:::i;:::-;14520:332;;;;;:::o;14858:::-;14979:4;15017:2;15006:9;15002:18;14994:26;;15030:71;15098:1;15087:9;15083:17;15074:6;15030:71;:::i;:::-;15111:72;15179:2;15168:9;15164:18;15155:6;15111:72;:::i;:::-;14858:332;;;;;:::o;15196:180::-;15244:77;15241:1;15234:88;15341:4;15338:1;15331:15;15365:4;15362:1;15355:15;15382:170;15412:1;15429:18;15445:1;15429:18;:::i;:::-;15424:23;;15461:18;15477:1;15461:18;:::i;:::-;15456:23;;15498:1;15488:35;;15503:18;;:::i;:::-;15488:35;15544:1;15541;15537:9;15532:14;;15382:170;;;;:::o;15558:442::-;15707:4;15745:2;15734:9;15730:18;15722:26;;15758:71;15826:1;15815:9;15811:17;15802:6;15758:71;:::i;:::-;15839:72;15907:2;15896:9;15892:18;15883:6;15839:72;:::i;:::-;15921;15989:2;15978:9;15974:18;15965:6;15921:72;:::i;:::-;15558:442;;;;;;:::o;16006:116::-;16076:21;16091:5;16076:21;:::i;:::-;16069:5;16066:32;16056:60;;16112:1;16109;16102:12;16056:60;16006:116;:::o;16128:137::-;16182:5;16213:6;16207:13;16198:22;;16229:30;16253:5;16229:30;:::i;:::-;16128:137;;;;:::o;16271:345::-;16338:6;16387:2;16375:9;16366:7;16362:23;16358:32;16355:119;;;16393:79;;:::i;:::-;16355:119;16513:1;16538:61;16591:7;16582:6;16571:9;16567:22;16538:61;:::i;:::-;16528:71;;16484:125;16271:345;;;;:::o;16622:98::-;16673:6;16707:5;16701:12;16691:22;;16622:98;;;:::o;16726:147::-;16827:11;16864:3;16849:18;;16726:147;;;;:::o;16879:386::-;16983:3;17011:38;17043:5;17011:38;:::i;:::-;17065:88;17146:6;17141:3;17065:88;:::i;:::-;17058:95;;17162:65;17220:6;17215:3;17208:4;17201:5;17197:16;17162:65;:::i;:::-;17252:6;17247:3;17243:16;17236:23;;16987:278;16879:386;;;;:::o;17271:271::-;17401:3;17423:93;17512:3;17503:6;17423:93;:::i;:::-;17416:100;;17533:3;17526:10;;17271:271;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","asset()":"38d52e0f","balanceOf(address)":"70a08231","changeEntryFee(uint256)":"f7d978a2","changeExitFee(uint256)":"ef5ddcba","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","entryFeeBasisPoints()":"ba0af7a9","exitFeeBasisPoints()":"86915573","getWithdrawEpoch()":"e97add57","maxDeposit(address)":"402d267d","maxMint(address)":"c63d75b6","maxRedeem(address)":"d905777e","maxWithdraw(address)":"ce96cb77","mint(uint256,address)":"94bf804d","name()":"06fdde03","owner()":"8da5cb5b","previewDeposit(uint256)":"ef8b30f7","previewMint(uint256)":"b3d7f6b9","previewRedeem(uint256)":"4cdad506","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","renounceOwnership()":"715018a6","setDuration(uint32)":"9732e720","stakeDuration()":"40f02ab6","stakeTimeEpochMapping(address)":"d0405421","symbol()":"95d89b41","totalAssets()":"01e1d114","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw(uint256,address,address)":"b460af94"}},"metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_entryBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exitBasisPoints\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_duration\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxDeposit\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxRedeem\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"ERC4626ExceededMaxWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"changeEntryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"changeExitFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exitFeeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawEpoch\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"previewRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_duration\",\"type\":\"uint32\"}],\"name\":\"setDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"stakeTimeEpochMapping\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"epoch\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC4626ExceededMaxDeposit(address,uint256,uint256)\":[{\"details\":\"Attempted to deposit more assets than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxMint(address,uint256,uint256)\":[{\"details\":\"Attempted to mint more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxRedeem(address,uint256,uint256)\":[{\"details\":\"Attempted to redeem more shares than the max amount for `receiver`.\"}],\"ERC4626ExceededMaxWithdraw(address,uint256,uint256)\":[{\"details\":\"Attempted to withdraw more assets than the max amount for `receiver`.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"asset()\":{\"details\":\"See {IERC4626-asset}. \"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"convertToAssets(uint256)\":{\"details\":\"See {IERC4626-convertToAssets}. \"},\"convertToShares(uint256)\":{\"details\":\"See {IERC4626-convertToShares}. \"},\"decimals()\":{\"details\":\"Decimals are computed by adding the decimal offset on top of the underlying asset's decimals. This \\\"original\\\" value is cached during construction of the vault contract. If this read operation fails (e.g., the asset has not been created yet), a default of 18 is used to represent the underlying asset's decimals. See {IERC20Metadata-decimals}.\"},\"deposit(uint256,address)\":{\"details\":\"See {IERC4626-deposit}. \"},\"maxDeposit(address)\":{\"details\":\"See {IERC4626-maxDeposit}. \"},\"maxMint(address)\":{\"details\":\"See {IERC4626-maxMint}. \"},\"maxRedeem(address)\":{\"details\":\"See {IERC4626-maxRedeem}. \"},\"maxWithdraw(address)\":{\"details\":\"See {IERC4626-maxWithdraw}. \"},\"mint(uint256,address)\":{\"details\":\"See {IERC4626-mint}. As opposed to {deposit}, minting is allowed even if the vault is in a state where the price of a share is zero. In this case, the shares will be minted without requiring any assets to be deposited.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"previewDeposit(uint256)\":{\"details\":\"Preview taking an entry fee on deposit. See {IERC4626-previewDeposit}.\"},\"previewMint(uint256)\":{\"details\":\"Preview adding an entry fee on mint. See {IERC4626-previewMint}.\"},\"previewRedeem(uint256)\":{\"details\":\"Preview taking an exit fee on redeem. See {IERC4626-previewRedeem}.\"},\"previewWithdraw(uint256)\":{\"details\":\"Preview adding an exit fee on withdraw. See {IERC4626-previewWithdraw}.\"},\"redeem(uint256,address,address)\":{\"details\":\"See {IERC4626-redeem}. \"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalAssets()\":{\"details\":\"See {IERC4626-totalAssets}. \"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256,address,address)\":{\"details\":\"See {IERC4626-withdraw}. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Vault.sol\":\"Vault\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC4626.sol\":{\"keccak256\":\"0x207f64371bc0fcc5be86713aa5da109a870cc3a6da50e93b64ee881e369b593d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://548667cfa76683767c2c610b577f6c2f0675d0ce28f53c3f37b969c84a56b205\",\"dweb:/ipfs/QmUzA1CKC6bDdULuS44wGd7PWBNLiHb6bh7oHwJBDZSLAx\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC4626.sol\":{\"keccak256\":\"0x1837547e04d5fe5334eeb77a345683c22995f1e7aa033020757ddf83a80fc72d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d6031bc0e6f70edceb4e63fd624fe6be09dc48f5201c7a9078c26e6a9ef95f\",\"dweb:/ipfs/QmPTEBH7dmU3NgE6vtjMy7xEK54as9VHSgf9ojupwnvoke\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/ERC4626Fees.sol\":{\"keccak256\":\"0xa72aaeba531a648320e29e993d292e19df2b07e12ddefa380eaa1f0cf130dd43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5a3422e00c71907a61a1e93138588985d858adb3052a01afd130150cfa522c1\",\"dweb:/ipfs/QmT5TaMyoyPJy33rFz4MY4VcLnnPc3bKhLmM49vmN5qYTp\"]},\"contracts/Vault.sol\":{\"keccak256\":\"0x709d07986a497d4ae1dff476f5dadd90316d837b929b51161f67eed95bb59135\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7ea0017e0ff4829fc2c2e7ad7715a016489c9b726afcdc3ed288f7d25cb1de5\",\"dweb:/ipfs/QmTvcxVKeNZ3zvX8CA94bCxUDpdUhicAChq1iFKEnLnULW\"]}},\"version\":1}"}}}}}